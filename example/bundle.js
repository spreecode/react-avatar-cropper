/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(13);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _lib = __webpack_require__(26);

	var _lib2 = _interopRequireDefault(_lib);

	var App = _react2["default"].createClass({
	  displayName: "App",

	  getInitialState: function getInitialState() {
	    return {
	      cropperOpen: false,
	      img: null,
	      croppedImg: "http://www.fillmurray.com/400/400"
	    };
	  },
	  handleFileChange: function handleFileChange(dataURI) {
	    this.setState({
	      img: dataURI,
	      croppedImg: this.state.croppedImg,
	      cropperOpen: true
	    });
	  },
	  handleCrop: function handleCrop(dataURI) {
	    this.setState({
	      cropperOpen: false,
	      img: null,
	      croppedImg: dataURI
	    });
	  },
	  handleRequestHide: function handleRequestHide() {
	    this.setState({
	      cropperOpen: false
	    });
	  },
	  render: function render() {
	    return _react2["default"].createElement(
	      "div",
	      null,
	      _react2["default"].createElement(
	        "div",
	        { className: "avatar-photo" },
	        _react2["default"].createElement(FileUpload, { handleFileChange: this.handleFileChange }),
	        _react2["default"].createElement(
	          "div",
	          { className: "avatar-edit" },
	          _react2["default"].createElement(
	            "span",
	            null,
	            "Click to Pick Avatar"
	          ),
	          _react2["default"].createElement("i", { className: "fa fa-camera" })
	        ),
	        _react2["default"].createElement("img", { src: this.state.croppedImg })
	      ),
	      this.state.cropperOpen && _react2["default"].createElement(_lib2["default"], {
	        modalOptions: { header: 'Crop image', dimmer: 'blurring', size: 'small' },
	        onRequestHide: this.handleRequestHide,
	        cropperOpen: this.state.cropperOpen,
	        onCrop: this.handleCrop,
	        image: this.state.img,
	        width: 400,
	        height: 400
	      })
	    );
	  }
	});

	var FileUpload = _react2["default"].createClass({
	  displayName: "FileUpload",

	  handleFile: function handleFile(e) {
	    var reader = new FileReader();
	    var file = e.target.files[0];

	    if (!file) return;

	    reader.onload = (function (img) {
	      _reactDom2["default"].findDOMNode(this.refs["in"]).value = '';
	      this.props.handleFileChange(img.target.result);
	    }).bind(this);
	    reader.readAsDataURL(file);
	  },

	  render: function render() {
	    return _react2["default"].createElement("input", { ref: "in", type: "file", accept: "image/*", onChange: this.handleFile });
	  }
	});

	_reactDom2["default"].render(_react2["default"].createElement(App, null), document.getElementById("content"));

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	if (process.env.NODE_ENV === 'production') {
	  module.exports = __webpack_require__(4);
	} else {
	  module.exports = __webpack_require__(9);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }


	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }



	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	process.prependListener = noop;
	process.prependOnceListener = noop;

	process.listeners = function (name) { return [] }

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.4.1
	 * react.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';var k=__webpack_require__(5),n=__webpack_require__(6),p=__webpack_require__(7),q=__webpack_require__(8),r="function"===typeof Symbol&&Symbol.for,t=r?Symbol.for("react.element"):60103,u=r?Symbol.for("react.portal"):60106,v=r?Symbol.for("react.fragment"):60107,w=r?Symbol.for("react.strict_mode"):60108,x=r?Symbol.for("react.profiler"):60114,y=r?Symbol.for("react.provider"):60109,z=r?Symbol.for("react.context"):60110,A=r?Symbol.for("react.async_mode"):60111,B=
	r?Symbol.for("react.forward_ref"):60112;r&&Symbol.for("react.timeout");var C="function"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=0;c<b;c++)e+="&args[]="+encodeURIComponent(arguments[c+1]);n(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e)}
	var E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?D("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function G(){}
	G.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};
	function M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}
	function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}
	function S(a,b,e,c){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||"undefined"===typeof a?f=null:(f=C&&a[C]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),
	h=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else"object"===d&&(e=""+a,D("31","[object Object]"===e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return g}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}
	function V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g="";null!=e&&(g=(""+e).replace(O,"$&/")+"/");b=Q(b,g,c,d);null==a||S(a,"",V,b);R(b)}
	var X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,"",U,b);R(b)},count:function(a){return null==a?0:S(a,"",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D("143");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,
	_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D("267",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==
	b.key&&(g=""+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.4.1",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,
	assign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;


/***/ }),
/* 5 */
/***/ (function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/

	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var validateFormat = function validateFormat(format) {};

	if (process.env.NODE_ENV !== 'production') {
	  validateFormat = function validateFormat(format) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  };
	}

	function invariant(condition, format, a, b, c, d, e, f) {
	  validateFormat(format);

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 8 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.1
	 * react.development.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var _assign = __webpack_require__(5);
	var invariant = __webpack_require__(6);
	var emptyObject = __webpack_require__(7);
	var warning = __webpack_require__(10);
	var emptyFunction = __webpack_require__(8);
	var checkPropTypes = __webpack_require__(11);

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.4.1';

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

	var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';

	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
	    return null;
	  }
	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }
	  return null;
	}

	// Relying on the `invariant()` implementation lets us
	// have preserve the format and params in the www builds.

	// Exports ReactDOM.createRoot


	// Experimental error-boundary API that can recover from errors within a single
	// render phase

	// Suspense
	var enableSuspense = false;
	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:


	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.


	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


	// Warn about legacy context API


	// Gather advanced timing metrics for Profiler subtrees.


	// Only used in www builds.

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	var didWarnStateUpdateForUnmountedComponent = {};

	function warnNoop(publicInstance, callerName) {
	  {
	    var _constructor = publicInstance.constructor;
	    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
	    var warningKey = componentName + '.' + callerName;
	    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
	      return;
	    }
	    warning(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
	    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} callerName name of the calling function in the public API.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance, callback, callerName) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} callerName name of the calling function in the public API.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @param {?function} callback Called after component is updated.
	   * @param {?string} Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function Component(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	Component.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	Component.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
	  this.updater.enqueueSetState(this, partialState, callback, 'setState');
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	Component.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	{
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    Object.defineProperty(Component.prototype, methodName, {
	      get: function () {
	        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
	        return undefined;
	      }
	    });
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	function ComponentDummy() {}
	ComponentDummy.prototype = Component.prototype;

	/**
	 * Convenience component with default shallow equality check for sCU.
	 */
	function PureComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
	pureComponentPrototype.constructor = PureComponent;
	// Avoid an extra prototype jump for these methods.
	_assign(pureComponentPrototype, Component.prototype);
	pureComponentPrototype.isPureReactComponent = true;

	// an immutable object with a single mutable value
	function createRef() {
	  var refObject = {
	    current: null
	  };
	  {
	    Object.seal(refObject);
	  }
	  return refObject;
	}

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */
	var ReactCurrentOwner = {
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	};

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown = void 0;
	var specialPropRefWarningShown = void 0;

	function hasValidRef(config) {
	  {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	function defineKeyPropWarningGetter(props, displayName) {
	  var warnAboutAccessingKey = function () {
	    if (!specialPropKeyWarningShown) {
	      specialPropKeyWarningShown = true;
	      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
	    }
	  };
	  warnAboutAccessingKey.isReactWarning = true;
	  Object.defineProperty(props, 'key', {
	    get: warnAboutAccessingKey,
	    configurable: true
	  });
	}

	function defineRefPropWarningGetter(props, displayName) {
	  var warnAboutAccessingRef = function () {
	    if (!specialPropRefWarningShown) {
	      specialPropRefWarningShown = true;
	      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
	    }
	  };
	  warnAboutAccessingRef.isReactWarning = true;
	  Object.defineProperty(props, 'ref', {
	    get: warnAboutAccessingRef,
	    configurable: true
	  });
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allows us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    Object.defineProperty(element._store, 'validated', {
	      configurable: false,
	      enumerable: false,
	      writable: true,
	      value: false
	    });
	    // self and source are DEV only properties.
	    Object.defineProperty(element, '_self', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: self
	    });
	    // Two elements created in two different places should be considered
	    // equal for testing purposes and therefore we hide it from enumeration.
	    Object.defineProperty(element, '_source', {
	      configurable: false,
	      enumerable: false,
	      writable: false,
	      value: source
	    });
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://reactjs.org/docs/react-api.html#createelement
	 */
	function createElement(type, config, children) {
	  var propName = void 0;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    {
	      if (Object.freeze) {
	        Object.freeze(childArray);
	      }
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  {
	    if (key || ref) {
	      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
	        if (key) {
	          defineKeyPropWarningGetter(props, displayName);
	        }
	        if (ref) {
	          defineRefPropWarningGetter(props, displayName);
	        }
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	}

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://reactjs.org/docs/react-api.html#createfactory
	 */


	function cloneAndReplaceKey(oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	}

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://reactjs.org/docs/react-api.html#cloneelement
	 */
	function cloneElement(element, config, children) {
	  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

	  var propName = void 0;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps = void 0;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	}

	/**
	 * Verifies the object is a ReactElement.
	 * See https://reactjs.org/docs/react-api.html#isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	function isValidElement(object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	}

	var ReactDebugCurrentFrame = {};

	{
	  // Component that is being worked on
	  ReactDebugCurrentFrame.getCurrentStack = null;

	  ReactDebugCurrentFrame.getStackAddendum = function () {
	    var impl = ReactDebugCurrentFrame.getCurrentStack;
	    if (impl) {
	      return impl();
	    }
	    return null;
	  };
	}

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */
	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	var POOL_SIZE = 10;
	var traverseContextPool = [];
	function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
	  if (traverseContextPool.length) {
	    var traverseContext = traverseContextPool.pop();
	    traverseContext.result = mapResult;
	    traverseContext.keyPrefix = keyPrefix;
	    traverseContext.func = mapFunction;
	    traverseContext.context = mapContext;
	    traverseContext.count = 0;
	    return traverseContext;
	  } else {
	    return {
	      result: mapResult,
	      keyPrefix: keyPrefix,
	      func: mapFunction,
	      context: mapContext,
	      count: 0
	    };
	  }
	}

	function releaseTraverseContext(traverseContext) {
	  traverseContext.result = null;
	  traverseContext.keyPrefix = null;
	  traverseContext.func = null;
	  traverseContext.context = null;
	  traverseContext.count = 0;
	  if (traverseContextPool.length < POOL_SIZE) {
	    traverseContextPool.push(traverseContext);
	  }
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  var invokeCallback = false;

	  if (children === null) {
	    invokeCallback = true;
	  } else {
	    switch (type) {
	      case 'string':
	      case 'number':
	        invokeCallback = true;
	        break;
	      case 'object':
	        switch (children.$$typeof) {
	          case REACT_ELEMENT_TYPE:
	          case REACT_PORTAL_TYPE:
	            invokeCallback = true;
	        }
	    }
	  }

	  if (invokeCallback) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child = void 0;
	  var nextName = void 0;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (typeof iteratorFn === 'function') {
	      {
	        // Warn about using Maps as children
	        if (iteratorFn === children.entries) {
	          !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum()) : void 0;
	          didWarnAboutMaps = true;
	        }
	      }

	      var iterator = iteratorFn.call(children);
	      var step = void 0;
	      var ii = 0;
	      while (!(step = iterator.next()).done) {
	        child = step.value;
	        nextName = nextNamePrefix + getComponentKey(child, ii++);
	        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
	      }
	      var childrenString = '' + children;
	      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (typeof component === 'object' && component !== null && component.key != null) {
	    // Explicit key
	    return escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func,
	      context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  releaseTraverseContext(traverseContext);
	}

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result,
	      keyPrefix = bookKeeping.keyPrefix,
	      func = bookKeeping.func,
	      context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (isValidElement(mappedChild)) {
	      mappedChild = cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  releaseTraverseContext(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrencount
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children) {
	  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
	  return children;
	}

	function createContext(defaultValue, calculateChangedBits) {
	  if (calculateChangedBits === undefined) {
	    calculateChangedBits = null;
	  } else {
	    {
	      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warning(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
	    }
	  }

	  var context = {
	    $$typeof: REACT_CONTEXT_TYPE,
	    _calculateChangedBits: calculateChangedBits,
	    _defaultValue: defaultValue,
	    _currentValue: defaultValue,
	    // As a workaround to support multiple concurrent renderers, we categorize
	    // some renderers as primary and others as secondary. We only expect
	    // there to be two concurrent renderers at most: React Native (primary) and
	    // Fabric (secondary); React DOM (primary) and React ART (secondary).
	    // Secondary renderers store their context values on separate fields.
	    _currentValue2: defaultValue,
	    _changedBits: 0,
	    _changedBits2: 0,
	    // These are circular
	    Provider: null,
	    Consumer: null
	  };

	  context.Provider = {
	    $$typeof: REACT_PROVIDER_TYPE,
	    _context: context
	  };
	  context.Consumer = context;

	  {
	    context._currentRenderer = null;
	    context._currentRenderer2 = null;
	  }

	  return context;
	}

	function forwardRef(render) {
	  {
	    !(typeof render === 'function') ? warning(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render) : void 0;

	    if (render != null) {
	      !(render.defaultProps == null && render.propTypes == null) ? warning(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
	    }
	  }

	  return {
	    $$typeof: REACT_FORWARD_REF_TYPE,
	    render: render
	  };
	}

	var describeComponentFrame = function (name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	};

	function isValidElementType(type) {
	  return typeof type === 'string' || typeof type === 'function' ||
	  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
	  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_TIMEOUT_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
	}

	function getComponentName(fiber) {
	  var type = fiber.type;

	  if (typeof type === 'function') {
	    return type.displayName || type.name;
	  }
	  if (typeof type === 'string') {
	    return type;
	  }
	  switch (type) {
	    case REACT_ASYNC_MODE_TYPE:
	      return 'AsyncMode';
	    case REACT_CONTEXT_TYPE:
	      return 'Context.Consumer';
	    case REACT_FRAGMENT_TYPE:
	      return 'ReactFragment';
	    case REACT_PORTAL_TYPE:
	      return 'ReactPortal';
	    case REACT_PROFILER_TYPE:
	      return 'Profiler(' + fiber.pendingProps.id + ')';
	    case REACT_PROVIDER_TYPE:
	      return 'Context.Provider';
	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';
	    case REACT_TIMEOUT_TYPE:
	      return 'Timeout';
	  }
	  if (typeof type === 'object' && type !== null) {
	    switch (type.$$typeof) {
	      case REACT_FORWARD_REF_TYPE:
	        var functionName = type.render.displayName || type.render.name || '';
	        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    }
	  }
	  return null;
	}

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	var currentlyValidatingElement = void 0;
	var propTypesMisspellWarningShown = void 0;

	var getDisplayName = function () {};
	var getStackAddendum = function () {};

	{
	  currentlyValidatingElement = null;

	  propTypesMisspellWarningShown = false;

	  getDisplayName = function (element) {
	    if (element == null) {
	      return '#empty';
	    } else if (typeof element === 'string' || typeof element === 'number') {
	      return '#text';
	    } else if (typeof element.type === 'string') {
	      return element.type;
	    }

	    var type = element.type;
	    if (type === REACT_FRAGMENT_TYPE) {
	      return 'React.Fragment';
	    } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {
	      var functionName = type.render.displayName || type.render.name || '';
	      return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    } else {
	      return type.displayName || type.name || 'Unknown';
	    }
	  };

	  getStackAddendum = function () {
	    var stack = '';
	    if (currentlyValidatingElement) {
	      var name = getDisplayName(currentlyValidatingElement);
	      var owner = currentlyValidatingElement._owner;
	      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
	    }
	    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
	    return stack;
	  };
	}

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = getComponentName(ReactCurrentOwner.current);
	    if (name) {
	      return '\n\nCheck the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getSourceInfoErrorAddendum(elementProps) {
	  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
	    var source = elementProps.__source;
	    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
	    var lineNumber = source.lineNumber;
	    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	    return;
	  }
	  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
	  }

	  currentlyValidatingElement = element;
	  {
	    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
	  }
	  currentlyValidatingElement = null;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    if (typeof iteratorFn === 'function') {
	      // Entry iterators used to provide implicit keys,
	      // but now we print a separate warning for them later.
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step = void 0;
	        while (!(step = iterator.next()).done) {
	          if (isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var type = element.type;
	  var name = void 0,
	      propTypes = void 0;
	  if (typeof type === 'function') {
	    // Class or functional component
	    name = type.displayName || type.name;
	    propTypes = type.propTypes;
	  } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {
	    // ForwardRef
	    var functionName = type.render.displayName || type.render.name || '';
	    name = functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    propTypes = type.propTypes;
	  } else {
	    return;
	  }
	  if (propTypes) {
	    currentlyValidatingElement = element;
	    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
	    currentlyValidatingElement = null;
	  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
	    propTypesMisspellWarningShown = true;
	    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
	  }
	  if (typeof type.getDefaultProps === 'function') {
	    !type.getDefaultProps.isReactClassApproved ? warning(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	/**
	 * Given a fragment, validate that it can only be provided with fragment props
	 * @param {ReactElement} fragment
	 */
	function validateFragmentProps(fragment) {
	  currentlyValidatingElement = fragment;

	  var keys = Object.keys(fragment.props);
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (key !== 'children' && key !== 'key') {
	      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
	      break;
	    }
	  }

	  if (fragment.ref !== null) {
	    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
	  }

	  currentlyValidatingElement = null;
	}

	function createElementWithValidation(type, props, children) {
	  var validType = isValidElementType(type);

	  // We warn in this case but don't throw. We expect the element creation to
	  // succeed and there will likely be errors in render.
	  if (!validType) {
	    var info = '';
	    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
	    }

	    var sourceInfo = getSourceInfoErrorAddendum(props);
	    if (sourceInfo) {
	      info += sourceInfo;
	    } else {
	      info += getDeclarationErrorAddendum();
	    }

	    info += getStackAddendum() || '';

	    var typeString = void 0;
	    if (type === null) {
	      typeString = 'null';
	    } else if (Array.isArray(type)) {
	      typeString = 'array';
	    } else {
	      typeString = typeof type;
	    }

	    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
	  }

	  var element = createElement.apply(this, arguments);

	  // The result can be nullish if a mock or a custom function is used.
	  // TODO: Drop this when these are no longer allowed as the type argument.
	  if (element == null) {
	    return element;
	  }

	  // Skip key warning if the type isn't valid since our key validation logic
	  // doesn't expect a non-string/function type and can throw confusing errors.
	  // We don't want exception behavior to differ between dev and prod.
	  // (Rendering will throw with a helpful message and as soon as the type is
	  // fixed, the key warnings will appear.)
	  if (validType) {
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], type);
	    }
	  }

	  if (type === REACT_FRAGMENT_TYPE) {
	    validateFragmentProps(element);
	  } else {
	    validatePropTypes(element);
	  }

	  return element;
	}

	function createFactoryWithValidation(type) {
	  var validatedFactory = createElementWithValidation.bind(null, type);
	  validatedFactory.type = type;
	  // Legacy hook: remove it
	  {
	    Object.defineProperty(validatedFactory, 'type', {
	      enumerable: false,
	      get: function () {
	        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
	        Object.defineProperty(this, 'type', {
	          value: type
	        });
	        return type;
	      }
	    });
	  }

	  return validatedFactory;
	}

	function cloneElementWithValidation(element, props, children) {
	  var newElement = cloneElement.apply(this, arguments);
	  for (var i = 2; i < arguments.length; i++) {
	    validateChildKeys(arguments[i], newElement.type);
	  }
	  validatePropTypes(newElement);
	  return newElement;
	}

	var React = {
	  Children: {
	    map: mapChildren,
	    forEach: forEachChildren,
	    count: countChildren,
	    toArray: toArray,
	    only: onlyChild
	  },

	  createRef: createRef,
	  Component: Component,
	  PureComponent: PureComponent,

	  createContext: createContext,
	  forwardRef: forwardRef,

	  Fragment: REACT_FRAGMENT_TYPE,
	  StrictMode: REACT_STRICT_MODE_TYPE,
	  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,
	  unstable_Profiler: REACT_PROFILER_TYPE,

	  createElement: createElementWithValidation,
	  cloneElement: cloneElementWithValidation,
	  createFactory: createFactoryWithValidation,
	  isValidElement: isValidElement,

	  version: ReactVersion,

	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    ReactCurrentOwner: ReactCurrentOwner,
	    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
	    assign: _assign
	  }
	};

	if (enableSuspense) {
	  React.Timeout = REACT_TIMEOUT_TYPE;
	}

	{
	  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
	    // These should not be included in production.
	    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
	    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
	    // TODO: remove in React 17.0.
	    ReactComponentTreeHook: {}
	  });
	}



	var React$2 = Object.freeze({
		default: React
	});

	var React$3 = ( React$2 && React ) || React$2;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest.
	var react = React$3.default ? React$3.default : React$3;

	module.exports = react;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2014-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(8);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  var printWarning = function printWarning(format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  warning = function warning(condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var printWarning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  var ReactPropTypesSecret = __webpack_require__(12);
	  var loggedTypeFailures = {};

	  printWarning = function(text) {
	    var message = 'Warning: ' + text;
	    if (typeof console !== 'undefined') {
	      console.error(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          if (typeof typeSpecs[typeSpecName] !== 'function') {
	            var err = Error(
	              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
	              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
	            );
	            err.name = 'Invariant Violation';
	            throw err;
	          }
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error && !(error instanceof Error)) {
	          printWarning(
	            (componentName || 'React class') + ': type specification of ' +
	            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
	            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
	            'You may have forgotten to pass an argument to the type checker ' +
	            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
	            'shape all require an argument).'
	          )

	        }
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          printWarning(
	            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
	          );
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 12 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	function checkDCE() {
	  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
	  if (
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
	    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
	  ) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // This branch is unreachable because this function is only called
	    // in production, but the condition is true only in development.
	    // Therefore if the branch is still here, dead code elimination wasn't
	    // properly applied.
	    // Don't change the message. React DevTools relies on it. Also make sure
	    // this message doesn't occur elsewhere in this function, or it will cause
	    // a false positive.
	    throw new Error('^_^');
	  }
	  try {
	    // Verify that the code above has been dead code eliminated (DCE'd).
	    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
	  } catch (err) {
	    // DevTools shouldn't crash React, no matter what.
	    // We should still report in case we break this code.
	    console.error(err);
	  }
	}

	if (process.env.NODE_ENV === 'production') {
	  // DCE check should happen before ReactDOM bundle executes so that
	  // DevTools can report bad minification during injection.
	  checkDCE();
	  module.exports = __webpack_require__(14);
	} else {
	  module.exports = __webpack_require__(21);
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	/** @license React v16.4.1
	 * react-dom.production.min.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	/*
	 Modernizr 3.0.0pre (Custom Build) | MIT
	*/
	'use strict';var aa=__webpack_require__(6),ba=__webpack_require__(2),m=__webpack_require__(15),p=__webpack_require__(5),v=__webpack_require__(8),da=__webpack_require__(16),ea=__webpack_require__(17),fa=__webpack_require__(18),ha=__webpack_require__(7);
	function A(a){for(var b=arguments.length-1,c="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=0;d<b;d++)c+="&args[]="+encodeURIComponent(arguments[d+1]);aa(!1,"Minified React error #"+a+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",c)}ba?void 0:A("227");
	function ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}
	var B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=
	B._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A("198")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};
	function na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A("96",a);if(!oa[c]){b.extractEvents?void 0:A("97",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A("99",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A("98",d,a)}}}}
	function qa(a,b,c){ra[a]?A("100",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A("101"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A("102",c):void 0,ma[c]=d,b=!0)}b&&na()}
	var va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
	function Aa(a,b){null==b?A("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;
	function Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};
	function Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?A("231",b,typeof c):void 0;
	return c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A("95"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C="__reactInternalInstance$"+La,Ma="__reactEventHandlers$"+La;
	function Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A("33")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};
	function F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}
	function Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}
	function Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],"bubbled",a);for(a=c.length;0<a--;)Va(c[a],"captured",b)}
	var $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
	var bb={animationend:ab("Animation","AnimationEnd"),animationiteration:ab("Animation","AnimationIteration"),animationstart:ab("Animation","AnimationStart"),transitionend:ab("Transition","TransitionEnd")},cb={},db={};m.canUseDOM&&(db=document.createElement("div").style,"AnimationEvent"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),"TransitionEvent"in window||delete bb.transitionend.transition);
	function eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb("animationend"),gb=eb("animationiteration"),hb=eb("animationstart"),ib=eb("transitionend"),jb="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kb=null;
	function lb(){!kb&&m.canUseDOM&&(kb="textContent"in document.documentElement?"textContent":"innerText");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return"value"in G._root?G._root.value:G._root[lb()]}
	var ob="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
	function H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}
	p(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,
	destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);
	function rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&"CompositionEvent"in window,xb=null;m.canUseDOM&&"documentMode"in document&&(xb=document.documentMode);
	var yb=m.canUseDOM&&"TextEvent"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
	captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Cb=!1;
	function Db(a,b){switch(a){case "keyup":return-1!==vb.indexOf(b.keyCode);case "keydown":return 229!==b.keyCode;case "keypress":case "mousedown":case "blur":return!0;default:return!1}}function Eb(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case "compositionend":return Eb(b);case "keypress":if(32!==b.which)return null;Cb=!0;return Ab;case "textInput":return a=b.data,a===Ab&&Cb?null:a;default:return null}}
	function Hb(a,b){if(Fb)return"compositionend"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case "paste":return null;case "keypress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "compositionend":return zb?null:b.data;default:return null}}
	var Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case "compositionstart":e=Bb.compositionStart;break b;case "compositionend":e=Bb.compositionEnd;break b;case "compositionupdate":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):"keydown"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=
	f:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&"function"===typeof Jb.restoreControlledState?void 0:A("194");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}
	function Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}
	var Xb={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!Xb[a.type]:"textarea"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}
	function $b(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;a="on"+a;b=a in document;b||(b=document.createElement("div"),b.setAttribute(a,"return;"),b="function"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
	function bc(a){var b=ac(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"undefined"!==typeof c&&"function"===typeof c.get&&"function"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=""+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=
	null;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=ac(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}
	var ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc="function"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for("react.element"):60103,hc=fc?Symbol.for("react.portal"):60106,ic=fc?Symbol.for("react.fragment"):60107,jc=fc?Symbol.for("react.strict_mode"):60108,kc=fc?Symbol.for("react.profiler"):60114,lc=fc?Symbol.for("react.provider"):60109,mc=fc?Symbol.for("react.context"):60110,pc=fc?Symbol.for("react.async_mode"):60111,qc=fc?Symbol.for("react.forward_ref"):60112,rc=fc?Symbol.for("react.timeout"):
	60113,sc="function"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||"undefined"===typeof a)return null;a=sc&&a[sc]||a["@@iterator"];return"function"===typeof a?a:null}
	function uc(a){var b=a.type;if("function"===typeof b)return b.displayName||b.name;if("string"===typeof b)return b;switch(b){case pc:return"AsyncMode";case mc:return"Context.Consumer";case ic:return"ReactFragment";case hc:return"ReactPortal";case kc:return"Profiler("+a.pendingProps.id+")";case lc:return"Context.Provider";case jc:return"StrictMode";case rc:return"Timeout"}if("object"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||"",""!==a?"ForwardRef("+
	a+")":"ForwardRef"}return null}function vc(a){var b="";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e="\n    in "+(e||"Unknown")+(c?" (at "+c.fileName.replace(/^.*[\\\/]/,"")+":"+c.lineNumber+")":f?" (created by "+f+")":"");break a;default:e=""}b+=e;a=a.return}while(a);return b}
	var wc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}
	function Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case "function":case "symbol":return!0;case "boolean":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return"data-"!==a&&"aria-"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||"undefined"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}
	function I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){J[a]=new I(a,0,!1,a,null)});
	[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});["contentEditable","draggable","spellCheck","value"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});
	"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});["checked","multiple","muted","selected"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});["capture","download"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});
	["cols","rows","size","span"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});["rowSpan","start"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}
	"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var b=a.replace(Dc,
	Ec);J[b]=new I(b,1,!1,a,null)});"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,"http://www.w3.org/1999/xlink")});["xml:base","xml:lang","xml:space"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,"http://www.w3.org/XML/1998/namespace")});J.tabIndex=new I("tabIndex",1,!1,"tabindex",null);
	function Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||"o"!==b[0]&&"O"!==b[0]||"n"!==b[1]&&"N"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,""+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:"":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?"":""+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}
	function Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?"":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,"checked",b,!1)}
	function Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if("number"===b.type){if(0===c&&""===a.value||a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);b.hasOwnProperty("value")?Lc(a,b.type,c):b.hasOwnProperty("defaultValue")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
	function Mc(a,b,c){if(b.hasOwnProperty("value")||b.hasOwnProperty("defaultValue")){b=""+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;""!==c&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==c&&(a.name=c)}function Lc(a,b,c){if("number"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+c&&(a.defaultValue=""+c)}
	function Ic(a){switch(typeof a){case "boolean":case "number":case "object":case "string":case "undefined":return a;default:return""}}var Nc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type="change";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}
	function Tc(a,b){if("change"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b("input")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent("onpropertychange",Wc),Qc=Pc=null)}function Wc(a){"value"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){"focus"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent("onpropertychange",Wc)):"blur"===a&&Vc()}function Yc(a){if("selectionchange"===a||"keyup"===a||"keydown"===a)return Sc(Qc)}
	function Zc(a,b){if("click"===a)return Sc(b)}function $c(a,b){if("input"===a||"change"===a)return Sc(b)}
	var ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();"select"===h||"input"===h&&"file"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&"input"===h.toLowerCase()&&("checkbox"===e.type||"radio"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);"blur"===a&&(a=e._wrapperState)&&a.controlled&&"number"===e.type&&Lc(e,"number",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:"altKey",
	Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}
	var fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},
	mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e="mouseover"===a||"pointerover"===a,f="mouseout"===a||"pointerout"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||
	e.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if("mouseout"===a||"mouseover"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n="mouse";else if("pointerout"===a||"pointerover"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n="pointer";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+"leave";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+"enter";c.target=e;c.relatedTarget=a;Za(h,
	c,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A("188"):void 0}
	function ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A("188")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?
	void 0:A("189")}}c.alternate!==d?A("190"):void 0}3!==c.tag?A("188"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}
	function nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});
	function rd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}
	var sd={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},td={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
	116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=rd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?td[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return"keypress"===
	a.type?rd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===a.type?rd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in
	a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[["abort","abort"],[fb,"animationEnd"],[gb,"animationIteration"],[hb,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],
	["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],
	["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ib,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d="on"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+"Capture"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}
	[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],
	["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});
	var Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case "keypress":if(0===rd(c))return null;case "keydown":case "keyup":a=ud;break;case "blur":case "focus":a=qd;break;case "click":if(2===c.button)return null;case "dblclick":case "mousedown":case "mousemove":case "mouseup":case "mouseout":case "mouseover":case "contextmenu":a=fd;break;case "drag":case "dragend":case "dragenter":case "dragexit":case "dragleave":case "dragover":case "dragstart":case "drop":a=
	vd;break;case "touchcancel":case "touchend":case "touchmove":case "touchstart":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case "scroll":a=bd;break;case "wheel":a=yd;break;case "copy":case "cut":case "paste":a=pd;break;case "gotpointercapture":case "lostpointercapture":case "pointercancel":case "pointerdown":case "pointermove":case "pointerout":case "pointerover":case "pointerup":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,
	Fd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}
	function Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||"number"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}
	var Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd="_reactListenersID"+(""+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
	function Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&("text"===a.type||"search"===a.type||"tel"===a.type||"url"===a.type||"password"===a.type)||"textarea"===b||"true"===a.contentEditable)}
	var Vd=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Xd=null,Yd=null,Zd=null,$d=!1;
	function ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;"selectionStart"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type="select",a.target=Xd,Ya(a),a)}
	var be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case "focus":if(Yb(e)||"true"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case "blur":Zd=Yd=Xd=null;break;case "mousedown":$d=!0;break;case "contextmenu":case "mouseup":return $d=!1,ae(c,d);case "selectionchange":if(Vd)break;
	case "keydown":case "keyup":return ae(c,d)}return null}};Ga.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});
	var ce="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if("object"===typeof performance&&"function"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;
	if(m.canUseDOM){var ke="function"===typeof ce?ce:function(){A("276")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,"*"))}},te="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===
	me||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,"*"))};ie=function(a,b){var c=-1;null!=b&&"number"===typeof b.timeout&&(c=ge()+
	b.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},
	didTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b="";ba.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}
	function ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
	function Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A("91"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A("93"),b=b[0]),c=""+b),null==c&&(c=""));a._wrapperState={initialValue:""+c}}
	function De(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
	function Ge(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function He(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Ge(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
	var Ie=void 0,Je=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||"innerHTML"in a)a.innerHTML=b;else{Ie=Ie||document.createElement("div");Ie.innerHTML="<svg>"+b+"</svg>";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});
	function Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
	var Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,
	stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=["Webkit","ms","Moz","O"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});
	function Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
	function Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:A("61")),null!=b.style&&"object"!==typeof b.style?A("62",c()):void 0)}
	function Qe(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var Re=v.thatReturns("");
	function Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case "scroll":Md("scroll",a);break;case "focus":case "blur":Md("focus",a);Md("blur",a);c.blur=!0;c.focus=!0;break;case "cancel":case "close":$b(e,!0)&&Md(e,a);break;case "invalid":case "submit":case "reset":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}
	function Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?"script"===a?(a=c.createElement("div"),a.innerHTML="<script>\x3c/script>",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
	function Ve(a,b,c,d){var e=Qe(b,c);switch(b){case "iframe":case "object":K("load",a);var f=c;break;case "video":case "audio":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case "source":K("error",a);f=c;break;case "img":case "image":case "link":K("error",a);K("load",a);f=c;break;case "form":K("reset",a);K("submit",a);f=c;break;case "details":K("toggle",a);f=c;break;case "input":Hc(a,c);f=Gc(a,c);K("invalid",a);Se(d,"onChange");break;case "option":f=ye(a,c);break;case "select":Ae(a,c);f=p({},c,{value:void 0});
	K("invalid",a);Se(d,"onChange");break;case "textarea":Ce(a,c);f=Be(a,c);K("invalid",a);Se(d,"onChange");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];"style"===h?Ne(a,k,Re):"dangerouslySetInnerHTML"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):"children"===h?"string"===typeof k?("textarea"!==b||""!==k)&&Ke(a,k):"number"===typeof k&&Ke(a,""+k):"suppressContentEditableWarning"!==h&&"suppressHydrationWarning"!==h&&"autoFocus"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,
	h):null!=k&&Fc(a,h,k,e))}switch(b){case "input":cc(a);Mc(a,c,!1);break;case "textarea":cc(a);Ee(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=v)}}
	function We(a,b,c,d,e){var f=null;switch(b){case "input":c=Gc(a,c);d=Gc(a,d);f=[];break;case "option":c=ye(a,c);d=ye(a,d);f=[];break;case "select":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case "textarea":c=Be(a,c);d=Be(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if("style"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||
	(g={}),g[b]="")}else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if("style"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]="");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),
	g=k;else"dangerouslySetInnerHTML"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,""+k)):"children"===a?h===k||"string"!==typeof k&&"number"!==typeof k||(f=f||[]).push(a,""+k):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push("style",g);return f}
	function Xe(a,b,c,d,e){"input"===c&&"radio"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];"style"===g?Ne(a,h,Re):"dangerouslySetInnerHTML"===g?Je(a,h):"children"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case "input":Kc(a,e);break;case "textarea":De(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?
	ze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:"",!1))}}
	function Ye(a,b,c,d,e){switch(b){case "iframe":case "object":K("load",a);break;case "video":case "audio":for(d=0;d<jb.length;d++)K(jb[d],a);break;case "source":K("error",a);break;case "img":case "image":case "link":K("error",a);K("load",a);break;case "form":K("reset",a);K("submit",a);break;case "details":K("toggle",a);break;case "input":Hc(a,c);K("invalid",a);Se(e,"onChange");break;case "select":Ae(a,c);K("invalid",a);Se(e,"onChange");break;case "textarea":Ce(a,c),K("invalid",a),Se(e,"onChange")}Pe(b,
	c,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];"children"===f?"string"===typeof g?a.textContent!==g&&(d=["children",g]):"number"===typeof g&&a.textContent!==""+g&&(d=["children",""+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case "input":cc(a);Mc(a,c,!0);break;case "textarea":cc(a);Ee(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}
	var $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Kc(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;
	c=c.querySelectorAll("input[name="+JSON.stringify(""+b)+'][type="radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A("90");dc(d);Kc(d,e)}}}break;case "textarea":De(a,c);break;case "select":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case "button":case "input":case "select":case "textarea":return!!b.autoFocus}return!1}
	function df(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}
	function M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}
	function rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}
	function uf(a,b,c){nf.current!==ha?A("168"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A("108",uc(a)||"Unknown",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}
	function xf(a,b){var c=a.stateNode;c?void 0:A("169");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}
	function yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
	function zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
	function Af(a,b,c){var d=a.type,e=a.key;a=a.props;if("function"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if("string"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch("object"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A("130",null==d?
	d:typeof d,"")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}
	function Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}
	function If(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){"function"===typeof Ff&&Ff(a)}function Kf(a){"function"===typeof Gf&&Gf(a)}var Lf=!1;
	function Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}
	function Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}
	function Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}
	function Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}
	function Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,"function"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e="function"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}
	function Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===
	g&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}
	function Vf(a,b){"function"!==typeof a?A("191",a):void 0;a.call(b)}
	function Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}
	function Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A("174"):void 0;return a}
	function ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,"");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}
	var pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==
	b&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return"function"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}
	function rg(a,b,c,d){a=b.state;"function"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);"function"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}
	function sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;"function"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);"function"===typeof c.getDerivedStateFromProps||"function"===typeof d.getSnapshotBeforeUpdate||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||(c=d.state,"function"===typeof d.componentWillMount&&
	d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));"function"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;
	function ug(a,b,c){a=c.ref;if(null!==a&&"function"!==typeof a&&"object"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A("110"):void 0,d=c.stateNode);d?void 0:A("147",a);var e=""+a;if(null!==b&&null!==b.ref&&"function"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}"string"!==typeof a?A("148"):void 0;c._owner?void 0:A("254",a)}return a}
	function vg(a,b){"textarea"!==a.type&&A("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
	function wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=
	2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=
	Df(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if("string"===typeof b||"number"===typeof b)return b=Cf(""+b,a.mode,c),b.return=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=
	a,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);
	if("object"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,
	t);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);"function"!==typeof u?A("150"):void 0;h=u.call(h);null==h?A("151"):void 0;for(var t=u=null,n=g,x=
	g=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===
	t?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k="object"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n="object"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,
	a.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if("string"===typeof f||"number"===typeof f)return f=""+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=
	a,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if("undefined"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A("152",h.displayName||h.name||"Component")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type="DELETED";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}
	function Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=""===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}
	function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||"head"!==b&&"body"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}
	function Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}
	function Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}
	function Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=
	e.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}
	function Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h="function"===typeof d._calculateChangedBits?d._calculateChangedBits(k,
	h):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A("153"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}
	function Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A("155"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,"function"===
	typeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==
	g.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
	(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?("function"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||"function"!==typeof d.UNSAFE_componentWillMount&&"function"!==typeof d.componentWillMount||("function"===typeof d.componentWillMount&&d.componentWillMount(),"function"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),"function"===typeof d.componentDidMount&&
	(b.effectTag|=4)):("function"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):("function"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h="function"===typeof r||"function"===typeof d.getSnapshotBeforeUpdate)||"function"!==typeof d.UNSAFE_componentWillReceiveProps&&"function"!==typeof d.componentWillReceiveProps||
	(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?("function"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||"function"!==typeof d.UNSAFE_componentWillUpdate&&"function"!==typeof d.componentWillUpdate||("function"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),"function"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),"function"===typeof d.componentDidUpdate&&
	(b.effectTag|=4),"function"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):("function"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),"function"!==typeof d.getSnapshotBeforeUpdate||
	f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,
	b.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,
	null;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=
	b.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=
	R(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A("156")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};
	function Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?
	A("166"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=
	a}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if("string"!==typeof c)return null===b.stateNode?A("166"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A("167");
	default:A("156")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if("function"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}
	function $g(a){"function"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if("function"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}
	function ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A("161")}c.effectTag&16&&(Ke(b,""),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;
	if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===
	e.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}
	function ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A("160"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?
	(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}
	function dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A("162"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A("163")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}
	function gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&"function"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:""})});return c}
	function ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&"function"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}
	function jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;
	function vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}
	function wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&
	(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}
	function xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}
	function yh(a,b,c){ph?A("243"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A("271"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A("262"):
	void 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}
	function Zg(a,b){var c;a:{ph&&!th?A("263"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if("function"===typeof c.type.getDerivedStateFromCatch||"function"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}
	function Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}
	function og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A("185")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}
	function Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}
	function Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}
	function Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A("244"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;
	c=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A("253"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}
	function Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A("245"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}
	function ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A("177"):void 0;d=c.pendingCommitExpirationTime;0===d?A("261"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if("selectionStart"in
	f)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&
	++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,
	D);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A("163")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A("178"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,"");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&("function"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,
	U);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A("178"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),"selectionStart"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),
	y=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,
	top:l.scrollTop});"function"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;
	ca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;
	default:A("163")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}"function"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A("178"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;"function"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}
	function fh(a){null===X?A("246"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A("246"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A("187"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}
	function ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}
	function gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A("170");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A("171")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}
	function hi(a){var b=a._reactInternalFiber;void 0===b&&("function"===typeof a.render?A("188"):A("268",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}
	function ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}
	var li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};
	function ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}
	oi.prototype.render=function(a){this._defer?void 0:A("250");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	oi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A("251");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A("251"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=
	null,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};
	pi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];"function"!==typeof c?A("191",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};
	qi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};
	qi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;
	function si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute("data-reactroot")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}
	function ti(a,b,c,d,e){ri(c)?void 0:A("200");var f=c._reactRootContainer;if(f){if("function"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if("function"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}
	function ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A("200");return ni(a,b,null,c)}
	var vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A("38"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A("40");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,
	arguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:"16.4.1",rendererPackageName:"react-dom"});
	var Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;


/***/ }),
/* 15 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 *
	 * @param {?DOMDocument} doc Defaults to current document.
	 * @return {?DOMElement}
	 */
	function getActiveElement(doc) /*?DOMElement*/{
	  doc = doc || (typeof document !== 'undefined' ? document : undefined);
	  if (typeof doc === 'undefined') {
	    return null;
	  }
	  try {
	    return doc.activeElement || doc.body;
	  } catch (e) {
	    return doc.body;
	  }
	}

	module.exports = getActiveElement;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    // Added the nonzero y check to make Flow happy, but it is redundant
	    return x !== 0 || y !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(19);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(20);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ }),
/* 20 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  var doc = object ? object.ownerDocument || object : document;
	  var defaultView = doc.defaultView || window;
	  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.4.1
	 * react-dom.development.js
	 *
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 */

	'use strict';



	if (process.env.NODE_ENV !== "production") {
	  (function() {
	'use strict';

	var invariant = __webpack_require__(6);
	var React = __webpack_require__(2);
	var warning = __webpack_require__(10);
	var ExecutionEnvironment = __webpack_require__(15);
	var _assign = __webpack_require__(5);
	var emptyFunction = __webpack_require__(8);
	var checkPropTypes = __webpack_require__(11);
	var getActiveElement = __webpack_require__(16);
	var shallowEqual = __webpack_require__(17);
	var containsNode = __webpack_require__(18);
	var emptyObject = __webpack_require__(7);
	var hyphenateStyleName = __webpack_require__(22);
	var camelizeStyleName = __webpack_require__(24);

	// Relying on the `invariant()` implementation lets us
	// have preserve the format and params in the www builds.

	!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

	var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
	  this._hasCaughtError = false;
	  this._caughtError = null;
	  var funcArgs = Array.prototype.slice.call(arguments, 3);
	  try {
	    func.apply(context, funcArgs);
	  } catch (error) {
	    this._caughtError = error;
	    this._hasCaughtError = true;
	  }
	};

	{
	  // In DEV mode, we swap out invokeGuardedCallback for a special version
	  // that plays more nicely with the browser's DevTools. The idea is to preserve
	  // "Pause on exceptions" behavior. Because React wraps all user-provided
	  // functions in invokeGuardedCallback, and the production version of
	  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
	  // like caught exceptions, and the DevTools won't pause unless the developer
	  // takes the extra step of enabling pause on caught exceptions. This is
	  // untintuitive, though, because even though React has caught the error, from
	  // the developer's perspective, the error is uncaught.
	  //
	  // To preserve the expected "Pause on exceptions" behavior, we don't use a
	  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
	  // DOM node, and call the user-provided callback from inside an event handler
	  // for that fake event. If the callback throws, the error is "captured" using
	  // a global event handler. But because the error happens in a different
	  // event loop context, it does not interrupt the normal program flow.
	  // Effectively, this gives us try-catch behavior without actually using
	  // try-catch. Neat!

	  // Check that the browser supports the APIs we need to implement our special
	  // DEV version of invokeGuardedCallback
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');

	    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
	      // If document doesn't exist we know for sure we will crash in this method
	      // when we call document.createEvent(). However this can cause confusing
	      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
	      // So we preemptively throw with a better message instead.
	      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
	      var evt = document.createEvent('Event');

	      // Keeps track of whether the user-provided callback threw an error. We
	      // set this to true at the beginning, then set it to false right after
	      // calling the function. If the function errors, `didError` will never be
	      // set to false. This strategy works even if the browser is flaky and
	      // fails to call our global error handler, because it doesn't rely on
	      // the error event at all.
	      var didError = true;

	      // Create an event handler for our fake event. We will synchronously
	      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
	      // call the user-provided callback.
	      var funcArgs = Array.prototype.slice.call(arguments, 3);
	      function callCallback() {
	        // We immediately remove the callback from event listeners so that
	        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
	        // nested call would trigger the fake event handlers of any call higher
	        // in the stack.
	        fakeNode.removeEventListener(evtType, callCallback, false);
	        func.apply(context, funcArgs);
	        didError = false;
	      }

	      // Create a global error event handler. We use this to capture the value
	      // that was thrown. It's possible that this error handler will fire more
	      // than once; for example, if non-React code also calls `dispatchEvent`
	      // and a handler for that event throws. We should be resilient to most of
	      // those cases. Even if our error event handler fires more than once, the
	      // last error event is always used. If the callback actually does error,
	      // we know that the last error event is the correct one, because it's not
	      // possible for anything else to have happened in between our callback
	      // erroring and the code that follows the `dispatchEvent` call below. If
	      // the callback doesn't error, but the error event was fired, we know to
	      // ignore it because `didError` will be false, as described above.
	      var error = void 0;
	      // Use this to track whether the error event is ever called.
	      var didSetError = false;
	      var isCrossOriginError = false;

	      function onError(event) {
	        error = event.error;
	        didSetError = true;
	        if (error === null && event.colno === 0 && event.lineno === 0) {
	          isCrossOriginError = true;
	        }
	      }

	      // Create a fake event type.
	      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

	      // Attach our event handlers
	      window.addEventListener('error', onError);
	      fakeNode.addEventListener(evtType, callCallback, false);

	      // Synchronously dispatch our fake event. If the user-provided function
	      // errors, it will trigger our global error handler.
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);

	      if (didError) {
	        if (!didSetError) {
	          // The callback errored, but the error event never fired.
	          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
	        } else if (isCrossOriginError) {
	          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
	        }
	        this._hasCaughtError = true;
	        this._caughtError = error;
	      } else {
	        this._hasCaughtError = false;
	        this._caughtError = null;
	      }

	      // Remove our event listeners
	      window.removeEventListener('error', onError);
	    };

	    invokeGuardedCallback = invokeGuardedCallbackDev;
	  }
	}

	var invokeGuardedCallback$1 = invokeGuardedCallback;

	var ReactErrorUtils = {
	  // Used by Fiber to simulate a try-catch.
	  _caughtError: null,
	  _hasCaughtError: false,

	  // Used by event system to capture/rethrow the first error.
	  _rethrowError: null,
	  _hasRethrowError: false,

	  /**
	   * Call a function while guarding against errors that happens within it.
	   * Returns an error if it throws, otherwise null.
	   *
	   * In production, this is implemented using a try-catch. The reason we don't
	   * use a try-catch directly is so that we can swap out a different
	   * implementation in DEV mode.
	   *
	   * @param {String} name of the guard to use for logging or debugging
	   * @param {Function} func The function to invoke
	   * @param {*} context The context to use when calling the function
	   * @param {...*} args Arguments for function
	   */
	  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
	    invokeGuardedCallback$1.apply(ReactErrorUtils, arguments);
	  },

	  /**
	   * Same as invokeGuardedCallback, but instead of returning an error, it stores
	   * it in a global so it can be rethrown by `rethrowCaughtError` later.
	   * TODO: See if _caughtError and _rethrowError can be unified.
	   *
	   * @param {String} name of the guard to use for logging or debugging
	   * @param {Function} func The function to invoke
	   * @param {*} context The context to use when calling the function
	   * @param {...*} args Arguments for function
	   */
	  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
	    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
	    if (ReactErrorUtils.hasCaughtError()) {
	      var error = ReactErrorUtils.clearCaughtError();
	      if (!ReactErrorUtils._hasRethrowError) {
	        ReactErrorUtils._hasRethrowError = true;
	        ReactErrorUtils._rethrowError = error;
	      }
	    }
	  },

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
	  },

	  hasCaughtError: function () {
	    return ReactErrorUtils._hasCaughtError;
	  },

	  clearCaughtError: function () {
	    if (ReactErrorUtils._hasCaughtError) {
	      var error = ReactErrorUtils._caughtError;
	      ReactErrorUtils._caughtError = null;
	      ReactErrorUtils._hasCaughtError = false;
	      return error;
	    } else {
	      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
	    }
	  }
	};

	var rethrowCaughtError = function () {
	  if (ReactErrorUtils._hasRethrowError) {
	    var error = ReactErrorUtils._rethrowError;
	    ReactErrorUtils._rethrowError = null;
	    ReactErrorUtils._hasRethrowError = false;
	    throw error;
	  }
	};

	/**
	 * Injectable ordering of event plugins.
	 */
	var eventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!eventPluginOrder) {
	    // Wait until an `eventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var pluginModule = namesToPlugins[pluginName];
	    var pluginIndex = eventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
	    if (plugins[pluginIndex]) {
	      continue;
	    }
	    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
	    plugins[pluginIndex] = pluginModule;
	    var publishedEvents = pluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
	  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
	  eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, pluginModule, eventName) {
	  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
	  registrationNameModules[registrationName] = pluginModule;
	  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

	  {
	    var lowerCasedName = registrationName.toLowerCase();
	    possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */

	/**
	 * Ordered list of injected plugins.
	 */
	var plugins = [];

	/**
	 * Mapping from event name to dispatch config
	 */
	var eventNameDispatchConfigs = {};

	/**
	 * Mapping from registration name to plugin module
	 */
	var registrationNameModules = {};

	/**
	 * Mapping from registration name to event name
	 */
	var registrationNameDependencies = {};

	/**
	 * Mapping from lowercase registration names to the properly cased version,
	 * used to warn in the case of missing event handlers. Available
	 * only in true.
	 * @type {Object}
	 */
	var possibleRegistrationNames = {};
	// Trust the developer to only use possibleRegistrationNames in true

	/**
	 * Injects an ordering of plugins (by plugin name). This allows the ordering
	 * to be decoupled from injection of the actual plugins so that ordering is
	 * always deterministic regardless of packaging, on-the-fly injection, etc.
	 *
	 * @param {array} InjectedEventPluginOrder
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginOrder}
	 */
	function injectEventPluginOrder(injectedEventPluginOrder) {
	  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
	  // Clone the ordering so it cannot be dynamically mutated.
	  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
	  recomputePluginOrdering();
	}

	/**
	 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	 * in the ordering injected by `injectEventPluginOrder`.
	 *
	 * Plugins can be injected as part of page initialization or on-the-fly.
	 *
	 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	 * @internal
	 * @see {EventPluginHub.injection.injectEventPluginsByName}
	 */
	function injectEventPluginsByName(injectedNamesToPlugins) {
	  var isOrderingDirty = false;
	  for (var pluginName in injectedNamesToPlugins) {
	    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	      continue;
	    }
	    var pluginModule = injectedNamesToPlugins[pluginName];
	    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
	      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
	      namesToPlugins[pluginName] = pluginModule;
	      isOrderingDirty = true;
	    }
	  }
	  if (isOrderingDirty) {
	    recomputePluginOrdering();
	  }
	}

	var EventPluginRegistry = Object.freeze({
		plugins: plugins,
		eventNameDispatchConfigs: eventNameDispatchConfigs,
		registrationNameModules: registrationNameModules,
		registrationNameDependencies: registrationNameDependencies,
		possibleRegistrationNames: possibleRegistrationNames,
		injectEventPluginOrder: injectEventPluginOrder,
		injectEventPluginsByName: injectEventPluginsByName
	});

	var getFiberCurrentPropsFromNode = null;
	var getInstanceFromNode = null;
	var getNodeFromInstance = null;

	var injection$1 = {
	  injectComponentTree: function (Injected) {
	    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
	    getInstanceFromNode = Injected.getInstanceFromNode;
	    getNodeFromInstance = Injected.getNodeFromInstance;

	    {
	      !(getNodeFromInstance && getInstanceFromNode) ? warning(false, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  }
	};

	var validateEventDispatches = void 0;
	{
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warning(false, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = getNodeFromInstance(inst);
	  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */


	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */


	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 * @param {function} cb Callback invoked with each element or a collection.
	 * @param {?} [scope] Scope used as `this` in a callback.
	 */
	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	function isInteractive(tag) {
	  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
	}

	function shouldPreventMouseEvent(name, type, props) {
	  switch (name) {
	    case 'onClick':
	    case 'onClickCapture':
	    case 'onDoubleClick':
	    case 'onDoubleClickCapture':
	    case 'onMouseDown':
	    case 'onMouseDownCapture':
	    case 'onMouseMove':
	    case 'onMouseMoveCapture':
	    case 'onMouseUp':
	    case 'onMouseUpCapture':
	      return !!(props.disabled && isInteractive(type));
	    default:
	      return false;
	  }
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */

	/**
	 * Methods for injecting dependencies.
	 */
	var injection = {
	  /**
	   * @param {array} InjectedEventPluginOrder
	   * @public
	   */
	  injectEventPluginOrder: injectEventPluginOrder,

	  /**
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   */
	  injectEventPluginsByName: injectEventPluginsByName
	};

	/**
	 * @param {object} inst The instance, which is the source of events.
	 * @param {string} registrationName Name of listener (e.g. `onClick`).
	 * @return {?function} The stored callback.
	 */
	function getListener(inst, registrationName) {
	  var listener = void 0;

	  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
	  // live here; needs to be moved to a better place soon
	  var stateNode = inst.stateNode;
	  if (!stateNode) {
	    // Work in progress (ex: onload events in incremental mode).
	    return null;
	  }
	  var props = getFiberCurrentPropsFromNode(stateNode);
	  if (!props) {
	    // Work in progress.
	    return null;
	  }
	  listener = props[registrationName];
	  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
	    return null;
	  }
	  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
	  return listener;
	}

	/**
	 * Allows registered plugins an opportunity to extract events from top-level
	 * native browser events.
	 *
	 * @return {*} An accumulation of synthetic events.
	 * @internal
	 */
	function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var events = null;
	  for (var i = 0; i < plugins.length; i++) {
	    // Not every plugin in the ordering may be loaded at runtime.
	    var possiblePlugin = plugins[i];
	    if (possiblePlugin) {
	      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	      if (extractedEvents) {
	        events = accumulateInto(events, extractedEvents);
	      }
	    }
	  }
	  return events;
	}

	function runEventsInBatch(events, simulated) {
	  if (events !== null) {
	    eventQueue = accumulateInto(eventQueue, events);
	  }

	  // Set `eventQueue` to null before processing it so that we can tell if more
	  // events get enqueued while processing.
	  var processingEventQueue = eventQueue;
	  eventQueue = null;

	  if (!processingEventQueue) {
	    return;
	  }

	  if (simulated) {
	    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	  } else {
	    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	  }
	  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
	  // This would be a good time to rethrow if any of the event handlers threw.
	  ReactErrorUtils.rethrowCaughtError();
	}

	function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	  runEventsInBatch(events, false);
	}

	var EventPluginHub = Object.freeze({
		injection: injection,
		getListener: getListener,
		runEventsInBatch: runEventsInBatch,
		runExtractedEventsInBatch: runExtractedEventsInBatch
	});

	var IndeterminateComponent = 0; // Before we know whether it is functional or class
	var FunctionalComponent = 1;
	var ClassComponent = 2;
	var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
	var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
	var HostComponent = 5;
	var HostText = 6;



	var Fragment = 10;
	var Mode = 11;
	var ContextConsumer = 12;
	var ContextProvider = 13;
	var ForwardRef = 14;
	var Profiler = 15;
	var TimeoutComponent = 16;

	var randomKey = Math.random().toString(36).slice(2);
	var internalInstanceKey = '__reactInternalInstance$' + randomKey;
	var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

	function precacheFiberNode(hostInst, node) {
	  node[internalInstanceKey] = hostInst;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  while (!node[internalInstanceKey]) {
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var inst = node[internalInstanceKey];
	  if (inst.tag === HostComponent || inst.tag === HostText) {
	    // In Fiber, this will always be the deepest root.
	    return inst;
	  }

	  return null;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode$1(node) {
	  var inst = node[internalInstanceKey];
	  if (inst) {
	    if (inst.tag === HostComponent || inst.tag === HostText) {
	      return inst;
	    } else {
	      return null;
	    }
	  }
	  return null;
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance$1(inst) {
	  if (inst.tag === HostComponent || inst.tag === HostText) {
	    // In Fiber this, is just the state node right now. We assume it will be
	    // a host component or host text.
	    return inst.stateNode;
	  }

	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  invariant(false, 'getNodeFromInstance: Invalid argument.');
	}

	function getFiberCurrentPropsFromNode$1(node) {
	  return node[internalEventHandlersKey] || null;
	}

	function updateFiberProps(node, props) {
	  node[internalEventHandlersKey] = props;
	}

	var ReactDOMComponentTree = Object.freeze({
		precacheFiberNode: precacheFiberNode,
		getClosestInstanceFromNode: getClosestInstanceFromNode,
		getInstanceFromNode: getInstanceFromNode$1,
		getNodeFromInstance: getNodeFromInstance$1,
		getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
		updateFiberProps: updateFiberProps
	});

	function getParent(inst) {
	  do {
	    inst = inst.return;
	    // TODO: If this is a HostRoot we might want to bail out.
	    // That is depending on if we want nested subtrees (layers) to bubble
	    // events to their parent. We could also go through parentNode on the
	    // host node but that wouldn't work for React Native and doesn't let us
	    // do the portal feature.
	  } while (inst && inst.tag !== HostComponent);
	  if (inst) {
	    return inst;
	  }
	  return null;
	}

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = getParent(instA);
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = getParent(instB);
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB || instA === instB.alternate) {
	      return instA;
	    }
	    instA = getParent(instA);
	    instB = getParent(instB);
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */


	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  return getParent(inst);
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = getParent(inst);
	  }
	  var i = void 0;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], 'captured', arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], 'bubbled', arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (true) {
	    if (!from) {
	      break;
	    }
	    if (from === common) {
	      break;
	    }
	    var alternate = from.alternate;
	    if (alternate !== null && alternate === common) {
	      break;
	    }
	    pathFrom.push(from);
	    from = getParent(from);
	  }
	  var pathTo = [];
	  while (true) {
	    if (!to) {
	      break;
	    }
	    if (to === common) {
	      break;
	    }
	    var _alternate = to.alternate;
	    if (_alternate !== null && _alternate === common) {
	      break;
	    }
	    pathTo.push(to);
	    to = getParent(to);
	  }
	  for (var i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], 'bubbled', argFrom);
	  }
	  for (var _i = pathTo.length; _i-- > 0;) {
	    fn(pathTo[_i], 'captured', argTo);
	  }
	}

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing even a
	 * single one.
	 */

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, phase, event) {
	  {
	    !inst ? warning(false, 'Dispatching inst must not be null') : void 0;
	  }
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? getParentInstance(targetInst) : null;
	    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (inst && event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	var EventPropagators = Object.freeze({
		accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
		accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
		accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
		accumulateDirectDispatches: accumulateDirectDispatches
	});

	// Do not uses the below two methods directly!
	// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
	// (It is the only module that is allowed to access these methods.)

	function unsafeCastStringToDOMTopLevelType(topLevelType) {
	  return topLevelType;
	}

	function unsafeCastDOMTopLevelTypeToString(topLevelType) {
	  return topLevelType;
	}

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return eventName;
	}

	/**
	 * To identify top level events in ReactDOM, we use constants defined by this
	 * module. This is the only module that uses the unsafe* methods to express
	 * that the constants actually correspond to the browser event names. This lets
	 * us save some bundle size by avoiding a top level type -> event name map.
	 * The rest of ReactDOM code should import top level types from this file.
	 */
	var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
	var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
	var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
	var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
	var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
	var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
	var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
	var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
	var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
	var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
	var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
	var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
	var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
	var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
	var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
	var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
	var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
	var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
	var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
	var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
	var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
	var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
	var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
	var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
	var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
	var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
	var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
	var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
	var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
	var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
	var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
	var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
	var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
	var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
	var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
	var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
	var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
	var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
	var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
	var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
	var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
	var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
	var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
	var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
	var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
	var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
	var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
	var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
	var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
	var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
	var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
	var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
	var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
	var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


	var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
	var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
	var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
	var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
	var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
	var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
	var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
	var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
	var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
	var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
	var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
	var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
	var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
	var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
	var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
	var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
	var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
	var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
	var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
	var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
	var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
	var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
	var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
	var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
	var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

	// List of events that need to be individually attached to media elements.
	// Note that events in this list will *not* be listened to at the top level
	// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
	var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

	function getRawEventName(topLevelType) {
	  return unsafeCastDOMTopLevelTypeToString(topLevelType);
	}

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	/**
	 * This helper object stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 *
	 */
	var compositionState = {
	  _root: null,
	  _startText: null,
	  _fallbackText: null
	};

	function initialize(nativeEventTarget) {
	  compositionState._root = nativeEventTarget;
	  compositionState._startText = getText();
	  return true;
	}

	function reset() {
	  compositionState._root = null;
	  compositionState._startText = null;
	  compositionState._fallbackText = null;
	}

	function getData() {
	  if (compositionState._fallbackText) {
	    return compositionState._fallbackText;
	  }

	  var start = void 0;
	  var startValue = compositionState._startText;
	  var startLength = startValue.length;
	  var end = void 0;
	  var endValue = getText();
	  var endLength = endValue.length;

	  for (start = 0; start < startLength; start++) {
	    if (startValue[start] !== endValue[start]) {
	      break;
	    }
	  }

	  var minEnd = startLength - start;
	  for (end = 1; end <= minEnd; end++) {
	    if (startValue[startLength - end] !== endValue[endLength - end]) {
	      break;
	    }
	  }

	  var sliceTail = end > 1 ? 1 - end : undefined;
	  compositionState._fallbackText = endValue.slice(start, sliceTail);
	  return compositionState._fallbackText;
	}

	function getText() {
	  if ('value' in compositionState._root) {
	    return compositionState._root.value;
	  }
	  return compositionState._root[getTextContentAccessor()];
	}

	/* eslint valid-typeof: 0 */

	var didWarnForAddedNewProperty = false;
	var EVENT_POOL_SIZE = 10;

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {
	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else if (typeof event.returnValue !== 'unknown') {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else if (typeof event.cancelBubble !== 'unknown') {
	      // The ChangeEventPlugin registers a "propertychange" event for
	      // IE. This event does not support bubbling or cancelling, and
	      // any references to cancelBubble throw "Member not found".  A
	      // typeof check of "unknown" circumvents this issue (and is also
	      // IE specific).
	      event.cancelBubble = true;
	    }

	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }
	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 */
	SyntheticEvent.extend = function (Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  function Class() {
	    return Super.apply(this, arguments);
	  }
	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.extend = Super.extend;
	  addEventPoolingTo(Class);

	  return Class;
	};

	/** Proxying after everything set on SyntheticEvent
	 * to resolve Proxy issue on some WebKit browsers
	 * in which some Event properties are set to undefined (GH#10010)
	 */
	{
	  var isProxySupported = typeof Proxy === 'function' &&
	  // https://github.com/facebook/react/issues/12011
	  !Object.isSealed(new Proxy({}, {}));

	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              !(didWarnForAddedNewProperty || target.isPersistent()) ? warning(false, "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}

	addEventPoolingTo(SyntheticEvent);

	/**
	 * Helper to nullify syntheticEvent instance properties when destructing
	 *
	 * @param {String} propName
	 * @param {?object} getVal
	 * @return {object} defineProperty object
	 */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    !warningCondition ? warning(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}

	function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
	  var EventConstructor = this;
	  if (EventConstructor.eventPool.length) {
	    var instance = EventConstructor.eventPool.pop();
	    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
	    return instance;
	  }
	  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
	}

	function releasePooledEvent(event) {
	  var EventConstructor = this;
	  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
	  event.destructor();
	  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
	    EventConstructor.eventPool.push(event);
	  }
	}

	function addEventPoolingTo(EventConstructor) {
	  EventConstructor.eventPool = [];
	  EventConstructor.getPooled = getPooledEvent;
	  EventConstructor.release = releasePooledEvent;
	}

	var SyntheticEvent$1 = SyntheticEvent;

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var SyntheticCompositionEvent = SyntheticEvent$1.extend({
	  data: null
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var SyntheticInputEvent = SyntheticEvent$1.extend({
	  data: null
	});

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode;

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: 'onBeforeInput',
	      captured: 'onBeforeInputCapture'
	    },
	    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionEnd',
	      captured: 'onCompositionEndCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionStart',
	      captured: 'onCompositionStartCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: 'onCompositionUpdate',
	      captured: 'onCompositionUpdateCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case TOP_COMPOSITION_START:
	      return eventTypes.compositionStart;
	    case TOP_COMPOSITION_END:
	      return eventTypes.compositionEnd;
	    case TOP_COMPOSITION_UPDATE:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case TOP_KEY_UP:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case TOP_KEY_DOWN:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case TOP_KEY_PRESS:
	    case TOP_MOUSE_DOWN:
	    case TOP_BLUR:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition status, if any.
	var isComposing = false;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType = void 0;
	  var fallbackData = void 0;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!isComposing) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!isComposing && eventType === eventTypes.compositionStart) {
	      isComposing = initialize(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (isComposing) {
	        fallbackData = getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case TOP_COMPOSITION_END:
	      return getDataFromCustomEvent(nativeEvent);
	    case TOP_KEY_PRESS:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case TOP_TEXT_INPUT:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  // If composition event is available, we extract a string only at
	  // compositionevent, otherwise extract it at fallback events.
	  if (isComposing) {
	    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = getData();
	      reset();
	      isComposing = false;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case TOP_PASTE:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case TOP_KEY_PRESS:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (!isKeypressCommand(nativeEvent)) {
	        // IE fires the `keypress` event when a user types an emoji via
	        // Touch keyboard of Windows.  In such a case, the `char` property
	        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
	        // is 2, the property `which` does not represent an emoji correctly.
	        // In such a case, we directly return the `char` property instead of
	        // using `which`.
	        if (nativeEvent.char && nativeEvent.char.length > 1) {
	          return nativeEvent.char;
	        } else if (nativeEvent.which) {
	          return String.fromCharCode(nativeEvent.which);
	        }
	      }
	      return null;
	    case TOP_COMPOSITION_END:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars = void 0;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

	    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

	    if (composition === null) {
	      return beforeInput;
	    }

	    if (beforeInput === null) {
	      return composition;
	    }

	    return [composition, beforeInput];
	  }
	};

	// Use to restore controlled state after a change event has fired.

	var fiberHostComponent = null;

	var ReactControlledComponentInjection = {
	  injectFiberControlledHostComponent: function (hostComponentImpl) {
	    // The fiber implementation doesn't use dynamic dispatch so we need to
	    // inject the implementation.
	    fiberHostComponent = hostComponentImpl;
	  }
	};

	var restoreTarget = null;
	var restoreQueue = null;

	function restoreStateOfTarget(target) {
	  // We perform this translation at the end of the event loop so that we
	  // always receive the correct fiber here
	  var internalInstance = getInstanceFromNode(target);
	  if (!internalInstance) {
	    // Unmounted
	    return;
	  }
	  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
	  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
	}

	var injection$2 = ReactControlledComponentInjection;

	function enqueueStateRestore(target) {
	  if (restoreTarget) {
	    if (restoreQueue) {
	      restoreQueue.push(target);
	    } else {
	      restoreQueue = [target];
	    }
	  } else {
	    restoreTarget = target;
	  }
	}

	function needsStateRestore() {
	  return restoreTarget !== null || restoreQueue !== null;
	}

	function restoreStateIfNeeded() {
	  if (!restoreTarget) {
	    return;
	  }
	  var target = restoreTarget;
	  var queuedTargets = restoreQueue;
	  restoreTarget = null;
	  restoreQueue = null;

	  restoreStateOfTarget(target);
	  if (queuedTargets) {
	    for (var i = 0; i < queuedTargets.length; i++) {
	      restoreStateOfTarget(queuedTargets[i]);
	    }
	  }
	}

	var ReactControlledComponent = Object.freeze({
		injection: injection$2,
		enqueueStateRestore: enqueueStateRestore,
		needsStateRestore: needsStateRestore,
		restoreStateIfNeeded: restoreStateIfNeeded
	});

	// Used as a way to call batchedUpdates when we don't have a reference to
	// the renderer. Such as when we're dispatching events or if third party
	// libraries need to call batchedUpdates. Eventually, this API will go away when
	// everything is batched by default. We'll then have a similar API to opt-out of
	// scheduled work and instead do synchronous work.

	// Defaults
	var _batchedUpdates = function (fn, bookkeeping) {
	  return fn(bookkeeping);
	};
	var _interactiveUpdates = function (fn, a, b) {
	  return fn(a, b);
	};
	var _flushInteractiveUpdates = function () {};

	var isBatching = false;
	function batchedUpdates(fn, bookkeeping) {
	  if (isBatching) {
	    // If we are currently inside another batch, we need to wait until it
	    // fully completes before restoring state.
	    return fn(bookkeeping);
	  }
	  isBatching = true;
	  try {
	    return _batchedUpdates(fn, bookkeeping);
	  } finally {
	    // Here we wait until all updates have propagated, which is important
	    // when using controlled components within layers:
	    // https://github.com/facebook/react/issues/1698
	    // Then we restore state of any controlled component.
	    isBatching = false;
	    var controlledComponentsHavePendingUpdates = needsStateRestore();
	    if (controlledComponentsHavePendingUpdates) {
	      // If a controlled event was fired, we may need to restore the state of
	      // the DOM node back to the controlled value. This is necessary when React
	      // bails out of the update without touching the DOM.
	      _flushInteractiveUpdates();
	      restoreStateIfNeeded();
	    }
	  }
	}

	function interactiveUpdates(fn, a, b) {
	  return _interactiveUpdates(fn, a, b);
	}



	var injection$3 = {
	  injectRenderer: function (renderer) {
	    _batchedUpdates = renderer.batchedUpdates;
	    _interactiveUpdates = renderer.interactiveUpdates;
	    _flushInteractiveUpdates = renderer.flushInteractiveUpdates;
	  }
	};

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  color: true,
	  date: true,
	  datetime: true,
	  'datetime-local': true,
	  email: true,
	  month: true,
	  number: true,
	  password: true,
	  range: true,
	  search: true,
	  tel: true,
	  text: true,
	  time: true,
	  url: true,
	  week: true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	/**
	 * HTML nodeType values that represent the type of the node
	 */

	var ELEMENT_NODE = 1;
	var TEXT_NODE = 3;
	var COMMENT_NODE = 8;
	var DOCUMENT_NODE = 9;
	var DOCUMENT_FRAGMENT_NODE = 11;

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  // Fallback to nativeEvent.srcElement for IE9
	  // https://github.com/facebook/react/issues/12506
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === TEXT_NODE ? target.parentNode : target;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  return isSupported;
	}

	function isCheckable(elem) {
	  var type = elem.type;
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
	}

	function getTracker(node) {
	  return node._valueTracker;
	}

	function detachTracker(node) {
	  node._valueTracker = null;
	}

	function getValueFromNode(node) {
	  var value = '';
	  if (!node) {
	    return value;
	  }

	  if (isCheckable(node)) {
	    value = node.checked ? 'true' : 'false';
	  } else {
	    value = node.value;
	  }

	  return value;
	}

	function trackValueOnNode(node) {
	  var valueField = isCheckable(node) ? 'checked' : 'value';
	  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

	  var currentValue = '' + node[valueField];

	  // if someone has already defined a value or Safari, then bail
	  // and don't track value will cause over reporting of changes,
	  // but it's better then a hard failure
	  // (needed for certain tests that spyOn input values and Safari)
	  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
	    return;
	  }
	  var get = descriptor.get,
	      set = descriptor.set;

	  Object.defineProperty(node, valueField, {
	    configurable: true,
	    get: function () {
	      return get.call(this);
	    },
	    set: function (value) {
	      currentValue = '' + value;
	      set.call(this, value);
	    }
	  });
	  // We could've passed this the first time
	  // but it triggers a bug in IE11 and Edge 14/15.
	  // Calling defineProperty() again should be equivalent.
	  // https://github.com/facebook/react/issues/11768
	  Object.defineProperty(node, valueField, {
	    enumerable: descriptor.enumerable
	  });

	  var tracker = {
	    getValue: function () {
	      return currentValue;
	    },
	    setValue: function (value) {
	      currentValue = '' + value;
	    },
	    stopTracking: function () {
	      detachTracker(node);
	      delete node[valueField];
	    }
	  };
	  return tracker;
	}

	function track(node) {
	  if (getTracker(node)) {
	    return;
	  }

	  // TODO: Once it's just Fiber we can move this to node._wrapperState
	  node._valueTracker = trackValueOnNode(node);
	}

	function updateValueIfChanged(node) {
	  if (!node) {
	    return false;
	  }

	  var tracker = getTracker(node);
	  // if there is no tracker at this point it's unlikely
	  // that trying again will succeed
	  if (!tracker) {
	    return true;
	  }

	  var lastValue = tracker.getValue();
	  var nextValue = getValueFromNode(node);
	  if (nextValue !== lastValue) {
	    tracker.setValue(nextValue);
	    return true;
	  }
	  return false;
	}

	var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

	var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
	var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

	var describeComponentFrame = function (name, source, ownerName) {
	  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	};

	// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var hasSymbol = typeof Symbol === 'function' && Symbol.for;

	var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
	var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
	var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
	var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
	var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
	var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
	var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
	var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
	var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
	var REACT_TIMEOUT_TYPE = hasSymbol ? Symbol.for('react.timeout') : 0xead1;

	var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator';

	function getIteratorFn(maybeIterable) {
	  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
	    return null;
	  }
	  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
	  if (typeof maybeIterator === 'function') {
	    return maybeIterator;
	  }
	  return null;
	}

	function getComponentName(fiber) {
	  var type = fiber.type;

	  if (typeof type === 'function') {
	    return type.displayName || type.name;
	  }
	  if (typeof type === 'string') {
	    return type;
	  }
	  switch (type) {
	    case REACT_ASYNC_MODE_TYPE:
	      return 'AsyncMode';
	    case REACT_CONTEXT_TYPE:
	      return 'Context.Consumer';
	    case REACT_FRAGMENT_TYPE:
	      return 'ReactFragment';
	    case REACT_PORTAL_TYPE:
	      return 'ReactPortal';
	    case REACT_PROFILER_TYPE:
	      return 'Profiler(' + fiber.pendingProps.id + ')';
	    case REACT_PROVIDER_TYPE:
	      return 'Context.Provider';
	    case REACT_STRICT_MODE_TYPE:
	      return 'StrictMode';
	    case REACT_TIMEOUT_TYPE:
	      return 'Timeout';
	  }
	  if (typeof type === 'object' && type !== null) {
	    switch (type.$$typeof) {
	      case REACT_FORWARD_REF_TYPE:
	        var functionName = type.render.displayName || type.render.name || '';
	        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef';
	    }
	  }
	  return null;
	}

	function describeFiber(fiber) {
	  switch (fiber.tag) {
	    case IndeterminateComponent:
	    case FunctionalComponent:
	    case ClassComponent:
	    case HostComponent:
	      var owner = fiber._debugOwner;
	      var source = fiber._debugSource;
	      var name = getComponentName(fiber);
	      var ownerName = null;
	      if (owner) {
	        ownerName = getComponentName(owner);
	      }
	      return describeComponentFrame(name, source, ownerName);
	    default:
	      return '';
	  }
	}

	// This function can only be called with a work-in-progress fiber and
	// only during begin or complete phase. Do not call it under any other
	// circumstances.
	function getStackAddendumByWorkInProgressFiber(workInProgress) {
	  var info = '';
	  var node = workInProgress;
	  do {
	    info += describeFiber(node);
	    // Otherwise this return pointer might point to the wrong tree:
	    node = node.return;
	  } while (node);
	  return info;
	}

	function getCurrentFiberOwnerName$1() {
	  {
	    var fiber = ReactDebugCurrentFiber.current;
	    if (fiber === null) {
	      return null;
	    }
	    var owner = fiber._debugOwner;
	    if (owner !== null && typeof owner !== 'undefined') {
	      return getComponentName(owner);
	    }
	  }
	  return null;
	}

	function getCurrentFiberStackAddendum$1() {
	  {
	    var fiber = ReactDebugCurrentFiber.current;
	    if (fiber === null) {
	      return null;
	    }
	    // Safe because if current fiber exists, we are reconciling,
	    // and it is guaranteed to be the work-in-progress version.
	    return getStackAddendumByWorkInProgressFiber(fiber);
	  }
	  return null;
	}

	function resetCurrentFiber() {
	  ReactDebugCurrentFrame.getCurrentStack = null;
	  ReactDebugCurrentFiber.current = null;
	  ReactDebugCurrentFiber.phase = null;
	}

	function setCurrentFiber(fiber) {
	  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum$1;
	  ReactDebugCurrentFiber.current = fiber;
	  ReactDebugCurrentFiber.phase = null;
	}

	function setCurrentPhase(phase) {
	  ReactDebugCurrentFiber.phase = phase;
	}

	var ReactDebugCurrentFiber = {
	  current: null,
	  phase: null,
	  resetCurrentFiber: resetCurrentFiber,
	  setCurrentFiber: setCurrentFiber,
	  setCurrentPhase: setCurrentPhase,
	  getCurrentFiberOwnerName: getCurrentFiberOwnerName$1,
	  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum$1
	};

	// A reserved attribute.
	// It is handled by React separately and shouldn't be written to the DOM.
	var RESERVED = 0;

	// A simple string attribute.
	// Attributes that aren't in the whitelist are presumed to have this type.
	var STRING = 1;

	// A string attribute that accepts booleans in React. In HTML, these are called
	// "enumerated" attributes with "true" and "false" as possible values.
	// When true, it should be set to a "true" string.
	// When false, it should be set to a "false" string.
	var BOOLEANISH_STRING = 2;

	// A real boolean attribute.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	var BOOLEAN = 3;

	// An attribute that can be used as a flag as well as with a value.
	// When true, it should be present (set either to an empty string or its name).
	// When false, it should be omitted.
	// For any other value, should be present with that value.
	var OVERLOADED_BOOLEAN = 4;

	// An attribute that must be numeric or parse as a numeric.
	// When falsy, it should be removed.
	var NUMERIC = 5;

	// An attribute that must be positive numeric or parse as a positive numeric.
	// When falsy, it should be removed.
	var POSITIVE_NUMERIC = 6;

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */
	var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


	var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  {
	    warning(false, 'Invalid attribute name: `%s`', attributeName);
	  }
	  return false;
	}

	function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null) {
	    return propertyInfo.type === RESERVED;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
	    return true;
	  }
	  return false;
	}

	function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
	  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
	    return false;
	  }
	  switch (typeof value) {
	    case 'function':
	    // $FlowIssue symbol is perfectly valid here
	    case 'symbol':
	      // eslint-disable-line
	      return true;
	    case 'boolean':
	      {
	        if (isCustomComponentTag) {
	          return false;
	        }
	        if (propertyInfo !== null) {
	          return !propertyInfo.acceptsBooleans;
	        } else {
	          var prefix = name.toLowerCase().slice(0, 5);
	          return prefix !== 'data-' && prefix !== 'aria-';
	        }
	      }
	    default:
	      return false;
	  }
	}

	function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
	  if (value === null || typeof value === 'undefined') {
	    return true;
	  }
	  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
	    return true;
	  }
	  if (isCustomComponentTag) {
	    return false;
	  }
	  if (propertyInfo !== null) {
	    switch (propertyInfo.type) {
	      case BOOLEAN:
	        return !value;
	      case OVERLOADED_BOOLEAN:
	        return value === false;
	      case NUMERIC:
	        return isNaN(value);
	      case POSITIVE_NUMERIC:
	        return isNaN(value) || value < 1;
	    }
	  }
	  return false;
	}

	function getPropertyInfo(name) {
	  return properties.hasOwnProperty(name) ? properties[name] : null;
	}

	function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
	  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
	  this.attributeName = attributeName;
	  this.attributeNamespace = attributeNamespace;
	  this.mustUseProperty = mustUseProperty;
	  this.propertyName = name;
	  this.type = type;
	}

	// When adding attributes to this list, be sure to also add them to
	// the `possibleStandardNames` module to ensure casing and incorrect
	// name warnings.
	var properties = {};

	// These props are reserved by React. They shouldn't be written to the DOM.
	['children', 'dangerouslySetInnerHTML',
	// TODO: This prevents the assignment of defaultValue to regular
	// elements (not just inputs). Now that ReactDOMInput assigns to the
	// defaultValue property -- do we need this?
	'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// A few React string attributes have a different name.
	// This is a mapping from React prop names to the attribute names.
	[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
	  var name = _ref[0],
	      attributeName = _ref[1];

	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are "enumerated" HTML attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are "enumerated" SVG attributes that accept "true" and "false".
	// In React, we let users pass `true` and `false` even though technically
	// these aren't boolean attributes (they are coerced to strings).
	// Since these are SVG attributes, their attribute names are case-sensitive.
	['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
	  name, // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML boolean attributes.
	['allowFullScreen', 'async',
	// Note: there is a special case that prevents it from being written to the DOM
	// on the client side because the browsers are inconsistent. Instead we call focus().
	'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
	// Microdata
	'itemScope'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are the few React props that we set as DOM properties
	// rather than attributes. These are all booleans.
	['checked',
	// Note: `option.selected` is not updated if `select.multiple` is
	// disabled with `removeAttribute`. We have special logic for handling this.
	'multiple', 'muted', 'selected'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that are "overloaded booleans": they behave like
	// booleans, but can also accept a string value.
	['capture', 'download'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that must be positive numbers.
	['cols', 'rows', 'size', 'span'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	// These are HTML attributes that must be numbers.
	['rowSpan', 'start'].forEach(function (name) {
	  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
	  name.toLowerCase(), // attributeName
	  null);
	} // attributeNamespace
	);

	var CAMELIZE = /[\-\:]([a-z])/g;
	var capitalize = function (token) {
	  return token[1].toUpperCase();
	};

	// This is a list of all SVG attributes that need special casing, namespacing,
	// or boolean value assignment. Regular attributes that just accept strings
	// and have the same names are omitted, just like in the HTML whitelist.
	// Some of these attributes can be hard to find. This list was created by
	// scrapping the MDN documentation.
	['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, null);
	} // attributeNamespace
	);

	// String SVG attributes with the xlink namespace.
	['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/1999/xlink');
	});

	// String SVG attributes with the xml namespace.
	['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
	  var name = attributeName.replace(CAMELIZE, capitalize);
	  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
	  attributeName, 'http://www.w3.org/XML/1998/namespace');
	});

	// Special case: this attribute exists both in HTML and SVG.
	// Its "tabindex" attribute name is case-sensitive in SVG so we can't just use
	// its React `tabIndex` name, like we do for attributes that exist only in HTML.
	properties.tabIndex = new PropertyInfoRecord('tabIndex', STRING, false, // mustUseProperty
	'tabindex', // attributeName
	null);

	/**
	 * Get the value for a property on a node. Only used in DEV for SSR validation.
	 * The "expected" argument is used as a hint of what the expected value is.
	 * Some properties have multiple equivalent values.
	 */
	function getValueForProperty(node, name, expected, propertyInfo) {
	  {
	    if (propertyInfo.mustUseProperty) {
	      var propertyName = propertyInfo.propertyName;

	      return node[propertyName];
	    } else {
	      var attributeName = propertyInfo.attributeName;

	      var stringValue = null;

	      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
	        if (node.hasAttribute(attributeName)) {
	          var value = node.getAttribute(attributeName);
	          if (value === '') {
	            return true;
	          }
	          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	            return value;
	          }
	          if (value === '' + expected) {
	            return expected;
	          }
	          return value;
	        }
	      } else if (node.hasAttribute(attributeName)) {
	        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	          // We had an attribute but shouldn't have had one, so read it
	          // for the error message.
	          return node.getAttribute(attributeName);
	        }
	        if (propertyInfo.type === BOOLEAN) {
	          // If this was a boolean, it doesn't matter what the value is
	          // the fact that we have it is the same as the expected.
	          return expected;
	        }
	        // Even if this property uses a namespace we use getAttribute
	        // because we assume its namespaced name is the same as our config.
	        // To use getAttributeNS we need the local name which we don't have
	        // in our config atm.
	        stringValue = node.getAttribute(attributeName);
	      }

	      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
	        return stringValue === null ? expected : stringValue;
	      } else if (stringValue === '' + expected) {
	        return expected;
	      } else {
	        return stringValue;
	      }
	    }
	  }
	}

	/**
	 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
	 * The third argument is used as a hint of what the expected value is. Some
	 * attributes have multiple equivalent values.
	 */
	function getValueForAttribute(node, name, expected) {
	  {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (!node.hasAttribute(name)) {
	      return expected === undefined ? undefined : null;
	    }
	    var value = node.getAttribute(name);
	    if (value === '' + expected) {
	      return expected;
	    }
	    return value;
	  }
	}

	/**
	 * Sets the value for a property on a node.
	 *
	 * @param {DOMElement} node
	 * @param {string} name
	 * @param {*} value
	 */
	function setValueForProperty(node, name, value, isCustomComponentTag) {
	  var propertyInfo = getPropertyInfo(name);
	  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
	    return;
	  }
	  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
	    value = null;
	  }
	  // If the prop isn't in the special list, treat it as a simple attribute.
	  if (isCustomComponentTag || propertyInfo === null) {
	    if (isAttributeNameSafe(name)) {
	      var _attributeName = name;
	      if (value === null) {
	        node.removeAttribute(_attributeName);
	      } else {
	        node.setAttribute(_attributeName, '' + value);
	      }
	    }
	    return;
	  }
	  var mustUseProperty = propertyInfo.mustUseProperty;

	  if (mustUseProperty) {
	    var propertyName = propertyInfo.propertyName;

	    if (value === null) {
	      var type = propertyInfo.type;

	      node[propertyName] = type === BOOLEAN ? false : '';
	    } else {
	      // Contrary to `setAttribute`, object properties are properly
	      // `toString`ed by IE8/9.
	      node[propertyName] = value;
	    }
	    return;
	  }
	  // The rest are treated as attributes with special cases.
	  var attributeName = propertyInfo.attributeName,
	      attributeNamespace = propertyInfo.attributeNamespace;

	  if (value === null) {
	    node.removeAttribute(attributeName);
	  } else {
	    var _type = propertyInfo.type;

	    var attributeValue = void 0;
	    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
	      attributeValue = '';
	    } else {
	      // `setAttribute` with objects becomes only `[object]` in IE8/9,
	      // ('' + value) makes it output the correct toString()-value.
	      attributeValue = '' + value;
	    }
	    if (attributeNamespace) {
	      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
	    } else {
	      node.setAttribute(attributeName, attributeValue);
	    }
	  }
	}

	var ReactControlledValuePropTypes = {
	  checkPropTypes: null
	};

	{
	  var hasReadOnlyValue = {
	    button: true,
	    checkbox: true,
	    image: true,
	    hidden: true,
	    radio: true,
	    reset: true,
	    submit: true
	  };

	  var propTypes = {
	    value: function (props, propName, componentName) {
	      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	        return null;
	      }
	      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    },
	    checked: function (props, propName, componentName) {
	      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	        return null;
	      }
	      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	    }
	  };

	  /**
	   * Provide a linked `value` attribute for controlled forms. You should not use
	   * this outside of the ReactDOM controlled form components.
	   */
	  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
	    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
	  };
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberOwnerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
	var getCurrentFiberStackAddendum = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked != null : props.value != null;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */

	function getHostProps(element, props) {
	  var node = element;
	  var checked = props.checked;

	  var hostProps = _assign({}, props, {
	    defaultChecked: undefined,
	    defaultValue: undefined,
	    value: undefined,
	    checked: checked != null ? checked : node._wrapperState.initialChecked
	  });

	  return hostProps;
	}

	function initWrapperState(element, props) {
	  {
	    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum);

	    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
	      didWarnCheckedDefaultChecked = true;
	    }
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName() || 'A component', props.type);
	      didWarnValueDefaultValue = true;
	    }
	  }

	  var node = element;
	  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

	  node._wrapperState = {
	    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	    initialValue: getSafeValue(props.value != null ? props.value : defaultValue),
	    controlled: isControlled(props)
	  };
	}

	function updateChecked(element, props) {
	  var node = element;
	  var checked = props.checked;
	  if (checked != null) {
	    setValueForProperty(node, 'checked', checked, false);
	  }
	}

	function updateWrapper(element, props) {
	  var node = element;
	  {
	    var _controlled = isControlled(props);

	    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
	      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
	      didWarnUncontrolledToControlled = true;
	    }
	    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
	      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum());
	      didWarnControlledToUncontrolled = true;
	    }
	  }

	  updateChecked(element, props);

	  var value = getSafeValue(props.value);

	  if (value != null) {
	    if (props.type === 'number') {
	      if (value === 0 && node.value === '' ||
	      // eslint-disable-next-line
	      node.value != value) {
	        node.value = '' + value;
	      }
	    } else if (node.value !== '' + value) {
	      node.value = '' + value;
	    }
	  }

	  if (props.hasOwnProperty('value')) {
	    setDefaultValue(node, props.type, value);
	  } else if (props.hasOwnProperty('defaultValue')) {
	    setDefaultValue(node, props.type, getSafeValue(props.defaultValue));
	  }

	  if (props.checked == null && props.defaultChecked != null) {
	    node.defaultChecked = !!props.defaultChecked;
	  }
	}

	function postMountWrapper(element, props, isHydrating) {
	  var node = element;

	  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
	    var _initialValue = '' + node._wrapperState.initialValue;
	    var currentValue = node.value;

	    // Do not assign value if it is already set. This prevents user text input
	    // from being lost during SSR hydration.
	    if (!isHydrating) {
	      // Do not re-assign the value property if there is no change. This
	      // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
	      // prematurely marking required inputs as invalid
	      if (_initialValue !== currentValue) {
	        node.value = _initialValue;
	      }
	    }

	    // value must be assigned before defaultValue. This fixes an issue where the
	    // visually displayed value of date inputs disappears on mobile Safari and Chrome:
	    // https://github.com/facebook/react/issues/7233
	    node.defaultValue = _initialValue;
	  }

	  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	  // this is needed to work around a chrome bug where setting defaultChecked
	  // will sometimes influence the value of checked (even after detachment).
	  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	  // We need to temporarily unset name to avoid disrupting radio button groups.
	  var name = node.name;
	  if (name !== '') {
	    node.name = '';
	  }
	  node.defaultChecked = !node.defaultChecked;
	  node.defaultChecked = !node.defaultChecked;
	  if (name !== '') {
	    node.name = name;
	  }
	}

	function restoreControlledState(element, props) {
	  var node = element;
	  updateWrapper(node, props);
	  updateNamedCousins(node, props);
	}

	function updateNamedCousins(rootNode, props) {
	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form. It might not even be in the
	    // document. Let's just use the local `querySelectorAll` to ensure we don't
	    // miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
	      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

	      // We need update the tracked value on the named cousin since the value
	      // was changed but the input saw no event or value set
	      updateValueIfChanged(otherNode);

	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      updateWrapper(otherNode, otherProps);
	    }
	  }
	}

	// In Chrome, assigning defaultValue to certain input types triggers input validation.
	// For number inputs, the display value loses trailing decimal points. For email inputs,
	// Chrome raises "The specified value <x> is not a valid email address".
	//
	// Here we check to see if the defaultValue has actually changed, avoiding these problems
	// when the user is inputting text
	//
	// https://github.com/facebook/react/issues/7253
	function setDefaultValue(node, type, value) {
	  if (
	  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
	  type !== 'number' || node.ownerDocument.activeElement !== node) {
	    if (value == null) {
	      node.defaultValue = '' + node._wrapperState.initialValue;
	    } else if (node.defaultValue !== '' + value) {
	      node.defaultValue = '' + value;
	    }
	  }
	}

	function getSafeValue(value) {
	  switch (typeof value) {
	    case 'boolean':
	    case 'number':
	    case 'object':
	    case 'string':
	    case 'undefined':
	      return value;
	    default:
	      // function, symbol are assigned as empty strings
	      return '';
	  }
	}

	var eventTypes$1 = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: 'onChange',
	      captured: 'onChangeCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
	  }
	};

	function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
	  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
	  event.type = 'change';
	  // Flag this event loop as needing state restore.
	  enqueueStateRestore(target);
	  accumulateTwoPhaseDispatches(event);
	  return event;
	}
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  runEventsInBatch(event, false);
	}

	function getInstIfValueChanged(targetInst) {
	  var targetNode = getNodeFromInstance$1(targetInst);
	  if (updateValueIfChanged(targetNode)) {
	    return targetInst;
	  }
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_CHANGE) {
	    return targetInst;
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
	}

	/**
	 * (For IE <=9) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For IE <=9) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  activeElement = null;
	  activeElementInst = null;
	}

	/**
	 * (For IE <=9) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  if (getInstIfValueChanged(activeElementInst)) {
	    manualDispatchChangeEvent(nativeEvent);
	  }
	}

	function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
	  if (topLevelType === TOP_FOCUS) {
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === TOP_BLUR) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
	  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    return getInstIfValueChanged(activeElementInst);
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  var nodeName = elem.nodeName;
	  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_CLICK) {
	    return getInstIfValueChanged(targetInst);
	  }
	}

	function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
	    return getInstIfValueChanged(targetInst);
	  }
	}

	function handleControlledInputBlur(node) {
	  var state = node._wrapperState;

	  if (!state || !state.controlled || node.type !== 'number') {
	    return;
	  }

	  // If controlled, assign the value attribute to the current value on blur
	  setDefaultValue(node, 'number', node.value);
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	  eventTypes: eventTypes$1,

	  _isInputEventSupported: isInputEventSupported,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

	    var getTargetInstFunc = void 0,
	        handleEventFunc = void 0;
	    if (shouldUseChangeEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForChangeEvent;
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventPolyfill;
	        handleEventFunc = handleEventsForInputEventPolyfill;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }

	    // When blurring, set the value attribute for number inputs
	    if (topLevelType === TOP_BLUR) {
	      handleControlledInputBlur(targetNode);
	    }
	  }
	};

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

	var SyntheticUIEvent = SyntheticEvent$1.extend({
	  view: null,
	  detail: null
	});

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  Alt: 'altKey',
	  Control: 'ctrlKey',
	  Meta: 'metaKey',
	  Shift: 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticMouseEvent = SyntheticUIEvent.extend({
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  pageX: null,
	  pageY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: null,
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  }
	});

	/**
	 * @interface PointerEvent
	 * @see http://www.w3.org/TR/pointerevents/
	 */
	var SyntheticPointerEvent = SyntheticMouseEvent.extend({
	  pointerId: null,
	  width: null,
	  height: null,
	  pressure: null,
	  tiltX: null,
	  tiltY: null,
	  pointerType: null,
	  isPrimary: null
	});

	var eventTypes$2 = {
	  mouseEnter: {
	    registrationName: 'onMouseEnter',
	    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
	  },
	  mouseLeave: {
	    registrationName: 'onMouseLeave',
	    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
	  },
	  pointerEnter: {
	    registrationName: 'onPointerEnter',
	    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
	  },
	  pointerLeave: {
	    registrationName: 'onPointerLeave',
	    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
	  }
	};

	var EnterLeaveEventPlugin = {
	  eventTypes: eventTypes$2,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
	    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

	    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }

	    if (!isOutEvent && !isOverEvent) {
	      // Must not be a mouse or pointer in or out - ignoring.
	      return null;
	    }

	    var win = void 0;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from = void 0;
	    var to = void 0;
	    if (isOutEvent) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var eventInterface = void 0,
	        leaveEventType = void 0,
	        enterEventType = void 0,
	        eventTypePrefix = void 0;

	    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
	      eventInterface = SyntheticMouseEvent;
	      leaveEventType = eventTypes$2.mouseLeave;
	      enterEventType = eventTypes$2.mouseEnter;
	      eventTypePrefix = 'mouse';
	    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
	      eventInterface = SyntheticPointerEvent;
	      leaveEventType = eventTypes$2.pointerLeave;
	      enterEventType = eventTypes$2.pointerEnter;
	      eventTypePrefix = 'pointer';
	    }

	    var fromNode = from == null ? win : getNodeFromInstance$1(from);
	    var toNode = to == null ? win : getNodeFromInstance$1(to);

	    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
	    leave.type = eventTypePrefix + 'leave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
	    enter.type = eventTypePrefix + 'enter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }
	};

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 *
	 * Note that this module is currently shared and assumed to be stateless.
	 * If this becomes an actual Map, that will break.
	 */

	/**
	 * This API should be called `delete` but we'd have to make sure to always
	 * transform these to strings for IE support. When this transform is fully
	 * supported we can rename it.
	 */


	function get(key) {
	  return key._reactInternalFiber;
	}

	function has(key) {
	  return key._reactInternalFiber !== undefined;
	}

	function set(key, value) {
	  key._reactInternalFiber = value;
	}

	// Don't change these two values. They're used by React Dev Tools.
	var NoEffect = /*              */0;
	var PerformedWork = /*         */1;

	// You can change the rest (and add more).
	var Placement = /*             */2;
	var Update = /*                */4;
	var PlacementAndUpdate = /*    */6;
	var Deletion = /*              */8;
	var ContentReset = /*          */16;
	var Callback = /*              */32;
	var DidCapture = /*            */64;
	var Ref = /*                   */128;
	var Snapshot = /*              */256;

	// Union of all host effects
	var HostEffectMask = /*        */511;

	var Incomplete = /*            */512;
	var ShouldCapture = /*         */1024;

	var MOUNTING = 1;
	var MOUNTED = 2;
	var UNMOUNTED = 3;

	function isFiberMountedImpl(fiber) {
	  var node = fiber;
	  if (!fiber.alternate) {
	    // If there is no alternate, this might be a new tree that isn't inserted
	    // yet. If it is, then it will have a pending insertion effect on it.
	    if ((node.effectTag & Placement) !== NoEffect) {
	      return MOUNTING;
	    }
	    while (node.return) {
	      node = node.return;
	      if ((node.effectTag & Placement) !== NoEffect) {
	        return MOUNTING;
	      }
	    }
	  } else {
	    while (node.return) {
	      node = node.return;
	    }
	  }
	  if (node.tag === HostRoot) {
	    // TODO: Check if this was a nested HostRoot when used with
	    // renderContainerIntoSubtree.
	    return MOUNTED;
	  }
	  // If we didn't hit the root, that means that we're in an disconnected tree
	  // that has been unmounted.
	  return UNMOUNTED;
	}

	function isFiberMounted(fiber) {
	  return isFiberMountedImpl(fiber) === MOUNTED;
	}

	function isMounted(component) {
	  {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null && owner.tag === ClassComponent) {
	      var ownerFiber = owner;
	      var instance = ownerFiber.stateNode;
	      !instance._warnedAboutRefsInRender ? warning(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component') : void 0;
	      instance._warnedAboutRefsInRender = true;
	    }
	  }

	  var fiber = get(component);
	  if (!fiber) {
	    return false;
	  }
	  return isFiberMountedImpl(fiber) === MOUNTED;
	}

	function assertIsMounted(fiber) {
	  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	}

	function findCurrentFiberUsingSlowPath(fiber) {
	  var alternate = fiber.alternate;
	  if (!alternate) {
	    // If there is no alternate, then we only need to check if it is mounted.
	    var state = isFiberMountedImpl(fiber);
	    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	    if (state === MOUNTING) {
	      return null;
	    }
	    return fiber;
	  }
	  // If we have two possible branches, we'll walk backwards up to the root
	  // to see what path the root points to. On the way we may hit one of the
	  // special cases and we'll deal with them.
	  var a = fiber;
	  var b = alternate;
	  while (true) {
	    var parentA = a.return;
	    var parentB = parentA ? parentA.alternate : null;
	    if (!parentA || !parentB) {
	      // We're at the root.
	      break;
	    }

	    // If both copies of the parent fiber point to the same child, we can
	    // assume that the child is current. This happens when we bailout on low
	    // priority: the bailed out fiber's child reuses the current child.
	    if (parentA.child === parentB.child) {
	      var child = parentA.child;
	      while (child) {
	        if (child === a) {
	          // We've determined that A is the current branch.
	          assertIsMounted(parentA);
	          return fiber;
	        }
	        if (child === b) {
	          // We've determined that B is the current branch.
	          assertIsMounted(parentA);
	          return alternate;
	        }
	        child = child.sibling;
	      }
	      // We should never have an alternate for any mounting node. So the only
	      // way this could possibly happen is if this was unmounted, if at all.
	      invariant(false, 'Unable to find node on an unmounted component.');
	    }

	    if (a.return !== b.return) {
	      // The return pointer of A and the return pointer of B point to different
	      // fibers. We assume that return pointers never criss-cross, so A must
	      // belong to the child set of A.return, and B must belong to the child
	      // set of B.return.
	      a = parentA;
	      b = parentB;
	    } else {
	      // The return pointers point to the same fiber. We'll have to use the
	      // default, slow path: scan the child sets of each parent alternate to see
	      // which child belongs to which set.
	      //
	      // Search parent A's child set
	      var didFindChild = false;
	      var _child = parentA.child;
	      while (_child) {
	        if (_child === a) {
	          didFindChild = true;
	          a = parentA;
	          b = parentB;
	          break;
	        }
	        if (_child === b) {
	          didFindChild = true;
	          b = parentA;
	          a = parentB;
	          break;
	        }
	        _child = _child.sibling;
	      }
	      if (!didFindChild) {
	        // Search parent B's child set
	        _child = parentB.child;
	        while (_child) {
	          if (_child === a) {
	            didFindChild = true;
	            a = parentB;
	            b = parentA;
	            break;
	          }
	          if (_child === b) {
	            didFindChild = true;
	            b = parentB;
	            a = parentA;
	            break;
	          }
	          _child = _child.sibling;
	        }
	        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
	      }
	    }

	    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  }
	  // If the root is not a host container, we're in a disconnected tree. I.e.
	  // unmounted.
	  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
	  if (a.stateNode.current === a) {
	    // We've determined that A is the current branch.
	    return fiber;
	  }
	  // Otherwise B has to be current branch.
	  return alternate;
	}

	function findCurrentHostFiber(parent) {
	  var currentParent = findCurrentFiberUsingSlowPath(parent);
	  if (!currentParent) {
	    return null;
	  }

	  // Next we'll drill down this component to find the first HostComponent/Text.
	  var node = currentParent;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      return node;
	    } else if (node.child) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === currentParent) {
	      return null;
	    }
	    while (!node.sibling) {
	      if (!node.return || node.return === currentParent) {
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	  // Flow needs the return null here, but ESLint complains about it.
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function findCurrentHostFiberWithNoPortals(parent) {
	  var currentParent = findCurrentFiberUsingSlowPath(parent);
	  if (!currentParent) {
	    return null;
	  }

	  // Next we'll drill down this component to find the first HostComponent/Text.
	  var node = currentParent;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      return node;
	    } else if (node.child && node.tag !== HostPortal) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === currentParent) {
	      return null;
	    }
	    while (!node.sibling) {
	      if (!node.return || node.return === currentParent) {
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	  // Flow needs the return null here, but ESLint complains about it.
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function addEventBubbleListener(element, eventType, listener) {
	  element.addEventListener(eventType, listener, false);
	}

	function addEventCaptureListener(element, eventType, listener) {
	  element.addEventListener(eventType, listener, true);
	}

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var SyntheticAnimationEvent = SyntheticEvent$1.extend({
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var SyntheticClipboardEvent = SyntheticEvent$1.extend({
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	});

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticFocusEvent = SyntheticUIEvent.extend({
	  relatedTarget: null
	});

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode = void 0;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
	  // report Enter as charCode 10 when ctrl is pressed.
	  if (charCode === 10) {
	    charCode = 13;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  Esc: 'Escape',
	  Spacebar: ' ',
	  Left: 'ArrowLeft',
	  Up: 'ArrowUp',
	  Right: 'ArrowRight',
	  Down: 'ArrowDown',
	  Del: 'Delete',
	  Win: 'OS',
	  Menu: 'ContextMenu',
	  Apps: 'ContextMenu',
	  Scroll: 'ScrollLock',
	  MozPrintableKey: 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  '8': 'Backspace',
	  '9': 'Tab',
	  '12': 'Clear',
	  '13': 'Enter',
	  '16': 'Shift',
	  '17': 'Control',
	  '18': 'Alt',
	  '19': 'Pause',
	  '20': 'CapsLock',
	  '27': 'Escape',
	  '32': ' ',
	  '33': 'PageUp',
	  '34': 'PageDown',
	  '35': 'End',
	  '36': 'Home',
	  '37': 'ArrowLeft',
	  '38': 'ArrowUp',
	  '39': 'ArrowRight',
	  '40': 'ArrowDown',
	  '45': 'Insert',
	  '46': 'Delete',
	  '112': 'F1',
	  '113': 'F2',
	  '114': 'F3',
	  '115': 'F4',
	  '116': 'F5',
	  '117': 'F6',
	  '118': 'F7',
	  '119': 'F8',
	  '120': 'F9',
	  '121': 'F10',
	  '122': 'F11',
	  '123': 'F12',
	  '144': 'NumLock',
	  '145': 'ScrollLock',
	  '224': 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	});

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticDragEvent = SyntheticMouseEvent.extend({
	  dataTransfer: null
	});

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var SyntheticTouchEvent = SyntheticUIEvent.extend({
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	});

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var SyntheticTransitionEvent = SyntheticEvent$1.extend({
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	});

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var SyntheticWheelEvent = SyntheticMouseEvent.extend({
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },

	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	});

	/**
	 * Turns
	 * ['abort', ...]
	 * into
	 * eventTypes = {
	 *   'abort': {
	 *     phasedRegistrationNames: {
	 *       bubbled: 'onAbort',
	 *       captured: 'onAbortCapture',
	 *     },
	 *     dependencies: [TOP_ABORT],
	 *   },
	 *   ...
	 * };
	 * topLevelEventsToDispatchConfig = new Map([
	 *   [TOP_ABORT, { sameConfig }],
	 * ]);
	 */

	var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
	var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

	var eventTypes$4 = {};
	var topLevelEventsToDispatchConfig = {};

	function addEventTypeNameToConfig(_ref, isInteractive) {
	  var topEvent = _ref[0],
	      event = _ref[1];

	  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
	  var onEvent = 'on' + capitalizedEvent;

	  var type = {
	    phasedRegistrationNames: {
	      bubbled: onEvent,
	      captured: onEvent + 'Capture'
	    },
	    dependencies: [topEvent],
	    isInteractive: isInteractive
	  };
	  eventTypes$4[event] = type;
	  topLevelEventsToDispatchConfig[topEvent] = type;
	}

	interactiveEventTypeNames.forEach(function (eventTuple) {
	  addEventTypeNameToConfig(eventTuple, true);
	});
	nonInteractiveEventTypeNames.forEach(function (eventTuple) {
	  addEventTypeNameToConfig(eventTuple, false);
	});

	// Only used in DEV for exhaustiveness validation.
	var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

	var SimpleEventPlugin = {
	  eventTypes: eventTypes$4,

	  isInteractiveTopLevelEventType: function (topLevelType) {
	    var config = topLevelEventsToDispatchConfig[topLevelType];
	    return config !== undefined && config.isInteractive === true;
	  },


	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor = void 0;
	    switch (topLevelType) {
	      case TOP_KEY_PRESS:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case TOP_KEY_DOWN:
	      case TOP_KEY_UP:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case TOP_BLUR:
	      case TOP_FOCUS:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case TOP_CLICK:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case TOP_DOUBLE_CLICK:
	      case TOP_MOUSE_DOWN:
	      case TOP_MOUSE_MOVE:
	      case TOP_MOUSE_UP:
	      // TODO: Disabled elements should not respond to mouse events
	      /* falls through */
	      case TOP_MOUSE_OUT:
	      case TOP_MOUSE_OVER:
	      case TOP_CONTEXT_MENU:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case TOP_DRAG:
	      case TOP_DRAG_END:
	      case TOP_DRAG_ENTER:
	      case TOP_DRAG_EXIT:
	      case TOP_DRAG_LEAVE:
	      case TOP_DRAG_OVER:
	      case TOP_DRAG_START:
	      case TOP_DROP:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case TOP_TOUCH_CANCEL:
	      case TOP_TOUCH_END:
	      case TOP_TOUCH_MOVE:
	      case TOP_TOUCH_START:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case TOP_ANIMATION_END:
	      case TOP_ANIMATION_ITERATION:
	      case TOP_ANIMATION_START:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case TOP_TRANSITION_END:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case TOP_SCROLL:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case TOP_WHEEL:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case TOP_COPY:
	      case TOP_CUT:
	      case TOP_PASTE:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	      case TOP_GOT_POINTER_CAPTURE:
	      case TOP_LOST_POINTER_CAPTURE:
	      case TOP_POINTER_CANCEL:
	      case TOP_POINTER_DOWN:
	      case TOP_POINTER_MOVE:
	      case TOP_POINTER_OUT:
	      case TOP_POINTER_OVER:
	      case TOP_POINTER_UP:
	        EventConstructor = SyntheticPointerEvent;
	        break;
	      default:
	        {
	          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
	            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
	          }
	        }
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent$1;
	        break;
	    }
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    accumulateTwoPhaseDispatches(event);
	    return event;
	  }
	};

	var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


	var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
	var callbackBookkeepingPool = [];

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findRootContainerNode(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst.return) {
	    inst = inst.return;
	  }
	  if (inst.tag !== HostRoot) {
	    // This can happen if we're in a detached tree.
	    return null;
	  }
	  return inst.stateNode.containerInfo;
	}

	// Used to store ancestor hierarchy in top level callback
	function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
	  if (callbackBookkeepingPool.length) {
	    var instance = callbackBookkeepingPool.pop();
	    instance.topLevelType = topLevelType;
	    instance.nativeEvent = nativeEvent;
	    instance.targetInst = targetInst;
	    return instance;
	  }
	  return {
	    topLevelType: topLevelType,
	    nativeEvent: nativeEvent,
	    targetInst: targetInst,
	    ancestors: []
	  };
	}

	function releaseTopLevelCallbackBookKeeping(instance) {
	  instance.topLevelType = null;
	  instance.nativeEvent = null;
	  instance.targetInst = null;
	  instance.ancestors.length = 0;
	  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
	    callbackBookkeepingPool.push(instance);
	  }
	}

	function handleTopLevel(bookKeeping) {
	  var targetInst = bookKeeping.targetInst;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    if (!ancestor) {
	      bookKeeping.ancestors.push(ancestor);
	      break;
	    }
	    var root = findRootContainerNode(ancestor);
	    if (!root) {
	      break;
	    }
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = getClosestInstanceFromNode(root);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	// TODO: can we stop exporting these?
	var _enabled = true;

	function setEnabled(enabled) {
	  _enabled = !!enabled;
	}

	function isEnabled() {
	  return _enabled;
	}

	/**
	 * Traps top-level events by using event bubbling.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} element Element on which to attach listener.
	 * @return {?object} An object with a remove function which will forcefully
	 *                  remove the listener.
	 * @internal
	 */
	function trapBubbledEvent(topLevelType, element) {
	  if (!element) {
	    return null;
	  }
	  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

	  addEventBubbleListener(element, getRawEventName(topLevelType),
	  // Check if interactive and wrap in interactiveUpdates
	  dispatch.bind(null, topLevelType));
	}

	/**
	 * Traps a top-level event by using event capturing.
	 *
	 * @param {number} topLevelType Number from `TopLevelEventTypes`.
	 * @param {object} element Element on which to attach listener.
	 * @return {?object} An object with a remove function which will forcefully
	 *                  remove the listener.
	 * @internal
	 */
	function trapCapturedEvent(topLevelType, element) {
	  if (!element) {
	    return null;
	  }
	  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

	  addEventCaptureListener(element, getRawEventName(topLevelType),
	  // Check if interactive and wrap in interactiveUpdates
	  dispatch.bind(null, topLevelType));
	}

	function dispatchInteractiveEvent(topLevelType, nativeEvent) {
	  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
	}

	function dispatchEvent(topLevelType, nativeEvent) {
	  if (!_enabled) {
	    return;
	  }

	  var nativeEventTarget = getEventTarget(nativeEvent);
	  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
	  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
	    // If we get an event (ex: img onload) before committing that
	    // component's mount, ignore it for now (that is, treat it as if it was an
	    // event on a non-React tree). We might also consider queueing events and
	    // dispatching them after the mount.
	    targetInst = null;
	  }

	  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

	  try {
	    // Event queue being processed in the same cycle allows
	    // `preventDefault`.
	    batchedUpdates(handleTopLevel, bookKeeping);
	  } finally {
	    releaseTopLevelCallbackBookKeeping(bookKeeping);
	  }
	}

	var ReactDOMEventListener = Object.freeze({
		get _enabled () { return _enabled; },
		setEnabled: setEnabled,
		isEnabled: isEnabled,
		trapBubbledEvent: trapBubbledEvent,
		trapCapturedEvent: trapCapturedEvent,
		dispatchEvent: dispatchEvent
	});

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactDOMEventListener, which is injected and can therefore support
	 *    pluggable event sources. This is the only work that occurs in the main
	 *    thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var reactTopListenersCounter = 0;

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * We listen for bubbled touch events on the document object.
	 *
	 * Firefox v8.01 (and possibly others) exhibited strange behavior when
	 * mounting `onmousemove` events at some node that was not the document
	 * element. The symptoms were that if your mouse is not moving over something
	 * contained within that mount point (for example on the background) the
	 * top-level listeners for `onmousemove` won't be called. However, if you
	 * register the `mousemove` on the document object, then it will of course
	 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	 * top-level listeners to the document object only, at least for these
	 * movement types of events and possibly all events.
	 *
	 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	 *
	 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	 * they bubble to document.
	 *
	 * @param {string} registrationName Name of listener (e.g. `onClick`).
	 * @param {object} mountAt Container where to mount the listener
	 */
	function listenTo(registrationName, mountAt) {
	  var isListening = getListeningForDocument(mountAt);
	  var dependencies = registrationNameDependencies[registrationName];

	  for (var i = 0; i < dependencies.length; i++) {
	    var dependency = dependencies[i];
	    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	      switch (dependency) {
	        case TOP_SCROLL:
	          trapCapturedEvent(TOP_SCROLL, mountAt);
	          break;
	        case TOP_FOCUS:
	        case TOP_BLUR:
	          trapCapturedEvent(TOP_FOCUS, mountAt);
	          trapCapturedEvent(TOP_BLUR, mountAt);
	          // We set the flag for a single dependency later in this function,
	          // but this ensures we mark both as attached rather than just one.
	          isListening[TOP_BLUR] = true;
	          isListening[TOP_FOCUS] = true;
	          break;
	        case TOP_CANCEL:
	        case TOP_CLOSE:
	          if (isEventSupported(getRawEventName(dependency), true)) {
	            trapCapturedEvent(dependency, mountAt);
	          }
	          break;
	        case TOP_INVALID:
	        case TOP_SUBMIT:
	        case TOP_RESET:
	          // We listen to them on the target DOM elements.
	          // Some of them bubble so we don't want them to fire twice.
	          break;
	        default:
	          // By default, listen on the top level to all non-media events.
	          // Media events don't bubble so adding the listener wouldn't do anything.
	          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
	          if (!isMediaEvent) {
	            trapBubbledEvent(dependency, mountAt);
	          }
	          break;
	      }
	      isListening[dependency] = true;
	    }
	  }
	}

	function isListeningToAllDependencies(registrationName, mountAt) {
	  var isListening = getListeningForDocument(mountAt);
	  var dependencies = registrationNameDependencies[registrationName];
	  for (var i = 0; i < dependencies.length; i++) {
	    var dependency = dependencies[i];
	    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	      return false;
	    }
	  }
	  return true;
	}

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === TEXT_NODE) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	/**
	 * @param {DOMElement} outerNode
	 * @return {?object}
	 */
	function getOffsets(outerNode) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode,
	      anchorOffset = selection.anchorOffset,
	      focusNode = selection.focusNode,
	      focusOffset = selection.focusOffset;

	  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
	  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
	  // expose properties, triggering a "Permission denied error" if any of its
	  // properties are accessed. The only seemingly possible way to avoid erroring
	  // is to access a property that typically works for non-anonymous divs and
	  // catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

	  try {
	    /* eslint-disable no-unused-expressions */
	    anchorNode.nodeType;
	    focusNode.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
	}

	/**
	 * Returns {start, end} where `start` is the character/codepoint index of
	 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
	 * `end` is the index of (focusNode, focusOffset).
	 *
	 * Returns null if you pass in garbage input but we should probably just crash.
	 *
	 * Exported only for testing.
	 */
	function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
	  var length = 0;
	  var start = -1;
	  var end = -1;
	  var indexWithinAnchor = 0;
	  var indexWithinFocus = 0;
	  var node = outerNode;
	  var parentNode = null;

	  outer: while (true) {
	    var next = null;

	    while (true) {
	      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
	        start = length + anchorOffset;
	      }
	      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
	        end = length + focusOffset;
	      }

	      if (node.nodeType === TEXT_NODE) {
	        length += node.nodeValue.length;
	      }

	      if ((next = node.firstChild) === null) {
	        break;
	      }
	      // Moving from `node` to its first child `next`.
	      parentNode = node;
	      node = next;
	    }

	    while (true) {
	      if (node === outerNode) {
	        // If `outerNode` has children, this is always the second time visiting
	        // it. If it has no children, this is still the first loop, and the only
	        // valid selection is anchorNode and focusNode both equal to this node
	        // and both offsets 0, in which case we will have handled above.
	        break outer;
	      }
	      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
	        start = length;
	      }
	      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
	        end = length;
	      }
	      if ((next = node.nextSibling) !== null) {
	        break;
	      }
	      node = parentNode;
	      parentNode = node.parentNode;
	    }

	    // Moving from `node` to its next sibling `next`.
	    node = next;
	  }

	  if (start === -1 || end === -1) {
	    // This should never happen. (Would happen if the anchor/focus nodes aren't
	    // actually inside the passed-in node.)
	    return null;
	  }

	  return {
	    start: start,
	    end: end
	  };
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
	      return;
	    }
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */

	/**
	 * @hasSelectionCapabilities: we get the element types that support selection
	 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
	 * and `selectionEnd` rows.
	 */
	function hasSelectionCapabilities(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
	}

	function getSelectionInformation() {
	  var focusedElem = getActiveElement();
	  return {
	    focusedElem: focusedElem,
	    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
	  };
	}

	/**
	 * @restoreSelection: If any selection information was potentially lost,
	 * restore it. This is useful when performing operations that could remove dom
	 * nodes and place them back in, resulting in focus being lost.
	 */
	function restoreSelection(priorSelectionInformation) {
	  var curFocusedElem = getActiveElement();
	  var priorFocusedElem = priorSelectionInformation.focusedElem;
	  var priorSelectionRange = priorSelectionInformation.selectionRange;
	  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
	      setSelection(priorFocusedElem, priorSelectionRange);
	    }

	    // Focusing a node can change the scroll position, which is undesirable
	    var ancestors = [];
	    var ancestor = priorFocusedElem;
	    while (ancestor = ancestor.parentNode) {
	      if (ancestor.nodeType === ELEMENT_NODE) {
	        ancestors.push({
	          element: ancestor,
	          left: ancestor.scrollLeft,
	          top: ancestor.scrollTop
	        });
	      }
	    }

	    if (typeof priorFocusedElem.focus === 'function') {
	      priorFocusedElem.focus();
	    }

	    for (var i = 0; i < ancestors.length; i++) {
	      var info = ancestors[i];
	      info.element.scrollLeft = info.left;
	      info.element.scrollTop = info.top;
	    }
	  }
	}

	/**
	 * @getSelection: Gets the selection bounds of a focused textarea, input or
	 * contentEditable node.
	 * -@input: Look up selection bounds of this input
	 * -@return {start: selectionStart, end: selectionEnd}
	 */
	function getSelection$1(input) {
	  var selection = void 0;

	  if ('selectionStart' in input) {
	    // Modern browser with input or textarea.
	    selection = {
	      start: input.selectionStart,
	      end: input.selectionEnd
	    };
	  } else {
	    // Content editable or old IE textarea.
	    selection = getOffsets(input);
	  }

	  return selection || { start: 0, end: 0 };
	}

	/**
	 * @setSelection: Sets the selection bounds of a textarea or input and focuses
	 * the input.
	 * -@input     Set selection bounds of this input or textarea
	 * -@offsets   Object of same form that is returned from get*
	 */
	function setSelection(input, offsets) {
	  var start = offsets.start,
	      end = offsets.end;

	  if (end === undefined) {
	    end = start;
	  }

	  if ('selectionStart' in input) {
	    input.selectionStart = start;
	    input.selectionEnd = Math.min(end, input.value.length);
	  } else {
	    setOffsets(input, offsets);
	  }
	}

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes$3 = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: 'onSelect',
	      captured: 'onSelectCapture'
	    },
	    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
	  }
	};

	var activeElement$1 = null;
	var activeElementInst$1 = null;
	var lastSelection = null;
	var mouseDown = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement$1);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement$1;

	    accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	  eventTypes: eventTypes$3,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
	    // Track whether all listeners exists for this plugin. If none exist, we do
	    // not extract events. See #3639.
	    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
	      return null;
	    }

	    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case TOP_FOCUS:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement$1 = targetNode;
	          activeElementInst$1 = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case TOP_BLUR:
	        activeElement$1 = null;
	        activeElementInst$1 = null;
	        lastSelection = null;
	        break;
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case TOP_MOUSE_DOWN:
	        mouseDown = true;
	        break;
	      case TOP_CONTEXT_MENU:
	      case TOP_MOUSE_UP:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case TOP_SELECTION_CHANGE:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case TOP_KEY_DOWN:
	      case TOP_KEY_UP:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  }
	};

	/**
	 * Inject modules for resolving DOM hierarchy and plugin ordering.
	 */
	injection.injectEventPluginOrder(DOMEventPluginOrder);
	injection$1.injectComponentTree(ReactDOMComponentTree);

	/**
	 * Some important event plugins included by default (without having to require
	 * them).
	 */
	injection.injectEventPluginsByName({
	  SimpleEventPlugin: SimpleEventPlugin,
	  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	  ChangeEventPlugin: ChangeEventPlugin,
	  SelectEventPlugin: SelectEventPlugin,
	  BeforeInputEventPlugin: BeforeInputEventPlugin
	});

	// We capture a local reference to any global, in case it gets polyfilled after
	// this module is initially evaluated.
	// We want to be using a consistent implementation.

	var localRequestAnimationFrame$1 = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;

	/**
	 * A scheduling library to allow scheduling work with more granular priority and
	 * control than requestAnimationFrame and requestIdleCallback.
	 * Current TODO items:
	 * X- Pull out the scheduleWork polyfill built into React
	 * X- Initial test coverage
	 * X- Support for multiple callbacks
	 * - Support for two priorities; serial and deferred
	 * - Better test coverage
	 * - Better docblock
	 * - Polish documentation, API
	 */

	// This is a built-in polyfill for requestIdleCallback. It works by scheduling
	// a requestAnimationFrame, storing the time for the start of the frame, then
	// scheduling a postMessage which gets scheduled after paint. Within the
	// postMessage handler do as much work as possible until time + frame rate.
	// By separating the idle call into a separate event tick we ensure that
	// layout, paint and other browser work is counted against the available time.
	// The frame rate is dynamically adjusted.

	// We capture a local reference to any global, in case it gets polyfilled after
	// this module is initially evaluated.
	// We want to be using a consistent implementation.
	var localDate = Date;
	var localSetTimeout = setTimeout;
	var localClearTimeout = clearTimeout;

	var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

	var now$1 = void 0;
	if (hasNativePerformanceNow) {
	  var Performance = performance;
	  now$1 = function () {
	    return Performance.now();
	  };
	} else {
	  now$1 = function () {
	    return localDate.now();
	  };
	}

	var scheduleWork = void 0;
	var cancelScheduledWork = void 0;

	if (!ExecutionEnvironment.canUseDOM) {
	  var timeoutIds = new Map();

	  scheduleWork = function (callback, options) {
	    // keeping return type consistent
	    var callbackConfig = {
	      scheduledCallback: callback,
	      timeoutTime: 0,
	      next: null,
	      prev: null
	    };
	    var timeoutId = localSetTimeout(function () {
	      callback({
	        timeRemaining: function () {
	          return Infinity;
	        },

	        didTimeout: false
	      });
	    });
	    timeoutIds.set(callback, timeoutId);
	    return callbackConfig;
	  };
	  cancelScheduledWork = function (callbackId) {
	    var callback = callbackId.scheduledCallback;
	    var timeoutId = timeoutIds.get(callback);
	    timeoutIds.delete(callbackId);
	    localClearTimeout(timeoutId);
	  };
	} else {
	  {
	    if (typeof localRequestAnimationFrame$1 !== 'function') {
	      warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
	    }
	  }

	  var localRequestAnimationFrame = typeof localRequestAnimationFrame$1 === 'function' ? localRequestAnimationFrame$1 : function (callback) {
	    invariant(false, 'React depends on requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills');
	  };

	  var headOfPendingCallbacksLinkedList = null;
	  var tailOfPendingCallbacksLinkedList = null;

	  // We track what the next soonest timeoutTime is, to be able to quickly tell
	  // if none of the scheduled callbacks have timed out.
	  var nextSoonestTimeoutTime = -1;

	  var isIdleScheduled = false;
	  var isAnimationFrameScheduled = false;

	  var frameDeadline = 0;
	  // We start out assuming that we run at 30fps but then the heuristic tracking
	  // will adjust this value to a faster fps if we get more frequent animation
	  // frames.
	  var previousFrameTime = 33;
	  var activeFrameTime = 33;

	  var frameDeadlineObject = {
	    didTimeout: false,
	    timeRemaining: function () {
	      var remaining = frameDeadline - now$1();
	      return remaining > 0 ? remaining : 0;
	    }
	  };

	  /**
	   * Handles the case where a callback errors:
	   * - don't catch the error, because this changes debugging behavior
	   * - do start a new postMessage callback, to call any remaining callbacks,
	   * - but only if there is an error, so there is not extra overhead.
	   */
	  var callUnsafely = function (callbackConfig, arg) {
	    var callback = callbackConfig.scheduledCallback;
	    var finishedCalling = false;
	    try {
	      callback(arg);
	      finishedCalling = true;
	    } finally {
	      // always remove it from linked list
	      cancelScheduledWork(callbackConfig);

	      if (!finishedCalling) {
	        // an error must have been thrown
	        isIdleScheduled = true;
	        window.postMessage(messageKey, '*');
	      }
	    }
	  };

	  /**
	   * Checks for timed out callbacks, runs them, and then checks again to see if
	   * any more have timed out.
	   * Keeps doing this until there are none which have currently timed out.
	   */
	  var callTimedOutCallbacks = function () {
	    if (headOfPendingCallbacksLinkedList === null) {
	      return;
	    }

	    var currentTime = now$1();
	    // TODO: this would be more efficient if deferred callbacks are stored in
	    // min heap.
	    // Or in a linked list with links for both timeoutTime order and insertion
	    // order.
	    // For now an easy compromise is the current approach:
	    // Keep a pointer to the soonest timeoutTime, and check that first.
	    // If it has not expired, we can skip traversing the whole list.
	    // If it has expired, then we step through all the callbacks.
	    if (nextSoonestTimeoutTime === -1 || nextSoonestTimeoutTime > currentTime) {
	      // We know that none of them have timed out yet.
	      return;
	    }
	    // NOTE: we intentionally wait to update the nextSoonestTimeoutTime until
	    // after successfully calling any timed out callbacks.
	    // If a timed out callback throws an error, we could get stuck in a state
	    // where the nextSoonestTimeoutTime was set wrong.
	    var updatedNextSoonestTimeoutTime = -1; // we will update nextSoonestTimeoutTime below
	    var timedOutCallbacks = [];

	    // iterate once to find timed out callbacks and find nextSoonestTimeoutTime
	    var currentCallbackConfig = headOfPendingCallbacksLinkedList;
	    while (currentCallbackConfig !== null) {
	      var _timeoutTime = currentCallbackConfig.timeoutTime;
	      if (_timeoutTime !== -1 && _timeoutTime <= currentTime) {
	        // it has timed out!
	        timedOutCallbacks.push(currentCallbackConfig);
	      } else {
	        if (_timeoutTime !== -1 && (updatedNextSoonestTimeoutTime === -1 || _timeoutTime < updatedNextSoonestTimeoutTime)) {
	          updatedNextSoonestTimeoutTime = _timeoutTime;
	        }
	      }
	      currentCallbackConfig = currentCallbackConfig.next;
	    }

	    if (timedOutCallbacks.length > 0) {
	      frameDeadlineObject.didTimeout = true;
	      for (var i = 0, len = timedOutCallbacks.length; i < len; i++) {
	        callUnsafely(timedOutCallbacks[i], frameDeadlineObject);
	      }
	    }

	    // NOTE: we intentionally wait to update the nextSoonestTimeoutTime until
	    // after successfully calling any timed out callbacks.
	    nextSoonestTimeoutTime = updatedNextSoonestTimeoutTime;
	  };

	  // We use the postMessage trick to defer idle work until after the repaint.
	  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
	  var idleTick = function (event) {
	    if (event.source !== window || event.data !== messageKey) {
	      return;
	    }
	    isIdleScheduled = false;

	    if (headOfPendingCallbacksLinkedList === null) {
	      return;
	    }

	    // First call anything which has timed out, until we have caught up.
	    callTimedOutCallbacks();

	    var currentTime = now$1();
	    // Next, as long as we have idle time, try calling more callbacks.
	    while (frameDeadline - currentTime > 0 && headOfPendingCallbacksLinkedList !== null) {
	      var latestCallbackConfig = headOfPendingCallbacksLinkedList;
	      frameDeadlineObject.didTimeout = false;
	      // callUnsafely will remove it from the head of the linked list
	      callUnsafely(latestCallbackConfig, frameDeadlineObject);
	      currentTime = now$1();
	    }
	    if (headOfPendingCallbacksLinkedList !== null) {
	      if (!isAnimationFrameScheduled) {
	        // Schedule another animation callback so we retry later.
	        isAnimationFrameScheduled = true;
	        localRequestAnimationFrame(animationTick);
	      }
	    }
	  };
	  // Assumes that we have addEventListener in this environment. Might need
	  // something better for old IE.
	  window.addEventListener('message', idleTick, false);

	  var animationTick = function (rafTime) {
	    isAnimationFrameScheduled = false;
	    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
	    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
	      if (nextFrameTime < 8) {
	        // Defensive coding. We don't support higher frame rates than 120hz.
	        // If we get lower than that, it is probably a bug.
	        nextFrameTime = 8;
	      }
	      // If one frame goes long, then the next one can be short to catch up.
	      // If two frames are short in a row, then that's an indication that we
	      // actually have a higher frame rate than what we're currently optimizing.
	      // We adjust our heuristic dynamically accordingly. For example, if we're
	      // running on 120hz display or 90hz VR display.
	      // Take the max of the two in case one of them was an anomaly due to
	      // missed frame deadlines.
	      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
	    } else {
	      previousFrameTime = nextFrameTime;
	    }
	    frameDeadline = rafTime + activeFrameTime;
	    if (!isIdleScheduled) {
	      isIdleScheduled = true;
	      window.postMessage(messageKey, '*');
	    }
	  };

	  scheduleWork = function (callback, options) /* CallbackConfigType */{
	    var timeoutTime = -1;
	    if (options != null && typeof options.timeout === 'number') {
	      timeoutTime = now$1() + options.timeout;
	    }
	    if (nextSoonestTimeoutTime === -1 || timeoutTime !== -1 && timeoutTime < nextSoonestTimeoutTime) {
	      nextSoonestTimeoutTime = timeoutTime;
	    }

	    var scheduledCallbackConfig = {
	      scheduledCallback: callback,
	      timeoutTime: timeoutTime,
	      prev: null,
	      next: null
	    };
	    if (headOfPendingCallbacksLinkedList === null) {
	      // Make this callback the head and tail of our list
	      headOfPendingCallbacksLinkedList = scheduledCallbackConfig;
	      tailOfPendingCallbacksLinkedList = scheduledCallbackConfig;
	    } else {
	      // Add latest callback as the new tail of the list
	      scheduledCallbackConfig.prev = tailOfPendingCallbacksLinkedList;
	      // renaming for clarity
	      var oldTailOfPendingCallbacksLinkedList = tailOfPendingCallbacksLinkedList;
	      if (oldTailOfPendingCallbacksLinkedList !== null) {
	        oldTailOfPendingCallbacksLinkedList.next = scheduledCallbackConfig;
	      }
	      tailOfPendingCallbacksLinkedList = scheduledCallbackConfig;
	    }

	    if (!isAnimationFrameScheduled) {
	      // If rAF didn't already schedule one, we need to schedule a frame.
	      // TODO: If this rAF doesn't materialize because the browser throttles, we
	      // might want to still have setTimeout trigger scheduleWork as a backup to ensure
	      // that we keep performing work.
	      isAnimationFrameScheduled = true;
	      localRequestAnimationFrame(animationTick);
	    }
	    return scheduledCallbackConfig;
	  };

	  cancelScheduledWork = function (callbackConfig /* CallbackConfigType */
	  ) {
	    if (callbackConfig.prev === null && headOfPendingCallbacksLinkedList !== callbackConfig) {
	      // this callbackConfig has already been cancelled.
	      // cancelScheduledWork should be idempotent, a no-op after first call.
	      return;
	    }

	    /**
	     * There are four possible cases:
	     * - Head/nodeToRemove/Tail -> null
	     *   In this case we set Head and Tail to null.
	     * - Head -> ... middle nodes... -> Tail/nodeToRemove
	     *   In this case we point the middle.next to null and put middle as the new
	     *   Tail.
	     * - Head/nodeToRemove -> ...middle nodes... -> Tail
	     *   In this case we point the middle.prev at null and move the Head to
	     *   middle.
	     * - Head -> ... ?some nodes ... -> nodeToRemove -> ... ?some nodes ... -> Tail
	     *   In this case we point the Head.next to the Tail and the Tail.prev to
	     *   the Head.
	     */
	    var next = callbackConfig.next;
	    var prev = callbackConfig.prev;
	    callbackConfig.next = null;
	    callbackConfig.prev = null;
	    if (next !== null) {
	      // we have a next

	      if (prev !== null) {
	        // we have a prev

	        // callbackConfig is somewhere in the middle of a list of 3 or more nodes.
	        prev.next = next;
	        next.prev = prev;
	        return;
	      } else {
	        // there is a next but not a previous one;
	        // callbackConfig is the head of a list of 2 or more other nodes.
	        next.prev = null;
	        headOfPendingCallbacksLinkedList = next;
	        return;
	      }
	    } else {
	      // there is no next callback config; this must the tail of the list

	      if (prev !== null) {
	        // we have a prev

	        // callbackConfig is the tail of a list of 2 or more other nodes.
	        prev.next = null;
	        tailOfPendingCallbacksLinkedList = prev;
	        return;
	      } else {
	        // there is no previous callback config;
	        // callbackConfig is the only thing in the linked list,
	        // so both head and tail point to it.
	        headOfPendingCallbacksLinkedList = null;
	        tailOfPendingCallbacksLinkedList = null;
	        return;
	      }
	    }
	  };
	}

	var didWarnSelectedSetOnOption = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  // We can silently skip them because invalid DOM nesting warning
	  // catches these cases in Fiber.
	  React.Children.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */

	function validateProps(element, props) {
	  // TODO (yungsters): Remove support for `selected` in <option>.
	  {
	    if (props.selected != null && !didWarnSelectedSetOnOption) {
	      warning(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
	      didWarnSelectedSetOnOption = true;
	    }
	  }
	}

	function postMountWrapper$1(element, props) {
	  // value="" should make a value attribute (#6219)
	  if (props.value != null) {
	    element.setAttribute('value', props.value);
	  }
	}

	function getHostProps$1(element, props) {
	  var hostProps = _assign({ children: undefined }, props);
	  var content = flattenChildren(props.children);

	  if (content) {
	    hostProps.children = content;
	  }

	  return hostProps;
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
	var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


	var didWarnValueDefaultValue$1 = void 0;

	{
	  didWarnValueDefaultValue$1 = false;
	}

	function getDeclarationErrorAddendum() {
	  var ownerName = getCurrentFiberOwnerName$3();
	  if (ownerName) {
	    return '\n\nCheck the render method of `' + ownerName + '`.';
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 */
	function checkSelectPropTypes(props) {
	  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$3);

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    var isArray = Array.isArray(props[propName]);
	    if (props.multiple && !isArray) {
	      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
	    } else if (!props.multiple && isArray) {
	      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
	    }
	  }
	}

	function updateOptions(node, multiple, propValue, setDefaultSelected) {
	  var options = node.options;

	  if (multiple) {
	    var selectedValues = propValue;
	    var selectedValue = {};
	    for (var i = 0; i < selectedValues.length; i++) {
	      // Prefix to avoid chaos with special keys.
	      selectedValue['$' + selectedValues[i]] = true;
	    }
	    for (var _i = 0; _i < options.length; _i++) {
	      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
	      if (options[_i].selected !== selected) {
	        options[_i].selected = selected;
	      }
	      if (selected && setDefaultSelected) {
	        options[_i].defaultSelected = true;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    var _selectedValue = '' + propValue;
	    var defaultSelected = null;
	    for (var _i2 = 0; _i2 < options.length; _i2++) {
	      if (options[_i2].value === _selectedValue) {
	        options[_i2].selected = true;
	        if (setDefaultSelected) {
	          options[_i2].defaultSelected = true;
	        }
	        return;
	      }
	      if (defaultSelected === null && !options[_i2].disabled) {
	        defaultSelected = options[_i2];
	      }
	    }
	    if (defaultSelected !== null) {
	      defaultSelected.selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */

	function getHostProps$2(element, props) {
	  return _assign({}, props, {
	    value: undefined
	  });
	}

	function initWrapperState$1(element, props) {
	  var node = element;
	  {
	    checkSelectPropTypes(props);
	  }

	  var value = props.value;
	  node._wrapperState = {
	    initialValue: value != null ? value : props.defaultValue,
	    wasMultiple: !!props.multiple
	  };

	  {
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
	      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	      didWarnValueDefaultValue$1 = true;
	    }
	  }
	}

	function postMountWrapper$2(element, props) {
	  var node = element;
	  node.multiple = !!props.multiple;
	  var value = props.value;
	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  } else if (props.defaultValue != null) {
	    updateOptions(node, !!props.multiple, props.defaultValue, true);
	  }
	}

	function postUpdateWrapper(element, props) {
	  var node = element;
	  // After the initial mount, we control selected-ness manually so don't pass
	  // this value down
	  node._wrapperState.initialValue = undefined;

	  var wasMultiple = node._wrapperState.wasMultiple;
	  node._wrapperState.wasMultiple = !!props.multiple;

	  var value = props.value;
	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  } else if (wasMultiple !== !!props.multiple) {
	    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	    if (props.defaultValue != null) {
	      updateOptions(node, !!props.multiple, props.defaultValue, true);
	    } else {
	      // Revert the select back to its default unselected state.
	      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
	    }
	  }
	}

	function restoreControlledState$2(element, props) {
	  var node = element;
	  var value = props.value;

	  if (value != null) {
	    updateOptions(node, !!props.multiple, value, false);
	  }
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var didWarnValDefaultVal = false;

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */

	function getHostProps$3(element, props) {
	  var node = element;
	  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

	  // Always set children to the same thing. In IE9, the selection range will
	  // get reset if `textContent` is mutated.  We could add a check in setTextContent
	  // to only set the value if/when the value differs from the node value (which would
	  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
	  // solution. The value can be a boolean or object so that's why it's forced
	  // to be a string.
	  var hostProps = _assign({}, props, {
	    value: undefined,
	    defaultValue: undefined,
	    children: '' + node._wrapperState.initialValue
	  });

	  return hostProps;
	}

	function initWrapperState$2(element, props) {
	  var node = element;
	  {
	    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$4);
	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
	      didWarnValDefaultVal = true;
	    }
	  }

	  var initialValue = props.value;

	  // Only bother fetching default value if we're going to use it
	  if (initialValue == null) {
	    var defaultValue = props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = props.children;
	    if (children != null) {
	      {
	        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
	      }
	      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
	      if (Array.isArray(children)) {
	        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    initialValue = defaultValue;
	  }

	  node._wrapperState = {
	    initialValue: '' + initialValue
	  };
	}

	function updateWrapper$1(element, props) {
	  var node = element;
	  var value = props.value;
	  if (value != null) {
	    // Cast `value` to a string to ensure the value is set correctly. While
	    // browsers typically do this as necessary, jsdom doesn't.
	    var newValue = '' + value;

	    // To avoid side effects (such as losing text selection), only set value if changed
	    if (newValue !== node.value) {
	      node.value = newValue;
	    }
	    if (props.defaultValue == null) {
	      node.defaultValue = newValue;
	    }
	  }
	  if (props.defaultValue != null) {
	    node.defaultValue = props.defaultValue;
	  }
	}

	function postMountWrapper$3(element, props) {
	  var node = element;
	  // This is in postMount because we need access to the DOM node, which is not
	  // available until after the component has mounted.
	  var textContent = node.textContent;

	  // Only set node.value if textContent is equal to the expected
	  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
	  // will populate textContent as well.
	  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
	  if (textContent === node._wrapperState.initialValue) {
	    node.value = textContent;
	  }
	}

	function restoreControlledState$3(element, props) {
	  // DOM component is still mounted; update
	  updateWrapper$1(element, props);
	}

	var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
	var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
	var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

	var Namespaces = {
	  html: HTML_NAMESPACE$1,
	  mathml: MATH_NAMESPACE,
	  svg: SVG_NAMESPACE
	};

	// Assumes there is no parent namespace.
	function getIntrinsicNamespace(type) {
	  switch (type) {
	    case 'svg':
	      return SVG_NAMESPACE;
	    case 'math':
	      return MATH_NAMESPACE;
	    default:
	      return HTML_NAMESPACE$1;
	  }
	}

	function getChildNamespace(parentNamespace, type) {
	  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
	    // No (or default) parent namespace: potential entry point.
	    return getIntrinsicNamespace(type);
	  }
	  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
	    // We're leaving SVG.
	    return HTML_NAMESPACE$1;
	  }
	  // By default, pass namespace below.
	  return parentNamespace;
	}

	/* globals MSApp */

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */
	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer = void 0;

	/**
	 * Set the innerHTML property of a node
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node

	  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var svgNode = reusableSVGContainer.firstChild;
	    while (node.firstChild) {
	      node.removeChild(node.firstChild);
	    }
	    while (svgNode.firstChild) {
	      node.appendChild(svgNode.firstChild);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	/**
	 * Set the textContent property of a node. For text updates, it's faster
	 * to set the `nodeValue` of the Text node directly instead of using
	 * `.textContent` which will remove the existing node and create a new one.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  columns: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridRowEnd: true,
	  gridRowSpan: true,
	  gridRowStart: true,
	  gridColumn: true,
	  gridColumnEnd: true,
	  gridColumnSpan: true,
	  gridColumnStart: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, isCustomProperty) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
	    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
	  }

	  return ('' + value).trim();
	}

	var warnValidStyle = emptyFunction;

	{
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;
	  var warnedForInfinityValue = false;

	  var warnHyphenatedStyleName = function (name, getStack) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
	  };

	  var warnBadVendoredStyleName = function (name, getStack) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
	  };

	  var warnStyleValueWithSemicolon = function (name, value, getStack) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
	  };

	  var warnStyleValueIsNaN = function (name, value, getStack) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
	  };

	  var warnStyleValueIsInfinity = function (name, value, getStack) {
	    if (warnedForInfinityValue) {
	      return;
	    }

	    warnedForInfinityValue = true;
	    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
	  };

	  warnValidStyle = function (name, value, getStack) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, getStack);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, getStack);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, getStack);
	    }

	    if (typeof value === 'number') {
	      if (isNaN(value)) {
	        warnStyleValueIsNaN(name, value, getStack);
	      } else if (!isFinite(value)) {
	        warnStyleValueIsInfinity(name, value, getStack);
	      }
	    }
	  };
	}

	var warnValidStyle$1 = warnValidStyle;

	/**
	 * Operations for dealing with CSS properties.
	 */

	/**
	 * This creates a string that is expected to be equivalent to the style
	 * attribute generated by server-side rendering. It by-passes warnings and
	 * security checks so it's not safe to use this value for anything other than
	 * comparison. It is only used in DEV for SSR validation.
	 */
	function createDangerousStringForStyles(styles) {
	  {
	    var serialized = '';
	    var delimiter = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (styleValue != null) {
	        var isCustomProperty = styleName.indexOf('--') === 0;
	        serialized += delimiter + hyphenateStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

	        delimiter = ';';
	      }
	    }
	    return serialized || null;
	  }
	}

	/**
	 * Sets the value for multiple styles on a node.  If a value is specified as
	 * '' (empty string), the corresponding style property will be unset.
	 *
	 * @param {DOMElement} node
	 * @param {object} styles
	 */
	function setValueForStyles(node, styles, getStack) {
	  var style = node.style;
	  for (var styleName in styles) {
	    if (!styles.hasOwnProperty(styleName)) {
	      continue;
	    }
	    var isCustomProperty = styleName.indexOf('--') === 0;
	    {
	      if (!isCustomProperty) {
	        warnValidStyle$1(styleName, styles[styleName], getStack);
	      }
	    }
	    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
	    if (styleName === 'float') {
	      styleName = 'cssFloat';
	    }
	    if (isCustomProperty) {
	      style.setProperty(styleName, styleValue);
	    } else {
	      style[styleName] = styleValue;
	    }
	  }
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  area: true,
	  base: true,
	  br: true,
	  col: true,
	  embed: true,
	  hr: true,
	  img: true,
	  input: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  menuitem: true
	}, omittedCloseTags);

	var HTML$1 = '__html';

	function assertValidProps(tag, props, getStack) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
	  }
	  {
	    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack()) : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
	}

	function isCustomComponent(tagName, props) {
	  if (tagName.indexOf('-') === -1) {
	    return typeof props.is === 'string';
	  }
	  switch (tagName) {
	    // These are reserved SVG and MathML elements.
	    // We don't mind this whitelist too much because we expect it to never grow.
	    // The alternative is to track the namespace in a few places which is convoluted.
	    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
	    case 'annotation-xml':
	    case 'color-profile':
	    case 'font-face':
	    case 'font-face-src':
	    case 'font-face-uri':
	    case 'font-face-format':
	    case 'font-face-name':
	    case 'missing-glyph':
	      return false;
	    default:
	      return true;
	  }
	}

	// When adding attributes to the HTML or SVG whitelist, be sure to
	// also add them to this module to ensure casing and incorrect name
	// warnings.
	var possibleStandardNames = {
	  // HTML
	  accept: 'accept',
	  acceptcharset: 'acceptCharset',
	  'accept-charset': 'acceptCharset',
	  accesskey: 'accessKey',
	  action: 'action',
	  allowfullscreen: 'allowFullScreen',
	  alt: 'alt',
	  as: 'as',
	  async: 'async',
	  autocapitalize: 'autoCapitalize',
	  autocomplete: 'autoComplete',
	  autocorrect: 'autoCorrect',
	  autofocus: 'autoFocus',
	  autoplay: 'autoPlay',
	  autosave: 'autoSave',
	  capture: 'capture',
	  cellpadding: 'cellPadding',
	  cellspacing: 'cellSpacing',
	  challenge: 'challenge',
	  charset: 'charSet',
	  checked: 'checked',
	  children: 'children',
	  cite: 'cite',
	  class: 'className',
	  classid: 'classID',
	  classname: 'className',
	  cols: 'cols',
	  colspan: 'colSpan',
	  content: 'content',
	  contenteditable: 'contentEditable',
	  contextmenu: 'contextMenu',
	  controls: 'controls',
	  controlslist: 'controlsList',
	  coords: 'coords',
	  crossorigin: 'crossOrigin',
	  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
	  data: 'data',
	  datetime: 'dateTime',
	  default: 'default',
	  defaultchecked: 'defaultChecked',
	  defaultvalue: 'defaultValue',
	  defer: 'defer',
	  dir: 'dir',
	  disabled: 'disabled',
	  download: 'download',
	  draggable: 'draggable',
	  enctype: 'encType',
	  for: 'htmlFor',
	  form: 'form',
	  formmethod: 'formMethod',
	  formaction: 'formAction',
	  formenctype: 'formEncType',
	  formnovalidate: 'formNoValidate',
	  formtarget: 'formTarget',
	  frameborder: 'frameBorder',
	  headers: 'headers',
	  height: 'height',
	  hidden: 'hidden',
	  high: 'high',
	  href: 'href',
	  hreflang: 'hrefLang',
	  htmlfor: 'htmlFor',
	  httpequiv: 'httpEquiv',
	  'http-equiv': 'httpEquiv',
	  icon: 'icon',
	  id: 'id',
	  innerhtml: 'innerHTML',
	  inputmode: 'inputMode',
	  integrity: 'integrity',
	  is: 'is',
	  itemid: 'itemID',
	  itemprop: 'itemProp',
	  itemref: 'itemRef',
	  itemscope: 'itemScope',
	  itemtype: 'itemType',
	  keyparams: 'keyParams',
	  keytype: 'keyType',
	  kind: 'kind',
	  label: 'label',
	  lang: 'lang',
	  list: 'list',
	  loop: 'loop',
	  low: 'low',
	  manifest: 'manifest',
	  marginwidth: 'marginWidth',
	  marginheight: 'marginHeight',
	  max: 'max',
	  maxlength: 'maxLength',
	  media: 'media',
	  mediagroup: 'mediaGroup',
	  method: 'method',
	  min: 'min',
	  minlength: 'minLength',
	  multiple: 'multiple',
	  muted: 'muted',
	  name: 'name',
	  nomodule: 'noModule',
	  nonce: 'nonce',
	  novalidate: 'noValidate',
	  open: 'open',
	  optimum: 'optimum',
	  pattern: 'pattern',
	  placeholder: 'placeholder',
	  playsinline: 'playsInline',
	  poster: 'poster',
	  preload: 'preload',
	  profile: 'profile',
	  radiogroup: 'radioGroup',
	  readonly: 'readOnly',
	  referrerpolicy: 'referrerPolicy',
	  rel: 'rel',
	  required: 'required',
	  reversed: 'reversed',
	  role: 'role',
	  rows: 'rows',
	  rowspan: 'rowSpan',
	  sandbox: 'sandbox',
	  scope: 'scope',
	  scoped: 'scoped',
	  scrolling: 'scrolling',
	  seamless: 'seamless',
	  selected: 'selected',
	  shape: 'shape',
	  size: 'size',
	  sizes: 'sizes',
	  span: 'span',
	  spellcheck: 'spellCheck',
	  src: 'src',
	  srcdoc: 'srcDoc',
	  srclang: 'srcLang',
	  srcset: 'srcSet',
	  start: 'start',
	  step: 'step',
	  style: 'style',
	  summary: 'summary',
	  tabindex: 'tabIndex',
	  target: 'target',
	  title: 'title',
	  type: 'type',
	  usemap: 'useMap',
	  value: 'value',
	  width: 'width',
	  wmode: 'wmode',
	  wrap: 'wrap',

	  // SVG
	  about: 'about',
	  accentheight: 'accentHeight',
	  'accent-height': 'accentHeight',
	  accumulate: 'accumulate',
	  additive: 'additive',
	  alignmentbaseline: 'alignmentBaseline',
	  'alignment-baseline': 'alignmentBaseline',
	  allowreorder: 'allowReorder',
	  alphabetic: 'alphabetic',
	  amplitude: 'amplitude',
	  arabicform: 'arabicForm',
	  'arabic-form': 'arabicForm',
	  ascent: 'ascent',
	  attributename: 'attributeName',
	  attributetype: 'attributeType',
	  autoreverse: 'autoReverse',
	  azimuth: 'azimuth',
	  basefrequency: 'baseFrequency',
	  baselineshift: 'baselineShift',
	  'baseline-shift': 'baselineShift',
	  baseprofile: 'baseProfile',
	  bbox: 'bbox',
	  begin: 'begin',
	  bias: 'bias',
	  by: 'by',
	  calcmode: 'calcMode',
	  capheight: 'capHeight',
	  'cap-height': 'capHeight',
	  clip: 'clip',
	  clippath: 'clipPath',
	  'clip-path': 'clipPath',
	  clippathunits: 'clipPathUnits',
	  cliprule: 'clipRule',
	  'clip-rule': 'clipRule',
	  color: 'color',
	  colorinterpolation: 'colorInterpolation',
	  'color-interpolation': 'colorInterpolation',
	  colorinterpolationfilters: 'colorInterpolationFilters',
	  'color-interpolation-filters': 'colorInterpolationFilters',
	  colorprofile: 'colorProfile',
	  'color-profile': 'colorProfile',
	  colorrendering: 'colorRendering',
	  'color-rendering': 'colorRendering',
	  contentscripttype: 'contentScriptType',
	  contentstyletype: 'contentStyleType',
	  cursor: 'cursor',
	  cx: 'cx',
	  cy: 'cy',
	  d: 'd',
	  datatype: 'datatype',
	  decelerate: 'decelerate',
	  descent: 'descent',
	  diffuseconstant: 'diffuseConstant',
	  direction: 'direction',
	  display: 'display',
	  divisor: 'divisor',
	  dominantbaseline: 'dominantBaseline',
	  'dominant-baseline': 'dominantBaseline',
	  dur: 'dur',
	  dx: 'dx',
	  dy: 'dy',
	  edgemode: 'edgeMode',
	  elevation: 'elevation',
	  enablebackground: 'enableBackground',
	  'enable-background': 'enableBackground',
	  end: 'end',
	  exponent: 'exponent',
	  externalresourcesrequired: 'externalResourcesRequired',
	  fill: 'fill',
	  fillopacity: 'fillOpacity',
	  'fill-opacity': 'fillOpacity',
	  fillrule: 'fillRule',
	  'fill-rule': 'fillRule',
	  filter: 'filter',
	  filterres: 'filterRes',
	  filterunits: 'filterUnits',
	  floodopacity: 'floodOpacity',
	  'flood-opacity': 'floodOpacity',
	  floodcolor: 'floodColor',
	  'flood-color': 'floodColor',
	  focusable: 'focusable',
	  fontfamily: 'fontFamily',
	  'font-family': 'fontFamily',
	  fontsize: 'fontSize',
	  'font-size': 'fontSize',
	  fontsizeadjust: 'fontSizeAdjust',
	  'font-size-adjust': 'fontSizeAdjust',
	  fontstretch: 'fontStretch',
	  'font-stretch': 'fontStretch',
	  fontstyle: 'fontStyle',
	  'font-style': 'fontStyle',
	  fontvariant: 'fontVariant',
	  'font-variant': 'fontVariant',
	  fontweight: 'fontWeight',
	  'font-weight': 'fontWeight',
	  format: 'format',
	  from: 'from',
	  fx: 'fx',
	  fy: 'fy',
	  g1: 'g1',
	  g2: 'g2',
	  glyphname: 'glyphName',
	  'glyph-name': 'glyphName',
	  glyphorientationhorizontal: 'glyphOrientationHorizontal',
	  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
	  glyphorientationvertical: 'glyphOrientationVertical',
	  'glyph-orientation-vertical': 'glyphOrientationVertical',
	  glyphref: 'glyphRef',
	  gradienttransform: 'gradientTransform',
	  gradientunits: 'gradientUnits',
	  hanging: 'hanging',
	  horizadvx: 'horizAdvX',
	  'horiz-adv-x': 'horizAdvX',
	  horizoriginx: 'horizOriginX',
	  'horiz-origin-x': 'horizOriginX',
	  ideographic: 'ideographic',
	  imagerendering: 'imageRendering',
	  'image-rendering': 'imageRendering',
	  in2: 'in2',
	  in: 'in',
	  inlist: 'inlist',
	  intercept: 'intercept',
	  k1: 'k1',
	  k2: 'k2',
	  k3: 'k3',
	  k4: 'k4',
	  k: 'k',
	  kernelmatrix: 'kernelMatrix',
	  kernelunitlength: 'kernelUnitLength',
	  kerning: 'kerning',
	  keypoints: 'keyPoints',
	  keysplines: 'keySplines',
	  keytimes: 'keyTimes',
	  lengthadjust: 'lengthAdjust',
	  letterspacing: 'letterSpacing',
	  'letter-spacing': 'letterSpacing',
	  lightingcolor: 'lightingColor',
	  'lighting-color': 'lightingColor',
	  limitingconeangle: 'limitingConeAngle',
	  local: 'local',
	  markerend: 'markerEnd',
	  'marker-end': 'markerEnd',
	  markerheight: 'markerHeight',
	  markermid: 'markerMid',
	  'marker-mid': 'markerMid',
	  markerstart: 'markerStart',
	  'marker-start': 'markerStart',
	  markerunits: 'markerUnits',
	  markerwidth: 'markerWidth',
	  mask: 'mask',
	  maskcontentunits: 'maskContentUnits',
	  maskunits: 'maskUnits',
	  mathematical: 'mathematical',
	  mode: 'mode',
	  numoctaves: 'numOctaves',
	  offset: 'offset',
	  opacity: 'opacity',
	  operator: 'operator',
	  order: 'order',
	  orient: 'orient',
	  orientation: 'orientation',
	  origin: 'origin',
	  overflow: 'overflow',
	  overlineposition: 'overlinePosition',
	  'overline-position': 'overlinePosition',
	  overlinethickness: 'overlineThickness',
	  'overline-thickness': 'overlineThickness',
	  paintorder: 'paintOrder',
	  'paint-order': 'paintOrder',
	  panose1: 'panose1',
	  'panose-1': 'panose1',
	  pathlength: 'pathLength',
	  patterncontentunits: 'patternContentUnits',
	  patterntransform: 'patternTransform',
	  patternunits: 'patternUnits',
	  pointerevents: 'pointerEvents',
	  'pointer-events': 'pointerEvents',
	  points: 'points',
	  pointsatx: 'pointsAtX',
	  pointsaty: 'pointsAtY',
	  pointsatz: 'pointsAtZ',
	  prefix: 'prefix',
	  preservealpha: 'preserveAlpha',
	  preserveaspectratio: 'preserveAspectRatio',
	  primitiveunits: 'primitiveUnits',
	  property: 'property',
	  r: 'r',
	  radius: 'radius',
	  refx: 'refX',
	  refy: 'refY',
	  renderingintent: 'renderingIntent',
	  'rendering-intent': 'renderingIntent',
	  repeatcount: 'repeatCount',
	  repeatdur: 'repeatDur',
	  requiredextensions: 'requiredExtensions',
	  requiredfeatures: 'requiredFeatures',
	  resource: 'resource',
	  restart: 'restart',
	  result: 'result',
	  results: 'results',
	  rotate: 'rotate',
	  rx: 'rx',
	  ry: 'ry',
	  scale: 'scale',
	  security: 'security',
	  seed: 'seed',
	  shaperendering: 'shapeRendering',
	  'shape-rendering': 'shapeRendering',
	  slope: 'slope',
	  spacing: 'spacing',
	  specularconstant: 'specularConstant',
	  specularexponent: 'specularExponent',
	  speed: 'speed',
	  spreadmethod: 'spreadMethod',
	  startoffset: 'startOffset',
	  stddeviation: 'stdDeviation',
	  stemh: 'stemh',
	  stemv: 'stemv',
	  stitchtiles: 'stitchTiles',
	  stopcolor: 'stopColor',
	  'stop-color': 'stopColor',
	  stopopacity: 'stopOpacity',
	  'stop-opacity': 'stopOpacity',
	  strikethroughposition: 'strikethroughPosition',
	  'strikethrough-position': 'strikethroughPosition',
	  strikethroughthickness: 'strikethroughThickness',
	  'strikethrough-thickness': 'strikethroughThickness',
	  string: 'string',
	  stroke: 'stroke',
	  strokedasharray: 'strokeDasharray',
	  'stroke-dasharray': 'strokeDasharray',
	  strokedashoffset: 'strokeDashoffset',
	  'stroke-dashoffset': 'strokeDashoffset',
	  strokelinecap: 'strokeLinecap',
	  'stroke-linecap': 'strokeLinecap',
	  strokelinejoin: 'strokeLinejoin',
	  'stroke-linejoin': 'strokeLinejoin',
	  strokemiterlimit: 'strokeMiterlimit',
	  'stroke-miterlimit': 'strokeMiterlimit',
	  strokewidth: 'strokeWidth',
	  'stroke-width': 'strokeWidth',
	  strokeopacity: 'strokeOpacity',
	  'stroke-opacity': 'strokeOpacity',
	  suppresscontenteditablewarning: 'suppressContentEditableWarning',
	  suppresshydrationwarning: 'suppressHydrationWarning',
	  surfacescale: 'surfaceScale',
	  systemlanguage: 'systemLanguage',
	  tablevalues: 'tableValues',
	  targetx: 'targetX',
	  targety: 'targetY',
	  textanchor: 'textAnchor',
	  'text-anchor': 'textAnchor',
	  textdecoration: 'textDecoration',
	  'text-decoration': 'textDecoration',
	  textlength: 'textLength',
	  textrendering: 'textRendering',
	  'text-rendering': 'textRendering',
	  to: 'to',
	  transform: 'transform',
	  typeof: 'typeof',
	  u1: 'u1',
	  u2: 'u2',
	  underlineposition: 'underlinePosition',
	  'underline-position': 'underlinePosition',
	  underlinethickness: 'underlineThickness',
	  'underline-thickness': 'underlineThickness',
	  unicode: 'unicode',
	  unicodebidi: 'unicodeBidi',
	  'unicode-bidi': 'unicodeBidi',
	  unicoderange: 'unicodeRange',
	  'unicode-range': 'unicodeRange',
	  unitsperem: 'unitsPerEm',
	  'units-per-em': 'unitsPerEm',
	  unselectable: 'unselectable',
	  valphabetic: 'vAlphabetic',
	  'v-alphabetic': 'vAlphabetic',
	  values: 'values',
	  vectoreffect: 'vectorEffect',
	  'vector-effect': 'vectorEffect',
	  version: 'version',
	  vertadvy: 'vertAdvY',
	  'vert-adv-y': 'vertAdvY',
	  vertoriginx: 'vertOriginX',
	  'vert-origin-x': 'vertOriginX',
	  vertoriginy: 'vertOriginY',
	  'vert-origin-y': 'vertOriginY',
	  vhanging: 'vHanging',
	  'v-hanging': 'vHanging',
	  videographic: 'vIdeographic',
	  'v-ideographic': 'vIdeographic',
	  viewbox: 'viewBox',
	  viewtarget: 'viewTarget',
	  visibility: 'visibility',
	  vmathematical: 'vMathematical',
	  'v-mathematical': 'vMathematical',
	  vocab: 'vocab',
	  widths: 'widths',
	  wordspacing: 'wordSpacing',
	  'word-spacing': 'wordSpacing',
	  writingmode: 'writingMode',
	  'writing-mode': 'writingMode',
	  x1: 'x1',
	  x2: 'x2',
	  x: 'x',
	  xchannelselector: 'xChannelSelector',
	  xheight: 'xHeight',
	  'x-height': 'xHeight',
	  xlinkactuate: 'xlinkActuate',
	  'xlink:actuate': 'xlinkActuate',
	  xlinkarcrole: 'xlinkArcrole',
	  'xlink:arcrole': 'xlinkArcrole',
	  xlinkhref: 'xlinkHref',
	  'xlink:href': 'xlinkHref',
	  xlinkrole: 'xlinkRole',
	  'xlink:role': 'xlinkRole',
	  xlinkshow: 'xlinkShow',
	  'xlink:show': 'xlinkShow',
	  xlinktitle: 'xlinkTitle',
	  'xlink:title': 'xlinkTitle',
	  xlinktype: 'xlinkType',
	  'xlink:type': 'xlinkType',
	  xmlbase: 'xmlBase',
	  'xml:base': 'xmlBase',
	  xmllang: 'xmlLang',
	  'xml:lang': 'xmlLang',
	  xmlns: 'xmlns',
	  'xml:space': 'xmlSpace',
	  xmlnsxlink: 'xmlnsXlink',
	  'xmlns:xlink': 'xmlnsXlink',
	  xmlspace: 'xmlSpace',
	  y1: 'y1',
	  y2: 'y2',
	  y: 'y',
	  ychannelselector: 'yChannelSelector',
	  z: 'z',
	  zoomandpan: 'zoomAndPan'
	};

	var ariaProperties = {
	  'aria-current': 0, // state
	  'aria-details': 0,
	  'aria-disabled': 0, // state
	  'aria-hidden': 0, // state
	  'aria-invalid': 0, // state
	  'aria-keyshortcuts': 0,
	  'aria-label': 0,
	  'aria-roledescription': 0,
	  // Widget Attributes
	  'aria-autocomplete': 0,
	  'aria-checked': 0,
	  'aria-expanded': 0,
	  'aria-haspopup': 0,
	  'aria-level': 0,
	  'aria-modal': 0,
	  'aria-multiline': 0,
	  'aria-multiselectable': 0,
	  'aria-orientation': 0,
	  'aria-placeholder': 0,
	  'aria-pressed': 0,
	  'aria-readonly': 0,
	  'aria-required': 0,
	  'aria-selected': 0,
	  'aria-sort': 0,
	  'aria-valuemax': 0,
	  'aria-valuemin': 0,
	  'aria-valuenow': 0,
	  'aria-valuetext': 0,
	  // Live Region Attributes
	  'aria-atomic': 0,
	  'aria-busy': 0,
	  'aria-live': 0,
	  'aria-relevant': 0,
	  // Drag-and-Drop Attributes
	  'aria-dropeffect': 0,
	  'aria-grabbed': 0,
	  // Relationship Attributes
	  'aria-activedescendant': 0,
	  'aria-colcount': 0,
	  'aria-colindex': 0,
	  'aria-colspan': 0,
	  'aria-controls': 0,
	  'aria-describedby': 0,
	  'aria-errormessage': 0,
	  'aria-flowto': 0,
	  'aria-labelledby': 0,
	  'aria-owns': 0,
	  'aria-posinset': 0,
	  'aria-rowcount': 0,
	  'aria-rowindex': 0,
	  'aria-rowspan': 0,
	  'aria-setsize': 0
	};

	var warnedProperties = {};
	var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	function getStackAddendum() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	function validateProperty(tagName, name) {
	  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
	    return true;
	  }

	  if (rARIACamel.test(name)) {
	    var ariaName = 'aria-' + name.slice(4).toLowerCase();
	    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (correctName == null) {
	      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
	      warnedProperties[name] = true;
	      return true;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== correctName) {
	      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  if (rARIA.test(name)) {
	    var lowerCasedName = name.toLowerCase();
	    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

	    // If this is an aria-* attribute, but is not listed in the known DOM
	    // DOM properties, then it is an invalid aria-* attribute.
	    if (standardName == null) {
	      warnedProperties[name] = true;
	      return false;
	    }
	    // aria-* attributes should be lowercase; suggest the lowercase version.
	    if (name !== standardName) {
	      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
	      warnedProperties[name] = true;
	      return true;
	    }
	  }

	  return true;
	}

	function warnInvalidARIAProps(type, props) {
	  var invalidProps = [];

	  for (var key in props) {
	    var isValid = validateProperty(type, key);
	    if (!isValid) {
	      invalidProps.push(key);
	    }
	  }

	  var unknownPropString = invalidProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (invalidProps.length === 1) {
	    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
	  } else if (invalidProps.length > 1) {
	    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
	  }
	}

	function validateProperties(type, props) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnInvalidARIAProps(type, props);
	}

	var didWarnValueNull = false;

	function getStackAddendum$1() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	function validateProperties$1(type, props) {
	  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
	    return;
	  }

	  if (props != null && props.value === null && !didWarnValueNull) {
	    didWarnValueNull = true;
	    if (type === 'select' && props.multiple) {
	      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
	    } else {
	      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
	    }
	  }
	}

	function getStackAddendum$2() {
	  var stack = ReactDebugCurrentFrame.getStackAddendum();
	  return stack != null ? stack : '';
	}

	var validateProperty$1 = function () {};

	{
	  var warnedProperties$1 = {};
	  var _hasOwnProperty = Object.prototype.hasOwnProperty;
	  var EVENT_NAME_REGEX = /^on./;
	  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
	  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
	  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

	  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
	    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
	      return true;
	    }

	    var lowerCasedName = name.toLowerCase();
	    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
	      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // We can't rely on the event system being injected on the server.
	    if (canUseEventSystem) {
	      if (registrationNameModules.hasOwnProperty(name)) {
	        return true;
	      }
	      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
	      if (registrationName != null) {
	        warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	      if (EVENT_NAME_REGEX.test(name)) {
	        warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (EVENT_NAME_REGEX.test(name)) {
	      // If no event plugins have been injected, we are in a server environment.
	      // So we can't tell if the event name is correct for sure, but we can filter
	      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
	      if (INVALID_EVENT_NAME_REGEX.test(name)) {
	        warning(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.%s', name, getStackAddendum$2());
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Let the ARIA attribute hook validate ARIA attributes
	    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
	      return true;
	    }

	    if (lowerCasedName === 'innerhtml') {
	      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'aria') {
	      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
	      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    var propertyInfo = getPropertyInfo(name);
	    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

	    // Known attributes should match the casing specified in the property config.
	    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      var standardName = possibleStandardNames[lowerCasedName];
	      if (standardName !== name) {
	        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
	        warnedProperties$1[name] = true;
	        return true;
	      }
	    } else if (!isReserved && name !== lowerCasedName) {
	      // Unknown attributes should have lowercase casing since that's how they
	      // will be cased anyway with server rendering.
	      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      if (value) {
	        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
	      } else {
	        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
	      }
	      warnedProperties$1[name] = true;
	      return true;
	    }

	    // Now that we've validated casing, do not validate
	    // data types for reserved props
	    if (isReserved) {
	      return true;
	    }

	    // Warn when a known attribute is a bad type
	    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
	      warnedProperties$1[name] = true;
	      return false;
	    }

	    return true;
	  };
	}

	var warnUnknownProperties = function (type, props, canUseEventSystem) {
	  var unknownProps = [];
	  for (var key in props) {
	    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');
	  if (unknownProps.length === 1) {
	    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
	  } else if (unknownProps.length > 1) {
	    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
	  }
	};

	function validateProperties$2(type, props, canUseEventSystem) {
	  if (isCustomComponent(type, props)) {
	    return;
	  }
	  warnUnknownProperties(type, props, canUseEventSystem);
	}

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
	var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var didWarnInvalidHydration = false;
	var didWarnShadyDOM = false;

	var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
	var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
	var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
	var AUTOFOCUS = 'autoFocus';
	var CHILDREN = 'children';
	var STYLE = 'style';
	var HTML = '__html';

	var HTML_NAMESPACE = Namespaces.html;


	var getStack = emptyFunction.thatReturns('');

	var warnedUnknownTags = void 0;
	var suppressHydrationWarning = void 0;

	var validatePropertiesInDevelopment = void 0;
	var warnForTextDifference = void 0;
	var warnForPropDifference = void 0;
	var warnForExtraAttributes = void 0;
	var warnForInvalidEventListener = void 0;

	var normalizeMarkupForTextOrAttribute = void 0;
	var normalizeHTML = void 0;

	{
	  getStack = getCurrentFiberStackAddendum$2;

	  warnedUnknownTags = {
	    // Chrome is the only major browser not shipping <time>. But as of July
	    // 2017 it intends to ship it due to widespread usage. We intentionally
	    // *don't* warn for <time> even if it's unrecognized by Chrome because
	    // it soon will be, and many apps have been using it anyway.
	    time: true,
	    // There are working polyfills for <dialog>. Let people use it.
	    dialog: true
	  };

	  validatePropertiesInDevelopment = function (type, props) {
	    validateProperties(type, props);
	    validateProperties$1(type, props);
	    validateProperties$2(type, props, /* canUseEventSystem */true);
	  };

	  // HTML parsing normalizes CR and CRLF to LF.
	  // It also can turn \u0000 into \uFFFD inside attributes.
	  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
	  // If we have a mismatch, it might be caused by that.
	  // We will still patch up in this case but not fire the warning.
	  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
	  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

	  normalizeMarkupForTextOrAttribute = function (markup) {
	    var markupString = typeof markup === 'string' ? markup : '' + markup;
	    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
	  };

	  warnForTextDifference = function (serverText, clientText) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
	    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
	    if (normalizedServerText === normalizedClientText) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
	  };

	  warnForPropDifference = function (propName, serverValue, clientValue) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
	    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
	    if (normalizedServerValue === normalizedClientValue) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
	  };

	  warnForExtraAttributes = function (attributeNames) {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    var names = [];
	    attributeNames.forEach(function (name) {
	      names.push(name);
	    });
	    warning(false, 'Extra attributes from the server: %s', names);
	  };

	  warnForInvalidEventListener = function (registrationName, listener) {
	    if (listener === false) {
	      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
	    } else {
	      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
	    }
	  };

	  // Parse the HTML and read it back to normalize the HTML string so that it
	  // can be used for comparison.
	  normalizeHTML = function (parent, html) {
	    // We could have created a separate document here to avoid
	    // re-initializing custom elements if they exist. But this breaks
	    // how <noscript> is being handled. So we use the same document.
	    // See the discussion in https://github.com/facebook/react/pull/11157.
	    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
	    testElement.innerHTML = html;
	    return testElement.innerHTML;
	  };
	}

	function ensureListeningTo(rootContainerElement, registrationName) {
	  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
	  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
	  listenTo(registrationName, doc);
	}

	function getOwnerDocumentFromRootContainer(rootContainerElement) {
	  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
	}

	function trapClickOnNonInteractiveElement(node) {
	  // Mobile Safari does not fire properly bubble click events on
	  // non-interactive elements, which means delegated click listeners do not
	  // fire. The workaround for this bug involves attaching an empty click
	  // listener on the target node.
	  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	  // Just set it using the onclick property so that we don't have to manage any
	  // bookkeeping for it. Not sure if we need to clear it when the listener is
	  // removed.
	  // TODO: Only do this for the relevant Safaris maybe?
	  node.onclick = emptyFunction;
	}

	function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
	  for (var propKey in nextProps) {
	    if (!nextProps.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var nextProp = nextProps[propKey];
	    if (propKey === STYLE) {
	      {
	        if (nextProp) {
	          // Freeze the next style object so that we can assume it won't be
	          // mutated. We have already warned for this in the past.
	          Object.freeze(nextProp);
	        }
	      }
	      // Relies on `updateStylesByID` not mutating `styleUpdates`.
	      setValueForStyles(domElement, nextProp, getStack);
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      var nextHtml = nextProp ? nextProp[HTML] : undefined;
	      if (nextHtml != null) {
	        setInnerHTML(domElement, nextHtml);
	      }
	    } else if (propKey === CHILDREN) {
	      if (typeof nextProp === 'string') {
	        // Avoid setting initial textContent when the text is empty. In IE11 setting
	        // textContent on a <textarea> will cause the placeholder to not
	        // show within the <textarea> until it has been focused and blurred again.
	        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
	        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
	        if (canSetTextContent) {
	          setTextContent(domElement, nextProp);
	        }
	      } else if (typeof nextProp === 'number') {
	        setTextContent(domElement, '' + nextProp);
	      }
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (propKey === AUTOFOCUS) {
	      // We polyfill it separately on the client during commit.
	      // We blacklist it here rather than in the property list because we emit it in SSR.
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	    } else if (nextProp != null) {
	      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
	    }
	  }
	}

	function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
	  // TODO: Handle wasCustomComponentTag
	  for (var i = 0; i < updatePayload.length; i += 2) {
	    var propKey = updatePayload[i];
	    var propValue = updatePayload[i + 1];
	    if (propKey === STYLE) {
	      setValueForStyles(domElement, propValue, getStack);
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      setInnerHTML(domElement, propValue);
	    } else if (propKey === CHILDREN) {
	      setTextContent(domElement, propValue);
	    } else {
	      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
	    }
	  }
	}

	function createElement$1(type, props, rootContainerElement, parentNamespace) {
	  var isCustomComponentTag = void 0;

	  // We create tags in the namespace of their parent container, except HTML
	  // tags get no namespace.
	  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
	  var domElement = void 0;
	  var namespaceURI = parentNamespace;
	  if (namespaceURI === HTML_NAMESPACE) {
	    namespaceURI = getIntrinsicNamespace(type);
	  }
	  if (namespaceURI === HTML_NAMESPACE) {
	    {
	      isCustomComponentTag = isCustomComponent(type, props);
	      // Should this check be gated by parent namespace? Not sure we want to
	      // allow <SVG> or <mATH>.
	      !(isCustomComponentTag || type === type.toLowerCase()) ? warning(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
	    }

	    if (type === 'script') {
	      // Create the script via .innerHTML so its "parser-inserted" flag is
	      // set to true and it does not execute
	      var div = ownerDocument.createElement('div');
	      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
	      // This is guaranteed to yield a script element.
	      var firstChild = div.firstChild;
	      domElement = div.removeChild(firstChild);
	    } else if (typeof props.is === 'string') {
	      // $FlowIssue `createElement` should be updated for Web Components
	      domElement = ownerDocument.createElement(type, { is: props.is });
	    } else {
	      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
	      // See discussion in https://github.com/facebook/react/pull/6896
	      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	      domElement = ownerDocument.createElement(type);
	    }
	  } else {
	    domElement = ownerDocument.createElementNS(namespaceURI, type);
	  }

	  {
	    if (namespaceURI === HTML_NAMESPACE) {
	      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
	        warnedUnknownTags[type] = true;
	        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
	      }
	    }
	  }

	  return domElement;
	}

	function createTextNode$1(text, rootContainerElement) {
	  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
	}

	function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
	  var isCustomComponentTag = isCustomComponent(tag, rawProps);
	  {
	    validatePropertiesInDevelopment(tag, rawProps);
	    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
	      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
	      didWarnShadyDOM = true;
	    }
	  }

	  // TODO: Make sure that we check isMounted before firing any of these events.
	  var props = void 0;
	  switch (tag) {
	    case 'iframe':
	    case 'object':
	      trapBubbledEvent(TOP_LOAD, domElement);
	      props = rawProps;
	      break;
	    case 'video':
	    case 'audio':
	      // Create listener for each media event
	      for (var i = 0; i < mediaEventTypes.length; i++) {
	        trapBubbledEvent(mediaEventTypes[i], domElement);
	      }
	      props = rawProps;
	      break;
	    case 'source':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      props = rawProps;
	      break;
	    case 'img':
	    case 'image':
	    case 'link':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      trapBubbledEvent(TOP_LOAD, domElement);
	      props = rawProps;
	      break;
	    case 'form':
	      trapBubbledEvent(TOP_RESET, domElement);
	      trapBubbledEvent(TOP_SUBMIT, domElement);
	      props = rawProps;
	      break;
	    case 'details':
	      trapBubbledEvent(TOP_TOGGLE, domElement);
	      props = rawProps;
	      break;
	    case 'input':
	      initWrapperState(domElement, rawProps);
	      props = getHostProps(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'option':
	      validateProps(domElement, rawProps);
	      props = getHostProps$1(domElement, rawProps);
	      break;
	    case 'select':
	      initWrapperState$1(domElement, rawProps);
	      props = getHostProps$2(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'textarea':
	      initWrapperState$2(domElement, rawProps);
	      props = getHostProps$3(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    default:
	      props = rawProps;
	  }

	  assertValidProps(tag, props, getStack);

	  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

	  switch (tag) {
	    case 'input':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper(domElement, rawProps, false);
	      break;
	    case 'textarea':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper$3(domElement, rawProps);
	      break;
	    case 'option':
	      postMountWrapper$1(domElement, rawProps);
	      break;
	    case 'select':
	      postMountWrapper$2(domElement, rawProps);
	      break;
	    default:
	      if (typeof props.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }
	}

	// Calculate the diff between the two objects.
	function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
	  {
	    validatePropertiesInDevelopment(tag, nextRawProps);
	  }

	  var updatePayload = null;

	  var lastProps = void 0;
	  var nextProps = void 0;
	  switch (tag) {
	    case 'input':
	      lastProps = getHostProps(domElement, lastRawProps);
	      nextProps = getHostProps(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'option':
	      lastProps = getHostProps$1(domElement, lastRawProps);
	      nextProps = getHostProps$1(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'select':
	      lastProps = getHostProps$2(domElement, lastRawProps);
	      nextProps = getHostProps$2(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    case 'textarea':
	      lastProps = getHostProps$3(domElement, lastRawProps);
	      nextProps = getHostProps$3(domElement, nextRawProps);
	      updatePayload = [];
	      break;
	    default:
	      lastProps = lastRawProps;
	      nextProps = nextRawProps;
	      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }

	  assertValidProps(tag, nextProps, getStack);

	  var propKey = void 0;
	  var styleName = void 0;
	  var styleUpdates = null;
	  for (propKey in lastProps) {
	    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	      continue;
	    }
	    if (propKey === STYLE) {
	      var lastStyle = lastProps[propKey];
	      for (styleName in lastStyle) {
	        if (lastStyle.hasOwnProperty(styleName)) {
	          if (!styleUpdates) {
	            styleUpdates = {};
	          }
	          styleUpdates[styleName] = '';
	        }
	      }
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
	      // Noop. This is handled by the clear text mechanism.
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (propKey === AUTOFOCUS) {
	      // Noop. It doesn't work on updates anyway.
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      // This is a special case. If any listener updates we need to ensure
	      // that the "current" fiber pointer gets updated so we need a commit
	      // to update this element.
	      if (!updatePayload) {
	        updatePayload = [];
	      }
	    } else {
	      // For all other deleted properties we add it to the queue. We use
	      // the whitelist in the commit phase instead.
	      (updatePayload = updatePayload || []).push(propKey, null);
	    }
	  }
	  for (propKey in nextProps) {
	    var nextProp = nextProps[propKey];
	    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
	    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	      continue;
	    }
	    if (propKey === STYLE) {
	      {
	        if (nextProp) {
	          // Freeze the next style object so that we can assume it won't be
	          // mutated. We have already warned for this in the past.
	          Object.freeze(nextProp);
	        }
	      }
	      if (lastProp) {
	        // Unset styles on `lastProp` but not on `nextProp`.
	        for (styleName in lastProp) {
	          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	            if (!styleUpdates) {
	              styleUpdates = {};
	            }
	            styleUpdates[styleName] = '';
	          }
	        }
	        // Update styles that changed since `lastProp`.
	        for (styleName in nextProp) {
	          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	            if (!styleUpdates) {
	              styleUpdates = {};
	            }
	            styleUpdates[styleName] = nextProp[styleName];
	          }
	        }
	      } else {
	        // Relies on `updateStylesByID` not mutating `styleUpdates`.
	        if (!styleUpdates) {
	          if (!updatePayload) {
	            updatePayload = [];
	          }
	          updatePayload.push(propKey, styleUpdates);
	        }
	        styleUpdates = nextProp;
	      }
	    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	      var nextHtml = nextProp ? nextProp[HTML] : undefined;
	      var lastHtml = lastProp ? lastProp[HTML] : undefined;
	      if (nextHtml != null) {
	        if (lastHtml !== nextHtml) {
	          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
	        }
	      } else {
	        // TODO: It might be too late to clear this if we have children
	        // inserted already.
	      }
	    } else if (propKey === CHILDREN) {
	      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
	        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
	      }
	    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
	      // Noop
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        // We eagerly listen to this even though we haven't committed yet.
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	      if (!updatePayload && lastProp !== nextProp) {
	        // This is a special case. If any listener updates we need to ensure
	        // that the "current" props pointer gets updated so we need a commit
	        // to update this element.
	        updatePayload = [];
	      }
	    } else {
	      // For any other property we always add it to the queue and then we
	      // filter it out using the whitelist during the commit.
	      (updatePayload = updatePayload || []).push(propKey, nextProp);
	    }
	  }
	  if (styleUpdates) {
	    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
	  }
	  return updatePayload;
	}

	// Apply the diff.
	function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
	  // Update checked *before* name.
	  // In the middle of an update, it is possible to have multiple checked.
	  // When a checked radio tries to change name, browser makes another radio's checked false.
	  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
	    updateChecked(domElement, nextRawProps);
	  }

	  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
	  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
	  // Apply the diff.
	  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

	  // TODO: Ensure that an update gets scheduled if any of the special props
	  // changed.
	  switch (tag) {
	    case 'input':
	      // Update the wrapper around inputs *after* updating props. This has to
	      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
	      // raise warnings and prevent the new value from being assigned.
	      updateWrapper(domElement, nextRawProps);
	      break;
	    case 'textarea':
	      updateWrapper$1(domElement, nextRawProps);
	      break;
	    case 'select':
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      postUpdateWrapper(domElement, nextRawProps);
	      break;
	  }
	}

	function getPossibleStandardName(propName) {
	  {
	    var lowerCasedName = propName.toLowerCase();
	    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
	      return null;
	    }
	    return possibleStandardNames[lowerCasedName] || null;
	  }
	  return null;
	}

	function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
	  var isCustomComponentTag = void 0;
	  var extraAttributeNames = void 0;

	  {
	    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
	    isCustomComponentTag = isCustomComponent(tag, rawProps);
	    validatePropertiesInDevelopment(tag, rawProps);
	    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
	      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$2() || 'A component');
	      didWarnShadyDOM = true;
	    }
	  }

	  // TODO: Make sure that we check isMounted before firing any of these events.
	  switch (tag) {
	    case 'iframe':
	    case 'object':
	      trapBubbledEvent(TOP_LOAD, domElement);
	      break;
	    case 'video':
	    case 'audio':
	      // Create listener for each media event
	      for (var i = 0; i < mediaEventTypes.length; i++) {
	        trapBubbledEvent(mediaEventTypes[i], domElement);
	      }
	      break;
	    case 'source':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      break;
	    case 'img':
	    case 'image':
	    case 'link':
	      trapBubbledEvent(TOP_ERROR, domElement);
	      trapBubbledEvent(TOP_LOAD, domElement);
	      break;
	    case 'form':
	      trapBubbledEvent(TOP_RESET, domElement);
	      trapBubbledEvent(TOP_SUBMIT, domElement);
	      break;
	    case 'details':
	      trapBubbledEvent(TOP_TOGGLE, domElement);
	      break;
	    case 'input':
	      initWrapperState(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'option':
	      validateProps(domElement, rawProps);
	      break;
	    case 'select':
	      initWrapperState$1(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	    case 'textarea':
	      initWrapperState$2(domElement, rawProps);
	      trapBubbledEvent(TOP_INVALID, domElement);
	      // For controlled components we always need to ensure we're listening
	      // to onChange. Even if there is no listener.
	      ensureListeningTo(rootContainerElement, 'onChange');
	      break;
	  }

	  assertValidProps(tag, rawProps, getStack);

	  {
	    extraAttributeNames = new Set();
	    var attributes = domElement.attributes;
	    for (var _i = 0; _i < attributes.length; _i++) {
	      var name = attributes[_i].name.toLowerCase();
	      switch (name) {
	        // Built-in SSR attribute is whitelisted
	        case 'data-reactroot':
	          break;
	        // Controlled attributes are not validated
	        // TODO: Only ignore them on controlled tags.
	        case 'value':
	          break;
	        case 'checked':
	          break;
	        case 'selected':
	          break;
	        default:
	          // Intentionally use the original name.
	          // See discussion in https://github.com/facebook/react/pull/10676.
	          extraAttributeNames.add(attributes[_i].name);
	      }
	    }
	  }

	  var updatePayload = null;
	  for (var propKey in rawProps) {
	    if (!rawProps.hasOwnProperty(propKey)) {
	      continue;
	    }
	    var nextProp = rawProps[propKey];
	    if (propKey === CHILDREN) {
	      // For text content children we compare against textContent. This
	      // might match additional HTML that is hidden when we read it using
	      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
	      // satisfies our requirement. Our requirement is not to produce perfect
	      // HTML and attributes. Ideally we should preserve structure but it's
	      // ok not to if the visible content is still enough to indicate what
	      // even listeners these nodes might be wired up to.
	      // TODO: Warn if there is more than a single textNode as a child.
	      // TODO: Should we use domElement.firstChild.nodeValue to compare?
	      if (typeof nextProp === 'string') {
	        if (domElement.textContent !== nextProp) {
	          if (true && !suppressHydrationWarning) {
	            warnForTextDifference(domElement.textContent, nextProp);
	          }
	          updatePayload = [CHILDREN, nextProp];
	        }
	      } else if (typeof nextProp === 'number') {
	        if (domElement.textContent !== '' + nextProp) {
	          if (true && !suppressHydrationWarning) {
	            warnForTextDifference(domElement.textContent, nextProp);
	          }
	          updatePayload = [CHILDREN, '' + nextProp];
	        }
	      }
	    } else if (registrationNameModules.hasOwnProperty(propKey)) {
	      if (nextProp != null) {
	        if (true && typeof nextProp !== 'function') {
	          warnForInvalidEventListener(propKey, nextProp);
	        }
	        ensureListeningTo(rootContainerElement, propKey);
	      }
	    } else if (true &&
	    // Convince Flow we've calculated it (it's DEV-only in this method.)
	    typeof isCustomComponentTag === 'boolean') {
	      // Validate that the properties correspond to their expected values.
	      var serverValue = void 0;
	      var propertyInfo = getPropertyInfo(propKey);
	      if (suppressHydrationWarning) {
	        // Don't bother comparing. We're ignoring all these warnings.
	      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
	      // Controlled attributes are not validated
	      // TODO: Only ignore them on controlled tags.
	      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
	        // Noop
	      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
	        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
	        var serverHTML = domElement.innerHTML;
	        var expectedHTML = normalizeHTML(domElement, rawHtml);
	        if (expectedHTML !== serverHTML) {
	          warnForPropDifference(propKey, serverHTML, expectedHTML);
	        }
	      } else if (propKey === STYLE) {
	        // $FlowFixMe - Should be inferred as not undefined.
	        extraAttributeNames.delete(propKey);
	        var expectedStyle = createDangerousStringForStyles(nextProp);
	        serverValue = domElement.getAttribute('style');
	        if (expectedStyle !== serverValue) {
	          warnForPropDifference(propKey, serverValue, expectedStyle);
	        }
	      } else if (isCustomComponentTag) {
	        // $FlowFixMe - Should be inferred as not undefined.
	        extraAttributeNames.delete(propKey.toLowerCase());
	        serverValue = getValueForAttribute(domElement, propKey, nextProp);

	        if (nextProp !== serverValue) {
	          warnForPropDifference(propKey, serverValue, nextProp);
	        }
	      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
	        var isMismatchDueToBadCasing = false;
	        if (propertyInfo !== null) {
	          // $FlowFixMe - Should be inferred as not undefined.
	          extraAttributeNames.delete(propertyInfo.attributeName);
	          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
	        } else {
	          var ownNamespace = parentNamespace;
	          if (ownNamespace === HTML_NAMESPACE) {
	            ownNamespace = getIntrinsicNamespace(tag);
	          }
	          if (ownNamespace === HTML_NAMESPACE) {
	            // $FlowFixMe - Should be inferred as not undefined.
	            extraAttributeNames.delete(propKey.toLowerCase());
	          } else {
	            var standardName = getPossibleStandardName(propKey);
	            if (standardName !== null && standardName !== propKey) {
	              // If an SVG prop is supplied with bad casing, it will
	              // be successfully parsed from HTML, but will produce a mismatch
	              // (and would be incorrectly rendered on the client).
	              // However, we already warn about bad casing elsewhere.
	              // So we'll skip the misleading extra mismatch warning in this case.
	              isMismatchDueToBadCasing = true;
	              // $FlowFixMe - Should be inferred as not undefined.
	              extraAttributeNames.delete(standardName);
	            }
	            // $FlowFixMe - Should be inferred as not undefined.
	            extraAttributeNames.delete(propKey);
	          }
	          serverValue = getValueForAttribute(domElement, propKey, nextProp);
	        }

	        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
	          warnForPropDifference(propKey, serverValue, nextProp);
	        }
	      }
	    }
	  }

	  {
	    // $FlowFixMe - Should be inferred as not undefined.
	    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
	      // $FlowFixMe - Should be inferred as not undefined.
	      warnForExtraAttributes(extraAttributeNames);
	    }
	  }

	  switch (tag) {
	    case 'input':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper(domElement, rawProps, true);
	      break;
	    case 'textarea':
	      // TODO: Make sure we check if this is still unmounted or do any clean
	      // up necessary since we never stop tracking anymore.
	      track(domElement);
	      postMountWrapper$3(domElement, rawProps);
	      break;
	    case 'select':
	    case 'option':
	      // For input and textarea we current always set the value property at
	      // post mount to force it to diverge from attributes. However, for
	      // option and select we don't quite do the same thing and select
	      // is not resilient to the DOM state changing so we don't do that here.
	      // TODO: Consider not doing this for input and textarea.
	      break;
	    default:
	      if (typeof rawProps.onClick === 'function') {
	        // TODO: This cast may not be sound for SVG, MathML or custom elements.
	        trapClickOnNonInteractiveElement(domElement);
	      }
	      break;
	  }

	  return updatePayload;
	}

	function diffHydratedText$1(textNode, text) {
	  var isDifferent = textNode.nodeValue !== text;
	  return isDifferent;
	}

	function warnForUnmatchedText$1(textNode, text) {
	  {
	    warnForTextDifference(textNode.nodeValue, text);
	  }
	}

	function warnForDeletedHydratableElement$1(parentNode, child) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForDeletedHydratableText$1(parentNode, child) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForInsertedHydratedElement$1(parentNode, tag, props) {
	  {
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
	  }
	}

	function warnForInsertedHydratedText$1(parentNode, text) {
	  {
	    if (text === '') {
	      // We expect to insert empty text nodes since they're not represented in
	      // the HTML.
	      // TODO: Remove this special case if we can just avoid inserting empty
	      // text nodes.
	      return;
	    }
	    if (didWarnInvalidHydration) {
	      return;
	    }
	    didWarnInvalidHydration = true;
	    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
	  }
	}

	function restoreControlledState$1(domElement, tag, props) {
	  switch (tag) {
	    case 'input':
	      restoreControlledState(domElement, props);
	      return;
	    case 'textarea':
	      restoreControlledState$3(domElement, props);
	      return;
	    case 'select':
	      restoreControlledState$2(domElement, props);
	      return;
	  }
	}

	var ReactDOMFiberComponent = Object.freeze({
		createElement: createElement$1,
		createTextNode: createTextNode$1,
		setInitialProperties: setInitialProperties$1,
		diffProperties: diffProperties$1,
		updateProperties: updateProperties$1,
		diffHydratedProperties: diffHydratedProperties$1,
		diffHydratedText: diffHydratedText$1,
		warnForUnmatchedText: warnForUnmatchedText$1,
		warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
		warnForDeletedHydratableText: warnForDeletedHydratableText$1,
		warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
		warnForInsertedHydratedText: warnForInsertedHydratedText$1,
		restoreControlledState: restoreControlledState$1
	});

	// TODO: direct imports like some-package/src/* are bad. Fix me.
	var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

	var validateDOMNesting = emptyFunction;

	{
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':
	      case 'pre':
	      case 'listing':
	      case 'table':
	      case 'hr':
	      case 'xmp':
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childText, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    if (childText != null) {
	      !(childTag == null) ? warning(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
	      childTag = '#text';
	    }

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var invalidParentOrAncestor = invalidParent || invalidAncestor;
	    if (!invalidParentOrAncestor) {
	      return;
	    }

	    var ancestorTag = invalidParentOrAncestor.tag;
	    var addendum = getCurrentFiberStackAddendum$5();

	    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
	    if (didWarn[warnKey]) {
	      return;
	    }
	    didWarn[warnKey] = true;

	    var tagDisplayName = childTag;
	    var whitespaceInfo = '';
	    if (childTag === '#text') {
	      if (/\S/.test(childText)) {
	        tagDisplayName = 'Text nodes';
	      } else {
	        tagDisplayName = 'Whitespace text nodes';
	        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
	      }
	    } else {
	      tagDisplayName = '<' + childTag + '>';
	    }

	    if (invalidParent) {
	      var info = '';
	      if (ancestorTag === 'table' && childTag === 'tr') {
	        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	      }
	      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
	    } else {
	      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
	    }
	  };

	  // TODO: turn this into a named export
	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;
	}

	var validateDOMNesting$1 = validateDOMNesting;

	// Renderers that don't support persistence
	// can re-export everything from this module.

	function shim() {
	  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
	}

	// Persistence (when unsupported)
	var supportsPersistence = false;
	var cloneInstance = shim;
	var createContainerChildSet = shim;
	var appendChildToContainerChildSet = shim;
	var finalizeContainerChildren = shim;
	var replaceContainerChildren = shim;

	// Unused

	var createElement = createElement$1;
	var createTextNode = createTextNode$1;
	var setInitialProperties = setInitialProperties$1;
	var diffProperties = diffProperties$1;
	var updateProperties = updateProperties$1;
	var diffHydratedProperties = diffHydratedProperties$1;
	var diffHydratedText = diffHydratedText$1;
	var warnForUnmatchedText = warnForUnmatchedText$1;
	var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
	var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
	var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
	var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
	var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
	var precacheFiberNode$1 = precacheFiberNode;
	var updateFiberProps$1 = updateFiberProps;


	var SUPPRESS_HYDRATION_WARNING = void 0;
	{
	  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
	}

	var eventsEnabled = null;
	var selectionInformation = null;

	function shouldAutoFocusHostComponent(type, props) {
	  switch (type) {
	    case 'button':
	    case 'input':
	    case 'select':
	    case 'textarea':
	      return !!props.autoFocus;
	  }
	  return false;
	}

	function getRootHostContext(rootContainerInstance) {
	  var type = void 0;
	  var namespace = void 0;
	  var nodeType = rootContainerInstance.nodeType;
	  switch (nodeType) {
	    case DOCUMENT_NODE:
	    case DOCUMENT_FRAGMENT_NODE:
	      {
	        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
	        var root = rootContainerInstance.documentElement;
	        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
	        break;
	      }
	    default:
	      {
	        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
	        var ownNamespace = container.namespaceURI || null;
	        type = container.tagName;
	        namespace = getChildNamespace(ownNamespace, type);
	        break;
	      }
	  }
	  {
	    var validatedTag = type.toLowerCase();
	    var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
	    return { namespace: namespace, ancestorInfo: _ancestorInfo };
	  }
	  return namespace;
	}

	function getChildHostContext(parentHostContext, type, rootContainerInstance) {
	  {
	    var parentHostContextDev = parentHostContext;
	    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
	    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
	    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
	  }
	  var parentNamespace = parentHostContext;
	  return getChildNamespace(parentNamespace, type);
	}

	function getPublicInstance(instance) {
	  return instance;
	}

	function prepareForCommit(containerInfo) {
	  eventsEnabled = isEnabled();
	  selectionInformation = getSelectionInformation();
	  setEnabled(false);
	}

	function resetAfterCommit(containerInfo) {
	  restoreSelection(selectionInformation);
	  selectionInformation = null;
	  setEnabled(eventsEnabled);
	  eventsEnabled = null;
	}

	function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
	  var parentNamespace = void 0;
	  {
	    // TODO: take namespace into account when validating.
	    var hostContextDev = hostContext;
	    validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
	    if (typeof props.children === 'string' || typeof props.children === 'number') {
	      var string = '' + props.children;
	      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
	      validateDOMNesting$1(null, string, ownAncestorInfo);
	    }
	    parentNamespace = hostContextDev.namespace;
	  }
	  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
	  precacheFiberNode$1(internalInstanceHandle, domElement);
	  updateFiberProps$1(domElement, props);
	  return domElement;
	}

	function appendInitialChild(parentInstance, child) {
	  parentInstance.appendChild(child);
	}

	function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
	  setInitialProperties(domElement, type, props, rootContainerInstance);
	  return shouldAutoFocusHostComponent(type, props);
	}

	function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
	  {
	    var hostContextDev = hostContext;
	    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
	      var string = '' + newProps.children;
	      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
	      validateDOMNesting$1(null, string, ownAncestorInfo);
	    }
	  }
	  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
	}

	function shouldSetTextContent(type, props) {
	  return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
	}

	function shouldDeprioritizeSubtree(type, props) {
	  return !!props.hidden;
	}

	function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
	  {
	    var hostContextDev = hostContext;
	    validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
	  }
	  var textNode = createTextNode(text, rootContainerInstance);
	  precacheFiberNode$1(internalInstanceHandle, textNode);
	  return textNode;
	}

	var now = now$1;
	var isPrimaryRenderer = true;
	var scheduleDeferredCallback = scheduleWork;
	var cancelDeferredCallback = cancelScheduledWork;

	// -------------------
	//     Mutation
	// -------------------

	var supportsMutation = true;

	function commitMount(domElement, type, newProps, internalInstanceHandle) {
	  // Despite the naming that might imply otherwise, this method only
	  // fires if there is an `Update` effect scheduled during mounting.
	  // This happens if `finalizeInitialChildren` returns `true` (which it
	  // does to implement the `autoFocus` attribute on the client). But
	  // there are also other cases when this might happen (such as patching
	  // up text content during hydration mismatch). So we'll check this again.
	  if (shouldAutoFocusHostComponent(type, newProps)) {
	    domElement.focus();
	  }
	}

	function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
	  // Update the props handle so that we know which props are the ones with
	  // with current event handlers.
	  updateFiberProps$1(domElement, newProps);
	  // Apply the diff to the DOM node.
	  updateProperties(domElement, updatePayload, type, oldProps, newProps);
	}

	function resetTextContent(domElement) {
	  setTextContent(domElement, '');
	}

	function commitTextUpdate(textInstance, oldText, newText) {
	  textInstance.nodeValue = newText;
	}

	function appendChild(parentInstance, child) {
	  parentInstance.appendChild(child);
	}

	function appendChildToContainer(container, child) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.insertBefore(child, container);
	  } else {
	    container.appendChild(child);
	  }
	}

	function insertBefore(parentInstance, child, beforeChild) {
	  parentInstance.insertBefore(child, beforeChild);
	}

	function insertInContainerBefore(container, child, beforeChild) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.insertBefore(child, beforeChild);
	  } else {
	    container.insertBefore(child, beforeChild);
	  }
	}

	function removeChild(parentInstance, child) {
	  parentInstance.removeChild(child);
	}

	function removeChildFromContainer(container, child) {
	  if (container.nodeType === COMMENT_NODE) {
	    container.parentNode.removeChild(child);
	  } else {
	    container.removeChild(child);
	  }
	}

	// -------------------
	//     Hydration
	// -------------------

	var supportsHydration = true;

	function canHydrateInstance(instance, type, props) {
	  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
	    return null;
	  }
	  // This has now been refined to an element node.
	  return instance;
	}

	function canHydrateTextInstance(instance, text) {
	  if (text === '' || instance.nodeType !== TEXT_NODE) {
	    // Empty strings are not parsed by HTML so there won't be a correct match here.
	    return null;
	  }
	  // This has now been refined to a text node.
	  return instance;
	}

	function getNextHydratableSibling(instance) {
	  var node = instance.nextSibling;
	  // Skip non-hydratable nodes.
	  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
	    node = node.nextSibling;
	  }
	  return node;
	}

	function getFirstHydratableChild(parentInstance) {
	  var next = parentInstance.firstChild;
	  // Skip non-hydratable nodes.
	  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
	    next = next.nextSibling;
	  }
	  return next;
	}

	function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
	  precacheFiberNode$1(internalInstanceHandle, instance);
	  // TODO: Possibly defer this until the commit phase where all the events
	  // get attached.
	  updateFiberProps$1(instance, props);
	  var parentNamespace = void 0;
	  {
	    var hostContextDev = hostContext;
	    parentNamespace = hostContextDev.namespace;
	  }
	  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
	}

	function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
	  precacheFiberNode$1(internalInstanceHandle, textInstance);
	  return diffHydratedText(textInstance, text);
	}

	function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
	  {
	    warnForUnmatchedText(textInstance, text);
	  }
	}

	function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForUnmatchedText(textInstance, text);
	  }
	}

	function didNotHydrateContainerInstance(parentContainer, instance) {
	  {
	    if (instance.nodeType === 1) {
	      warnForDeletedHydratableElement(parentContainer, instance);
	    } else {
	      warnForDeletedHydratableText(parentContainer, instance);
	    }
	  }
	}

	function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    if (instance.nodeType === 1) {
	      warnForDeletedHydratableElement(parentInstance, instance);
	    } else {
	      warnForDeletedHydratableText(parentInstance, instance);
	    }
	  }
	}

	function didNotFindHydratableContainerInstance(parentContainer, type, props) {
	  {
	    warnForInsertedHydratedElement(parentContainer, type, props);
	  }
	}

	function didNotFindHydratableContainerTextInstance(parentContainer, text) {
	  {
	    warnForInsertedHydratedText(parentContainer, text);
	  }
	}

	function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForInsertedHydratedElement(parentInstance, type, props);
	  }
	}

	function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
	  if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
	    warnForInsertedHydratedText(parentInstance, text);
	  }
	}

	// Exports ReactDOM.createRoot
	var enableUserTimingAPI = true;

	// Experimental error-boundary API that can recover from errors within a single
	// render phase
	var enableGetDerivedStateFromCatch = false;
	// Suspense
	var enableSuspense = false;
	// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
	var debugRenderPhaseSideEffects = false;

	// In some cases, StrictMode should also double-render lifecycles.
	// This can be confusing for tests though,
	// And it can be bad for performance in production.
	// This feature flag can be used to control the behavior:
	var debugRenderPhaseSideEffectsForStrictMode = true;

	// To preserve the "Pause on caught exceptions" behavior of the debugger, we
	// replay the begin phase of a failed component inside invokeGuardedCallback.
	var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

	// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
	var warnAboutDeprecatedLifecycles = false;

	// Warn about legacy context API
	var warnAboutLegacyContextAPI = false;

	// Gather advanced timing metrics for Profiler subtrees.
	var enableProfilerTimer = true;

	// Only used in www builds.

	// Prefix measurements so that it's possible to filter them.
	// Longer prefixes are hard to read in DevTools.
	var reactEmoji = '\u269B';
	var warningEmoji = '\u26D4';
	var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

	// Keep track of current fiber so that we know the path to unwind on pause.
	// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
	var currentFiber = null;
	// If we're in the middle of user code, which fiber and method is it?
	// Reusing `currentFiber` would be confusing for this because user code fiber
	// can change during commit phase too, but we don't need to unwind it (since
	// lifecycles in the commit phase don't resemble a tree).
	var currentPhase = null;
	var currentPhaseFiber = null;
	// Did lifecycle hook schedule an update? This is often a performance problem,
	// so we will keep track of it, and include it in the report.
	// Track commits caused by cascading updates.
	var isCommitting = false;
	var hasScheduledUpdateInCurrentCommit = false;
	var hasScheduledUpdateInCurrentPhase = false;
	var commitCountInCurrentWorkLoop = 0;
	var effectCountInCurrentCommit = 0;
	var isWaitingForCallback = false;
	// During commits, we only show a measurement once per method name
	// to avoid stretch the commit phase with measurement overhead.
	var labelsInCurrentCommit = new Set();

	var formatMarkName = function (markName) {
	  return reactEmoji + ' ' + markName;
	};

	var formatLabel = function (label, warning$$1) {
	  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
	  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
	  return '' + prefix + label + suffix;
	};

	var beginMark = function (markName) {
	  performance.mark(formatMarkName(markName));
	};

	var clearMark = function (markName) {
	  performance.clearMarks(formatMarkName(markName));
	};

	var endMark = function (label, markName, warning$$1) {
	  var formattedMarkName = formatMarkName(markName);
	  var formattedLabel = formatLabel(label, warning$$1);
	  try {
	    performance.measure(formattedLabel, formattedMarkName);
	  } catch (err) {}
	  // If previous mark was missing for some reason, this will throw.
	  // This could only happen if React crashed in an unexpected place earlier.
	  // Don't pile on with more errors.

	  // Clear marks immediately to avoid growing buffer.
	  performance.clearMarks(formattedMarkName);
	  performance.clearMeasures(formattedLabel);
	};

	var getFiberMarkName = function (label, debugID) {
	  return label + ' (#' + debugID + ')';
	};

	var getFiberLabel = function (componentName, isMounted, phase) {
	  if (phase === null) {
	    // These are composite component total time measurements.
	    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
	  } else {
	    // Composite component methods.
	    return componentName + '.' + phase;
	  }
	};

	var beginFiberMark = function (fiber, phase) {
	  var componentName = getComponentName(fiber) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);

	  if (isCommitting && labelsInCurrentCommit.has(label)) {
	    // During the commit phase, we don't show duplicate labels because
	    // there is a fixed overhead for every measurement, and we don't
	    // want to stretch the commit phase beyond necessary.
	    return false;
	  }
	  labelsInCurrentCommit.add(label);

	  var markName = getFiberMarkName(label, debugID);
	  beginMark(markName);
	  return true;
	};

	var clearFiberMark = function (fiber, phase) {
	  var componentName = getComponentName(fiber) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);
	  var markName = getFiberMarkName(label, debugID);
	  clearMark(markName);
	};

	var endFiberMark = function (fiber, phase, warning$$1) {
	  var componentName = getComponentName(fiber) || 'Unknown';
	  var debugID = fiber._debugID;
	  var isMounted = fiber.alternate !== null;
	  var label = getFiberLabel(componentName, isMounted, phase);
	  var markName = getFiberMarkName(label, debugID);
	  endMark(label, markName, warning$$1);
	};

	var shouldIgnoreFiber = function (fiber) {
	  // Host components should be skipped in the timeline.
	  // We could check typeof fiber.type, but does this work with RN?
	  switch (fiber.tag) {
	    case HostRoot:
	    case HostComponent:
	    case HostText:
	    case HostPortal:
	    case Fragment:
	    case ContextProvider:
	    case ContextConsumer:
	    case Mode:
	      return true;
	    default:
	      return false;
	  }
	};

	var clearPendingPhaseMeasurement = function () {
	  if (currentPhase !== null && currentPhaseFiber !== null) {
	    clearFiberMark(currentPhaseFiber, currentPhase);
	  }
	  currentPhaseFiber = null;
	  currentPhase = null;
	  hasScheduledUpdateInCurrentPhase = false;
	};

	var pauseTimers = function () {
	  // Stops all currently active measurements so that they can be resumed
	  // if we continue in a later deferred loop from the same unit of work.
	  var fiber = currentFiber;
	  while (fiber) {
	    if (fiber._debugIsCurrentlyTiming) {
	      endFiberMark(fiber, null, null);
	    }
	    fiber = fiber.return;
	  }
	};

	var resumeTimersRecursively = function (fiber) {
	  if (fiber.return !== null) {
	    resumeTimersRecursively(fiber.return);
	  }
	  if (fiber._debugIsCurrentlyTiming) {
	    beginFiberMark(fiber, null);
	  }
	};

	var resumeTimers = function () {
	  // Resumes all measurements that were active during the last deferred loop.
	  if (currentFiber !== null) {
	    resumeTimersRecursively(currentFiber);
	  }
	};

	function recordEffect() {
	  if (enableUserTimingAPI) {
	    effectCountInCurrentCommit++;
	  }
	}

	function recordScheduleUpdate() {
	  if (enableUserTimingAPI) {
	    if (isCommitting) {
	      hasScheduledUpdateInCurrentCommit = true;
	    }
	    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
	      hasScheduledUpdateInCurrentPhase = true;
	    }
	  }
	}

	function startRequestCallbackTimer() {
	  if (enableUserTimingAPI) {
	    if (supportsUserTiming && !isWaitingForCallback) {
	      isWaitingForCallback = true;
	      beginMark('(Waiting for async callback...)');
	    }
	  }
	}

	function stopRequestCallbackTimer(didExpire, expirationTime) {
	  if (enableUserTimingAPI) {
	    if (supportsUserTiming) {
	      isWaitingForCallback = false;
	      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
	      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning$$1);
	    }
	  }
	}

	function startWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, this is the fiber to unwind from.
	    currentFiber = fiber;
	    if (!beginFiberMark(fiber, null)) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = true;
	  }
	}

	function cancelWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // Remember we shouldn't complete measurement for this fiber.
	    // Otherwise flamechart will be deep even for small updates.
	    fiber._debugIsCurrentlyTiming = false;
	    clearFiberMark(fiber, null);
	  }
	}

	function stopWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, its parent is the fiber to unwind from.
	    currentFiber = fiber.return;
	    if (!fiber._debugIsCurrentlyTiming) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = false;
	    endFiberMark(fiber, null, null);
	  }
	}

	function stopFailedWorkTimer(fiber) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
	      return;
	    }
	    // If we pause, its parent is the fiber to unwind from.
	    currentFiber = fiber.return;
	    if (!fiber._debugIsCurrentlyTiming) {
	      return;
	    }
	    fiber._debugIsCurrentlyTiming = false;
	    var warning$$1 = 'An error was thrown inside this error boundary';
	    endFiberMark(fiber, null, warning$$1);
	  }
	}

	function startPhaseTimer(fiber, phase) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    clearPendingPhaseMeasurement();
	    if (!beginFiberMark(fiber, phase)) {
	      return;
	    }
	    currentPhaseFiber = fiber;
	    currentPhase = phase;
	  }
	}

	function stopPhaseTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    if (currentPhase !== null && currentPhaseFiber !== null) {
	      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
	      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
	    }
	    currentPhase = null;
	    currentPhaseFiber = null;
	  }
	}

	function startWorkLoopTimer(nextUnitOfWork) {
	  if (enableUserTimingAPI) {
	    currentFiber = nextUnitOfWork;
	    if (!supportsUserTiming) {
	      return;
	    }
	    commitCountInCurrentWorkLoop = 0;
	    // This is top level call.
	    // Any other measurements are performed within.
	    beginMark('(React Tree Reconciliation)');
	    // Resume any measurements that were in progress during the last loop.
	    resumeTimers();
	  }
	}

	function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var warning$$1 = null;
	    if (interruptedBy !== null) {
	      if (interruptedBy.tag === HostRoot) {
	        warning$$1 = 'A top-level update interrupted the previous render';
	      } else {
	        var componentName = getComponentName(interruptedBy) || 'Unknown';
	        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
	      }
	    } else if (commitCountInCurrentWorkLoop > 1) {
	      warning$$1 = 'There were cascading updates';
	    }
	    commitCountInCurrentWorkLoop = 0;
	    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
	    // Pause any measurements until the next loop.
	    pauseTimers();
	    endMark(label, '(React Tree Reconciliation)', warning$$1);
	  }
	}

	function startCommitTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    isCommitting = true;
	    hasScheduledUpdateInCurrentCommit = false;
	    labelsInCurrentCommit.clear();
	    beginMark('(Committing Changes)');
	  }
	}

	function stopCommitTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }

	    var warning$$1 = null;
	    if (hasScheduledUpdateInCurrentCommit) {
	      warning$$1 = 'Lifecycle hook scheduled a cascading update';
	    } else if (commitCountInCurrentWorkLoop > 0) {
	      warning$$1 = 'Caused by a cascading update in earlier commit';
	    }
	    hasScheduledUpdateInCurrentCommit = false;
	    commitCountInCurrentWorkLoop++;
	    isCommitting = false;
	    labelsInCurrentCommit.clear();

	    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
	  }
	}

	function startCommitSnapshotEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Committing Snapshot Effects)');
	  }
	}

	function stopCommitSnapshotEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
	  }
	}

	function startCommitHostEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Committing Host Effects)');
	  }
	}

	function stopCommitHostEffectsTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
	  }
	}

	function startCommitLifeCyclesTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    effectCountInCurrentCommit = 0;
	    beginMark('(Calling Lifecycle Methods)');
	  }
	}

	function stopCommitLifeCyclesTimer() {
	  if (enableUserTimingAPI) {
	    if (!supportsUserTiming) {
	      return;
	    }
	    var count = effectCountInCurrentCommit;
	    effectCountInCurrentCommit = 0;
	    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
	  }
	}

	var valueStack = [];

	var fiberStack = void 0;

	{
	  fiberStack = [];
	}

	var index = -1;

	function createCursor(defaultValue) {
	  return {
	    current: defaultValue
	  };
	}

	function pop(cursor, fiber) {
	  if (index < 0) {
	    {
	      warning(false, 'Unexpected pop.');
	    }
	    return;
	  }

	  {
	    if (fiber !== fiberStack[index]) {
	      warning(false, 'Unexpected Fiber popped.');
	    }
	  }

	  cursor.current = valueStack[index];

	  valueStack[index] = null;

	  {
	    fiberStack[index] = null;
	  }

	  index--;
	}

	function push(cursor, value, fiber) {
	  index++;

	  valueStack[index] = cursor.current;

	  {
	    fiberStack[index] = fiber;
	  }

	  cursor.current = value;
	}

	function checkThatStackIsEmpty() {
	  {
	    if (index !== -1) {
	      warning(false, 'Expected an empty stack. Something was not reset properly.');
	    }
	  }
	}

	function resetStackAfterFatalErrorInDev() {
	  {
	    index = -1;
	    valueStack.length = 0;
	    fiberStack.length = 0;
	  }
	}

	var warnedAboutMissingGetChildContext = void 0;

	{
	  warnedAboutMissingGetChildContext = {};
	}

	// A cursor to the current merged context object on the stack.
	var contextStackCursor = createCursor(emptyObject);
	// A cursor to a boolean indicating whether the context has changed.
	var didPerformWorkStackCursor = createCursor(false);
	// Keep track of the previous context object that was on the stack.
	// We use this to get access to the parent context after we have already
	// pushed the next context provider, and now need to merge their contexts.
	var previousContext = emptyObject;

	function getUnmaskedContext(workInProgress) {
	  var hasOwnContext = isContextProvider(workInProgress);
	  if (hasOwnContext) {
	    // If the fiber is a context provider itself, when we read its context
	    // we have already pushed its own child context on the stack. A context
	    // provider should not "see" its own child context. Therefore we read the
	    // previous (parent) context instead for a context provider.
	    return previousContext;
	  }
	  return contextStackCursor.current;
	}

	function cacheContext(workInProgress, unmaskedContext, maskedContext) {
	  var instance = workInProgress.stateNode;
	  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
	  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
	}

	function getMaskedContext(workInProgress, unmaskedContext) {
	  var type = workInProgress.type;
	  var contextTypes = type.contextTypes;
	  if (!contextTypes) {
	    return emptyObject;
	  }

	  // Avoid recreating masked context unless unmasked context has changed.
	  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
	  // This may trigger infinite loops if componentWillReceiveProps calls setState.
	  var instance = workInProgress.stateNode;
	  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
	    return instance.__reactInternalMemoizedMaskedChildContext;
	  }

	  var context = {};
	  for (var key in contextTypes) {
	    context[key] = unmaskedContext[key];
	  }

	  {
	    var name = getComponentName(workInProgress) || 'Unknown';
	    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
	  }

	  // Cache unmasked context so we can avoid recreating masked context unless necessary.
	  // Context is created before the class component is instantiated so check for instance.
	  if (instance) {
	    cacheContext(workInProgress, unmaskedContext, context);
	  }

	  return context;
	}

	function hasContextChanged() {
	  return didPerformWorkStackCursor.current;
	}

	function isContextConsumer(fiber) {
	  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
	}

	function isContextProvider(fiber) {
	  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
	}

	function popContextProvider(fiber) {
	  if (!isContextProvider(fiber)) {
	    return;
	  }

	  pop(didPerformWorkStackCursor, fiber);
	  pop(contextStackCursor, fiber);
	}

	function popTopLevelContextObject(fiber) {
	  pop(didPerformWorkStackCursor, fiber);
	  pop(contextStackCursor, fiber);
	}

	function pushTopLevelContextObject(fiber, context, didChange) {
	  !(contextStackCursor.current === emptyObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  push(contextStackCursor, context, fiber);
	  push(didPerformWorkStackCursor, didChange, fiber);
	}

	function processChildContext(fiber, parentContext) {
	  var instance = fiber.stateNode;
	  var childContextTypes = fiber.type.childContextTypes;

	  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
	  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
	  if (typeof instance.getChildContext !== 'function') {
	    {
	      var componentName = getComponentName(fiber) || 'Unknown';

	      if (!warnedAboutMissingGetChildContext[componentName]) {
	        warnedAboutMissingGetChildContext[componentName] = true;
	        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
	      }
	    }
	    return parentContext;
	  }

	  var childContext = void 0;
	  {
	    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
	  }
	  startPhaseTimer(fiber, 'getChildContext');
	  childContext = instance.getChildContext();
	  stopPhaseTimer();
	  {
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }
	  for (var contextKey in childContext) {
	    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
	  }
	  {
	    var name = getComponentName(fiber) || 'Unknown';
	    checkPropTypes(childContextTypes, childContext, 'child context', name,
	    // In practice, there is one case in which we won't get a stack. It's when
	    // somebody calls unstable_renderSubtreeIntoContainer() and we process
	    // context from the parent component instance. The stack will be missing
	    // because it's outside of the reconciliation, and so the pointer has not
	    // been set. This is rare and doesn't matter. We'll also remove that API.
	    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
	  }

	  return _assign({}, parentContext, childContext);
	}

	function pushContextProvider(workInProgress) {
	  if (!isContextProvider(workInProgress)) {
	    return false;
	  }

	  var instance = workInProgress.stateNode;
	  // We push the context as early as possible to ensure stack integrity.
	  // If the instance does not exist yet, we will push null at first,
	  // and replace it on the stack later when invalidating the context.
	  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

	  // Remember the parent context so we can merge with it later.
	  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
	  previousContext = contextStackCursor.current;
	  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
	  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

	  return true;
	}

	function invalidateContextProvider(workInProgress, didChange) {
	  var instance = workInProgress.stateNode;
	  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  if (didChange) {
	    // Merge parent and own context.
	    // Skip this if we're not updating due to sCU.
	    // This avoids unnecessarily recomputing memoized values.
	    var mergedContext = processChildContext(workInProgress, previousContext);
	    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

	    // Replace the old (or empty) context with the new one.
	    // It is important to unwind the context in the reverse order.
	    pop(didPerformWorkStackCursor, workInProgress);
	    pop(contextStackCursor, workInProgress);
	    // Now push the new context and mark that it has changed.
	    push(contextStackCursor, mergedContext, workInProgress);
	    push(didPerformWorkStackCursor, didChange, workInProgress);
	  } else {
	    pop(didPerformWorkStackCursor, workInProgress);
	    push(didPerformWorkStackCursor, didChange, workInProgress);
	  }
	}

	function findCurrentUnmaskedContext(fiber) {
	  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
	  // makes sense elsewhere
	  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  var node = fiber;
	  while (node.tag !== HostRoot) {
	    if (isContextProvider(node)) {
	      return node.stateNode.__reactInternalMemoizedMergedChildContext;
	    }
	    var parent = node.return;
	    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	    node = parent;
	  }
	  return node.stateNode.context;
	}

	// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
	// Math.pow(2, 30) - 1
	// 0b111111111111111111111111111111
	var MAX_SIGNED_31_BIT_INT = 1073741823;

	// TODO: Use an opaque type once ESLint et al support the syntax


	var NoWork = 0;
	var Sync = 1;
	var Never = MAX_SIGNED_31_BIT_INT;

	var UNIT_SIZE = 10;
	var MAGIC_NUMBER_OFFSET = 2;

	// 1 unit of expiration time represents 10ms.
	function msToExpirationTime(ms) {
	  // Always add an offset so that we don't clash with the magic number for NoWork.
	  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
	}

	function expirationTimeToMs(expirationTime) {
	  return (expirationTime - MAGIC_NUMBER_OFFSET) * UNIT_SIZE;
	}

	function ceiling(num, precision) {
	  return ((num / precision | 0) + 1) * precision;
	}

	function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
	  return MAGIC_NUMBER_OFFSET + ceiling(currentTime - MAGIC_NUMBER_OFFSET + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
	}

	var NoContext = 0;
	var AsyncMode = 1;
	var StrictMode = 2;
	var ProfileMode = 4;

	var hasBadMapPolyfill = void 0;

	{
	  hasBadMapPolyfill = false;
	  try {
	    var nonExtensibleObject = Object.preventExtensions({});
	    var testMap = new Map([[nonExtensibleObject, null]]);
	    var testSet = new Set([nonExtensibleObject]);
	    // This is necessary for Rollup to not consider these unused.
	    // https://github.com/rollup/rollup/issues/1771
	    // TODO: we can remove these if Rollup fixes the bug.
	    testMap.set(0, 0);
	    testSet.add(0);
	  } catch (e) {
	    // TODO: Consider warning about bad polyfills
	    hasBadMapPolyfill = true;
	  }
	}

	// A Fiber is work on a Component that needs to be done or was done. There can
	// be more than one per component.


	var debugCounter = void 0;

	{
	  debugCounter = 1;
	}

	function FiberNode(tag, pendingProps, key, mode) {
	  // Instance
	  this.tag = tag;
	  this.key = key;
	  this.type = null;
	  this.stateNode = null;

	  // Fiber
	  this.return = null;
	  this.child = null;
	  this.sibling = null;
	  this.index = 0;

	  this.ref = null;

	  this.pendingProps = pendingProps;
	  this.memoizedProps = null;
	  this.updateQueue = null;
	  this.memoizedState = null;

	  this.mode = mode;

	  // Effects
	  this.effectTag = NoEffect;
	  this.nextEffect = null;

	  this.firstEffect = null;
	  this.lastEffect = null;

	  this.expirationTime = NoWork;

	  this.alternate = null;

	  if (enableProfilerTimer) {
	    this.actualDuration = 0;
	    this.actualStartTime = 0;
	    this.selfBaseTime = 0;
	    this.treeBaseTime = 0;
	  }

	  {
	    this._debugID = debugCounter++;
	    this._debugSource = null;
	    this._debugOwner = null;
	    this._debugIsCurrentlyTiming = false;
	    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
	      Object.preventExtensions(this);
	    }
	  }
	}

	// This is a constructor function, rather than a POJO constructor, still
	// please ensure we do the following:
	// 1) Nobody should add any instance methods on this. Instance methods can be
	//    more difficult to predict when they get optimized and they are almost
	//    never inlined properly in static compilers.
	// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
	//    always know when it is a fiber.
	// 3) We might want to experiment with using numeric keys since they are easier
	//    to optimize in a non-JIT environment.
	// 4) We can easily go from a constructor to a createFiber object literal if that
	//    is faster.
	// 5) It should be easy to port this to a C struct and keep a C implementation
	//    compatible.
	var createFiber = function (tag, pendingProps, key, mode) {
	  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
	  return new FiberNode(tag, pendingProps, key, mode);
	};

	function shouldConstruct(Component) {
	  return !!(Component.prototype && Component.prototype.isReactComponent);
	}

	// This is used to create an alternate fiber to do work on.
	function createWorkInProgress(current, pendingProps, expirationTime) {
	  var workInProgress = current.alternate;
	  if (workInProgress === null) {
	    // We use a double buffering pooling technique because we know that we'll
	    // only ever need at most two versions of a tree. We pool the "other" unused
	    // node that we're free to reuse. This is lazily created to avoid allocating
	    // extra objects for things that are never updated. It also allow us to
	    // reclaim the extra memory if needed.
	    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
	    workInProgress.type = current.type;
	    workInProgress.stateNode = current.stateNode;

	    {
	      // DEV-only fields
	      workInProgress._debugID = current._debugID;
	      workInProgress._debugSource = current._debugSource;
	      workInProgress._debugOwner = current._debugOwner;
	    }

	    workInProgress.alternate = current;
	    current.alternate = workInProgress;
	  } else {
	    workInProgress.pendingProps = pendingProps;

	    // We already have an alternate.
	    // Reset the effect tag.
	    workInProgress.effectTag = NoEffect;

	    // The effect list is no longer valid.
	    workInProgress.nextEffect = null;
	    workInProgress.firstEffect = null;
	    workInProgress.lastEffect = null;

	    if (enableProfilerTimer) {
	      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
	      // This prevents time from endlessly accumulating in new commits.
	      // This has the downside of resetting values for different priority renders,
	      // But works for yielding (the common case) and should support resuming.
	      workInProgress.actualDuration = 0;
	      workInProgress.actualStartTime = 0;
	    }
	  }

	  workInProgress.expirationTime = expirationTime;

	  workInProgress.child = current.child;
	  workInProgress.memoizedProps = current.memoizedProps;
	  workInProgress.memoizedState = current.memoizedState;
	  workInProgress.updateQueue = current.updateQueue;

	  // These will be overridden during the parent's reconciliation
	  workInProgress.sibling = current.sibling;
	  workInProgress.index = current.index;
	  workInProgress.ref = current.ref;

	  if (enableProfilerTimer) {
	    workInProgress.selfBaseTime = current.selfBaseTime;
	    workInProgress.treeBaseTime = current.treeBaseTime;
	  }

	  return workInProgress;
	}

	function createHostRootFiber(isAsync) {
	  var mode = isAsync ? AsyncMode | StrictMode : NoContext;
	  return createFiber(HostRoot, null, null, mode);
	}

	function createFiberFromElement(element, mode, expirationTime) {
	  var owner = null;
	  {
	    owner = element._owner;
	  }

	  var fiber = void 0;
	  var type = element.type;
	  var key = element.key;
	  var pendingProps = element.props;

	  var fiberTag = void 0;
	  if (typeof type === 'function') {
	    fiberTag = shouldConstruct(type) ? ClassComponent : IndeterminateComponent;
	  } else if (typeof type === 'string') {
	    fiberTag = HostComponent;
	  } else {
	    switch (type) {
	      case REACT_FRAGMENT_TYPE:
	        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
	      case REACT_ASYNC_MODE_TYPE:
	        fiberTag = Mode;
	        mode |= AsyncMode | StrictMode;
	        break;
	      case REACT_STRICT_MODE_TYPE:
	        fiberTag = Mode;
	        mode |= StrictMode;
	        break;
	      case REACT_PROFILER_TYPE:
	        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
	      case REACT_TIMEOUT_TYPE:
	        fiberTag = TimeoutComponent;
	        // Suspense does not require async, but its children should be strict
	        // mode compatible.
	        mode |= StrictMode;
	        break;
	      default:
	        fiberTag = getFiberTagFromObjectType(type, owner);
	        break;
	    }
	  }

	  fiber = createFiber(fiberTag, pendingProps, key, mode);
	  fiber.type = type;
	  fiber.expirationTime = expirationTime;

	  {
	    fiber._debugSource = element._source;
	    fiber._debugOwner = element._owner;
	  }

	  return fiber;
	}

	function getFiberTagFromObjectType(type, owner) {
	  var $$typeof = typeof type === 'object' && type !== null ? type.$$typeof : null;

	  switch ($$typeof) {
	    case REACT_PROVIDER_TYPE:
	      return ContextProvider;
	    case REACT_CONTEXT_TYPE:
	      // This is a consumer
	      return ContextConsumer;
	    case REACT_FORWARD_REF_TYPE:
	      return ForwardRef;
	    default:
	      {
	        var info = '';
	        {
	          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
	            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
	          }
	          var ownerName = owner ? getComponentName(owner) : null;
	          if (ownerName) {
	            info += '\n\nCheck the render method of `' + ownerName + '`.';
	          }
	        }
	        invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
	      }
	  }
	}

	function createFiberFromFragment(elements, mode, expirationTime, key) {
	  var fiber = createFiber(Fragment, elements, key, mode);
	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
	  {
	    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
	      invariant(false, 'Profiler must specify an "id" string and "onRender" function as props');
	    }
	  }

	  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
	  fiber.type = REACT_PROFILER_TYPE;
	  fiber.expirationTime = expirationTime;

	  return fiber;
	}

	function createFiberFromText(content, mode, expirationTime) {
	  var fiber = createFiber(HostText, content, null, mode);
	  fiber.expirationTime = expirationTime;
	  return fiber;
	}

	function createFiberFromHostInstanceForDeletion() {
	  var fiber = createFiber(HostComponent, null, null, NoContext);
	  fiber.type = 'DELETED';
	  return fiber;
	}

	function createFiberFromPortal(portal, mode, expirationTime) {
	  var pendingProps = portal.children !== null ? portal.children : [];
	  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
	  fiber.expirationTime = expirationTime;
	  fiber.stateNode = {
	    containerInfo: portal.containerInfo,
	    pendingChildren: null, // Used by persistent updates
	    implementation: portal.implementation
	  };
	  return fiber;
	}

	// Used for stashing WIP properties to replay failed work in DEV.
	function assignFiberPropertiesInDEV(target, source) {
	  if (target === null) {
	    // This Fiber's initial properties will always be overwritten.
	    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
	    target = createFiber(IndeterminateComponent, null, null, NoContext);
	  }

	  // This is intentionally written as a list of all properties.
	  // We tried to use Object.assign() instead but this is called in
	  // the hottest path, and Object.assign() was too slow:
	  // https://github.com/facebook/react/issues/12502
	  // This code is DEV-only so size is not a concern.

	  target.tag = source.tag;
	  target.key = source.key;
	  target.type = source.type;
	  target.stateNode = source.stateNode;
	  target.return = source.return;
	  target.child = source.child;
	  target.sibling = source.sibling;
	  target.index = source.index;
	  target.ref = source.ref;
	  target.pendingProps = source.pendingProps;
	  target.memoizedProps = source.memoizedProps;
	  target.updateQueue = source.updateQueue;
	  target.memoizedState = source.memoizedState;
	  target.mode = source.mode;
	  target.effectTag = source.effectTag;
	  target.nextEffect = source.nextEffect;
	  target.firstEffect = source.firstEffect;
	  target.lastEffect = source.lastEffect;
	  target.expirationTime = source.expirationTime;
	  target.alternate = source.alternate;
	  if (enableProfilerTimer) {
	    target.actualDuration = source.actualDuration;
	    target.actualStartTime = source.actualStartTime;
	    target.selfBaseTime = source.selfBaseTime;
	    target.treeBaseTime = source.treeBaseTime;
	  }
	  target._debugID = source._debugID;
	  target._debugSource = source._debugSource;
	  target._debugOwner = source._debugOwner;
	  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
	  return target;
	}

	// TODO: This should be lifted into the renderer.


	function createFiberRoot(containerInfo, isAsync, hydrate) {
	  // Cyclic construction. This cheats the type system right now because
	  // stateNode is any.
	  var uninitializedFiber = createHostRootFiber(isAsync);
	  var root = {
	    current: uninitializedFiber,
	    containerInfo: containerInfo,
	    pendingChildren: null,

	    earliestPendingTime: NoWork,
	    latestPendingTime: NoWork,
	    earliestSuspendedTime: NoWork,
	    latestSuspendedTime: NoWork,
	    latestPingedTime: NoWork,

	    pendingCommitExpirationTime: NoWork,
	    finishedWork: null,
	    context: null,
	    pendingContext: null,
	    hydrate: hydrate,
	    remainingExpirationTime: NoWork,
	    firstBatch: null,
	    nextScheduledRoot: null
	  };
	  uninitializedFiber.stateNode = root;
	  return root;
	}

	var onCommitFiberRoot = null;
	var onCommitFiberUnmount = null;
	var hasLoggedError = false;

	function catchErrors(fn) {
	  return function (arg) {
	    try {
	      return fn(arg);
	    } catch (err) {
	      if (true && !hasLoggedError) {
	        hasLoggedError = true;
	        warning(false, 'React DevTools encountered an error: %s', err);
	      }
	    }
	  };
	}

	function injectInternals(internals) {
	  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	    // No DevTools
	    return false;
	  }
	  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
	  if (hook.isDisabled) {
	    // This isn't a real property on the hook, but it can be set to opt out
	    // of DevTools integration and associated warnings and logs.
	    // https://github.com/facebook/react/issues/3877
	    return true;
	  }
	  if (!hook.supportsFiber) {
	    {
	      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
	    }
	    // DevTools exists, even though it doesn't support Fiber.
	    return true;
	  }
	  try {
	    var rendererID = hook.inject(internals);
	    // We have successfully injected, so now it is safe to set up hooks.
	    onCommitFiberRoot = catchErrors(function (root) {
	      return hook.onCommitFiberRoot(rendererID, root);
	    });
	    onCommitFiberUnmount = catchErrors(function (fiber) {
	      return hook.onCommitFiberUnmount(rendererID, fiber);
	    });
	  } catch (err) {
	    // Catch all errors because it is unsafe to throw during initialization.
	    {
	      warning(false, 'React DevTools encountered an error: %s.', err);
	    }
	  }
	  // DevTools exists
	  return true;
	}

	function onCommitRoot(root) {
	  if (typeof onCommitFiberRoot === 'function') {
	    onCommitFiberRoot(root);
	  }
	}

	function onCommitUnmount(fiber) {
	  if (typeof onCommitFiberUnmount === 'function') {
	    onCommitFiberUnmount(fiber);
	  }
	}

	/**
	 * Forked from fbjs/warning:
	 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
	 *
	 * Only change is we use console.warn instead of console.error,
	 * and do nothing when 'console' is not supported.
	 * This really simplifies the code.
	 * ---
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var lowPriorityWarning = function () {};

	{
	  var printWarning = function (format) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    var argIndex = 0;
	    var message = 'Warning: ' + format.replace(/%s/g, function () {
	      return args[argIndex++];
	    });
	    if (typeof console !== 'undefined') {
	      console.warn(message);
	    }
	    try {
	      // --- Welcome to debugging React ---
	      // This error was thrown as a convenience so that you can use this stack
	      // to find the callsite that caused this warning to fire.
	      throw new Error(message);
	    } catch (x) {}
	  };

	  lowPriorityWarning = function (condition, format) {
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	    if (!condition) {
	      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	        args[_key2 - 2] = arguments[_key2];
	      }

	      printWarning.apply(undefined, [format].concat(args));
	    }
	  };
	}

	var lowPriorityWarning$1 = lowPriorityWarning;

	var ReactStrictModeWarnings = {
	  discardPendingWarnings: function () {},
	  flushPendingDeprecationWarnings: function () {},
	  flushPendingUnsafeLifecycleWarnings: function () {},
	  recordDeprecationWarnings: function (fiber, instance) {},
	  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
	  recordLegacyContextWarning: function (fiber, instance) {},
	  flushLegacyContextWarning: function () {}
	};

	{
	  var LIFECYCLE_SUGGESTIONS = {
	    UNSAFE_componentWillMount: 'componentDidMount',
	    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
	    UNSAFE_componentWillUpdate: 'componentDidUpdate'
	  };

	  var pendingComponentWillMountWarnings = [];
	  var pendingComponentWillReceivePropsWarnings = [];
	  var pendingComponentWillUpdateWarnings = [];
	  var pendingUnsafeLifecycleWarnings = new Map();
	  var pendingLegacyContextWarning = new Map();

	  // Tracks components we have already warned about.
	  var didWarnAboutDeprecatedLifecycles = new Set();
	  var didWarnAboutUnsafeLifecycles = new Set();
	  var didWarnAboutLegacyContext = new Set();

	  var setToSortedString = function (set) {
	    var array = [];
	    set.forEach(function (value) {
	      array.push(value);
	    });
	    return array.sort().join(', ');
	  };

	  ReactStrictModeWarnings.discardPendingWarnings = function () {
	    pendingComponentWillMountWarnings = [];
	    pendingComponentWillReceivePropsWarnings = [];
	    pendingComponentWillUpdateWarnings = [];
	    pendingUnsafeLifecycleWarnings = new Map();
	    pendingLegacyContextWarning = new Map();
	  };

	  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
	    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
	      var lifecyclesWarningMesages = [];

	      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
	        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
	        if (lifecycleWarnings.length > 0) {
	          var componentNames = new Set();
	          lifecycleWarnings.forEach(function (fiber) {
	            componentNames.add(getComponentName(fiber) || 'Component');
	            didWarnAboutUnsafeLifecycles.add(fiber.type);
	          });

	          var formatted = lifecycle.replace('UNSAFE_', '');
	          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
	          var sortedComponentNames = setToSortedString(componentNames);

	          lifecyclesWarningMesages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
	        }
	      });

	      if (lifecyclesWarningMesages.length > 0) {
	        var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

	        warning(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMesages.join('\n\n'));
	      }
	    });

	    pendingUnsafeLifecycleWarnings = new Map();
	  };

	  var findStrictRoot = function (fiber) {
	    var maybeStrictRoot = null;

	    var node = fiber;
	    while (node !== null) {
	      if (node.mode & StrictMode) {
	        maybeStrictRoot = node;
	      }
	      node = node.return;
	    }

	    return maybeStrictRoot;
	  };

	  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
	    if (pendingComponentWillMountWarnings.length > 0) {
	      var uniqueNames = new Set();
	      pendingComponentWillMountWarnings.forEach(function (fiber) {
	        uniqueNames.add(getComponentName(fiber) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var sortedNames = setToSortedString(uniqueNames);

	      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

	      pendingComponentWillMountWarnings = [];
	    }

	    if (pendingComponentWillReceivePropsWarnings.length > 0) {
	      var _uniqueNames = new Set();
	      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
	        _uniqueNames.add(getComponentName(fiber) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var _sortedNames = setToSortedString(_uniqueNames);

	      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

	      pendingComponentWillReceivePropsWarnings = [];
	    }

	    if (pendingComponentWillUpdateWarnings.length > 0) {
	      var _uniqueNames2 = new Set();
	      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
	        _uniqueNames2.add(getComponentName(fiber) || 'Component');
	        didWarnAboutDeprecatedLifecycles.add(fiber.type);
	      });

	      var _sortedNames2 = setToSortedString(_uniqueNames2);

	      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

	      pendingComponentWillUpdateWarnings = [];
	    }
	  };

	  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
	    // Dedup strategy: Warn once per component.
	    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
	      return;
	    }

	    // Don't warn about react-lifecycles-compat polyfilled components.
	    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
	      pendingComponentWillMountWarnings.push(fiber);
	    }
	    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
	      pendingComponentWillReceivePropsWarnings.push(fiber);
	    }
	    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
	      pendingComponentWillUpdateWarnings.push(fiber);
	    }
	  };

	  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
	    var strictRoot = findStrictRoot(fiber);
	    if (strictRoot === null) {
	      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
	      return;
	    }

	    // Dedup strategy: Warn once per component.
	    // This is difficult to track any other way since component names
	    // are often vague and are likely to collide between 3rd party libraries.
	    // An expand property is probably okay to use here since it's DEV-only,
	    // and will only be set in the event of serious warnings.
	    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
	      return;
	    }

	    var warningsForRoot = void 0;
	    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
	      warningsForRoot = {
	        UNSAFE_componentWillMount: [],
	        UNSAFE_componentWillReceiveProps: [],
	        UNSAFE_componentWillUpdate: []
	      };

	      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
	    } else {
	      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
	    }

	    var unsafeLifecycles = [];
	    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillMount');
	    }
	    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
	    }
	    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
	      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
	    }

	    if (unsafeLifecycles.length > 0) {
	      unsafeLifecycles.forEach(function (lifecycle) {
	        warningsForRoot[lifecycle].push(fiber);
	      });
	    }
	  };

	  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
	    var strictRoot = findStrictRoot(fiber);
	    if (strictRoot === null) {
	      warning(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
	      return;
	    }

	    // Dedup strategy: Warn once per component.
	    if (didWarnAboutLegacyContext.has(fiber.type)) {
	      return;
	    }

	    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

	    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
	      if (warningsForRoot === undefined) {
	        warningsForRoot = [];
	        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
	      }
	      warningsForRoot.push(fiber);
	    }
	  };

	  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
	    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
	      var uniqueNames = new Set();
	      fiberArray.forEach(function (fiber) {
	        uniqueNames.add(getComponentName(fiber) || 'Component');
	        didWarnAboutLegacyContext.add(fiber.type);
	      });

	      var sortedNames = setToSortedString(uniqueNames);
	      var strictRootComponentStack = getStackAddendumByWorkInProgressFiber(strictRoot);

	      warning(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
	    });
	  };
	}

	// This lets us hook into Fiber to debug what it's doing.
	// See https://github.com/facebook/react/pull/8033.
	// This is not part of the public API, not even for React DevTools.
	// You may only inject a debugTool if you work on React Fiber itself.
	var ReactFiberInstrumentation = {
	  debugTool: null
	};

	var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

	// TODO: Offscreen updates

	function markPendingPriorityLevel(root, expirationTime) {
	  if (enableSuspense) {
	    // Update the latest and earliest pending times
	    var earliestPendingTime = root.earliestPendingTime;
	    if (earliestPendingTime === NoWork) {
	      // No other pending updates.
	      root.earliestPendingTime = root.latestPendingTime = expirationTime;
	    } else {
	      if (earliestPendingTime > expirationTime) {
	        // This is the earliest pending update.
	        root.earliestPendingTime = expirationTime;
	      } else {
	        var latestPendingTime = root.latestPendingTime;
	        if (latestPendingTime < expirationTime) {
	          // This is the latest pending update
	          root.latestPendingTime = expirationTime;
	        }
	      }
	    }
	  }
	}

	function markCommittedPriorityLevels(root, currentTime, earliestRemainingTime) {
	  if (enableSuspense) {
	    if (earliestRemainingTime === NoWork) {
	      // Fast path. There's no remaining work. Clear everything.
	      root.earliestPendingTime = NoWork;
	      root.latestPendingTime = NoWork;
	      root.earliestSuspendedTime = NoWork;
	      root.latestSuspendedTime = NoWork;
	      root.latestPingedTime = NoWork;
	      return;
	    }

	    // Let's see if the previous latest known pending level was just flushed.
	    var latestPendingTime = root.latestPendingTime;
	    if (latestPendingTime !== NoWork) {
	      if (latestPendingTime < earliestRemainingTime) {
	        // We've flushed all the known pending levels.
	        root.earliestPendingTime = root.latestPendingTime = NoWork;
	      } else {
	        var earliestPendingTime = root.earliestPendingTime;
	        if (earliestPendingTime < earliestRemainingTime) {
	          // We've flushed the earliest known pending level. Set this to the
	          // latest pending time.
	          root.earliestPendingTime = root.latestPendingTime;
	        }
	      }
	    }

	    // Now let's handle the earliest remaining level in the whole tree. We need to
	    // decide whether to treat it as a pending level or as suspended. Check
	    // it falls within the range of known suspended levels.

	    var earliestSuspendedTime = root.earliestSuspendedTime;
	    if (earliestSuspendedTime === NoWork) {
	      // There's no suspended work. Treat the earliest remaining level as a
	      // pending level.
	      markPendingPriorityLevel(root, earliestRemainingTime);
	      return;
	    }

	    var latestSuspendedTime = root.latestSuspendedTime;
	    if (earliestRemainingTime > latestSuspendedTime) {
	      // The earliest remaining level is later than all the suspended work. That
	      // means we've flushed all the suspended work.
	      root.earliestSuspendedTime = NoWork;
	      root.latestSuspendedTime = NoWork;
	      root.latestPingedTime = NoWork;

	      // There's no suspended work. Treat the earliest remaining level as a
	      // pending level.
	      markPendingPriorityLevel(root, earliestRemainingTime);
	      return;
	    }

	    if (earliestRemainingTime < earliestSuspendedTime) {
	      // The earliest remaining time is earlier than all the suspended work.
	      // Treat it as a pending update.
	      markPendingPriorityLevel(root, earliestRemainingTime);
	      return;
	    }

	    // The earliest remaining time falls within the range of known suspended
	    // levels. We should treat this as suspended work.
	  }
	}

	function markSuspendedPriorityLevel(root, suspendedTime) {
	  if (enableSuspense) {
	    // First, check the known pending levels and update them if needed.
	    var earliestPendingTime = root.earliestPendingTime;
	    var latestPendingTime = root.latestPendingTime;
	    if (earliestPendingTime === suspendedTime) {
	      if (latestPendingTime === suspendedTime) {
	        // Both known pending levels were suspended. Clear them.
	        root.earliestPendingTime = root.latestPendingTime = NoWork;
	      } else {
	        // The earliest pending level was suspended. Clear by setting it to the
	        // latest pending level.
	        root.earliestPendingTime = latestPendingTime;
	      }
	    } else if (latestPendingTime === suspendedTime) {
	      // The latest pending level was suspended. Clear by setting it to the
	      // latest pending level.
	      root.latestPendingTime = earliestPendingTime;
	    }

	    // Next, if we're working on the lowest known suspended level, clear the ping.
	    // TODO: What if a promise suspends and pings before the root completes?
	    var latestSuspendedTime = root.latestSuspendedTime;
	    if (latestSuspendedTime === suspendedTime) {
	      root.latestPingedTime = NoWork;
	    }

	    // Finally, update the known suspended levels.
	    var earliestSuspendedTime = root.earliestSuspendedTime;
	    if (earliestSuspendedTime === NoWork) {
	      // No other suspended levels.
	      root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
	    } else {
	      if (earliestSuspendedTime > suspendedTime) {
	        // This is the earliest suspended level.
	        root.earliestSuspendedTime = suspendedTime;
	      } else if (latestSuspendedTime < suspendedTime) {
	        // This is the latest suspended level
	        root.latestSuspendedTime = suspendedTime;
	      }
	    }
	  }
	}

	function markPingedPriorityLevel(root, pingedTime) {
	  if (enableSuspense) {
	    var latestSuspendedTime = root.latestSuspendedTime;
	    if (latestSuspendedTime !== NoWork && latestSuspendedTime <= pingedTime) {
	      var latestPingedTime = root.latestPingedTime;
	      if (latestPingedTime === NoWork || latestPingedTime < pingedTime) {
	        root.latestPingedTime = pingedTime;
	      }
	    }
	  }
	}

	function findNextPendingPriorityLevel(root) {
	  if (enableSuspense) {
	    var earliestSuspendedTime = root.earliestSuspendedTime;
	    var earliestPendingTime = root.earliestPendingTime;
	    if (earliestSuspendedTime === NoWork) {
	      // Fast path. There's no suspended work.
	      return earliestPendingTime;
	    }

	    // First, check if there's known pending work.
	    if (earliestPendingTime !== NoWork) {
	      return earliestPendingTime;
	    }

	    // Finally, if a suspended level was pinged, work on that. Otherwise there's
	    // nothing to work on.
	    return root.latestPingedTime;
	  } else {
	    return root.current.expirationTime;
	  }
	}

	// UpdateQueue is a linked list of prioritized updates.
	//
	// Like fibers, update queues come in pairs: a current queue, which represents
	// the visible state of the screen, and a work-in-progress queue, which is
	// can be mutated and processed asynchronously before it is committed — a form
	// of double buffering. If a work-in-progress render is discarded before
	// finishing, we create a new work-in-progress by cloning the current queue.
	//
	// Both queues share a persistent, singly-linked list structure. To schedule an
	// update, we append it to the end of both queues. Each queue maintains a
	// pointer to first update in the persistent list that hasn't been processed.
	// The work-in-progress pointer always has a position equal to or greater than
	// the current queue, since we always work on that one. The current queue's
	// pointer is only updated during the commit phase, when we swap in the
	// work-in-progress.
	//
	// For example:
	//
	//   Current pointer:           A - B - C - D - E - F
	//   Work-in-progress pointer:              D - E - F
	//                                          ^
	//                                          The work-in-progress queue has
	//                                          processed more updates than current.
	//
	// The reason we append to both queues is because otherwise we might drop
	// updates without ever processing them. For example, if we only add updates to
	// the work-in-progress queue, some updates could be lost whenever a work-in
	// -progress render restarts by cloning from current. Similarly, if we only add
	// updates to the current queue, the updates will be lost whenever an already
	// in-progress queue commits and swaps with the current queue. However, by
	// adding to both queues, we guarantee that the update will be part of the next
	// work-in-progress. (And because the work-in-progress queue becomes the
	// current queue once it commits, there's no danger of applying the same
	// update twice.)
	//
	// Prioritization
	// --------------
	//
	// Updates are not sorted by priority, but by insertion; new updates are always
	// appended to the end of the list.
	//
	// The priority is still important, though. When processing the update queue
	// during the render phase, only the updates with sufficient priority are
	// included in the result. If we skip an update because it has insufficient
	// priority, it remains in the queue to be processed later, during a lower
	// priority render. Crucially, all updates subsequent to a skipped update also
	// remain in the queue *regardless of their priority*. That means high priority
	// updates are sometimes processed twice, at two separate priorities. We also
	// keep track of a base state, that represents the state before the first
	// update in the queue is applied.
	//
	// For example:
	//
	//   Given a base state of '', and the following queue of updates
	//
	//     A1 - B2 - C1 - D2
	//
	//   where the number indicates the priority, and the update is applied to the
	//   previous state by appending a letter, React will process these updates as
	//   two separate renders, one per distinct priority level:
	//
	//   First render, at priority 1:
	//     Base state: ''
	//     Updates: [A1, C1]
	//     Result state: 'AC'
	//
	//   Second render, at priority 2:
	//     Base state: 'A'            <-  The base state does not include C1,
	//                                    because B2 was skipped.
	//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
	//     Result state: 'ABCD'
	//
	// Because we process updates in insertion order, and rebase high priority
	// updates when preceding updates are skipped, the final result is deterministic
	// regardless of priority. Intermediate state may vary according to system
	// resources, but the final state is always the same.

	var UpdateState = 0;
	var ReplaceState = 1;
	var ForceUpdate = 2;
	var CaptureUpdate = 3;

	// Global state that is reset at the beginning of calling `processUpdateQueue`.
	// It should only be read right after calling `processUpdateQueue`, via
	// `checkHasForceUpdateAfterProcessing`.
	var hasForceUpdate = false;

	var didWarnUpdateInsideUpdate = void 0;
	var currentlyProcessingQueue = void 0;
	var resetCurrentlyProcessingQueue = void 0;
	{
	  didWarnUpdateInsideUpdate = false;
	  currentlyProcessingQueue = null;
	  resetCurrentlyProcessingQueue = function () {
	    currentlyProcessingQueue = null;
	  };
	}

	function createUpdateQueue(baseState) {
	  var queue = {
	    expirationTime: NoWork,
	    baseState: baseState,
	    firstUpdate: null,
	    lastUpdate: null,
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,
	    firstEffect: null,
	    lastEffect: null,
	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	  return queue;
	}

	function cloneUpdateQueue(currentQueue) {
	  var queue = {
	    expirationTime: currentQueue.expirationTime,
	    baseState: currentQueue.baseState,
	    firstUpdate: currentQueue.firstUpdate,
	    lastUpdate: currentQueue.lastUpdate,

	    // TODO: With resuming, if we bail out and resuse the child tree, we should
	    // keep these effects.
	    firstCapturedUpdate: null,
	    lastCapturedUpdate: null,

	    firstEffect: null,
	    lastEffect: null,

	    firstCapturedEffect: null,
	    lastCapturedEffect: null
	  };
	  return queue;
	}

	function createUpdate(expirationTime) {
	  return {
	    expirationTime: expirationTime,

	    tag: UpdateState,
	    payload: null,
	    callback: null,

	    next: null,
	    nextEffect: null
	  };
	}

	function appendUpdateToQueue(queue, update, expirationTime) {
	  // Append the update to the end of the list.
	  if (queue.lastUpdate === null) {
	    // Queue is empty
	    queue.firstUpdate = queue.lastUpdate = update;
	  } else {
	    queue.lastUpdate.next = update;
	    queue.lastUpdate = update;
	  }
	  if (queue.expirationTime === NoWork || queue.expirationTime > expirationTime) {
	    // The incoming update has the earliest expiration of any update in the
	    // queue. Update the queue's expiration time.
	    queue.expirationTime = expirationTime;
	  }
	}

	function enqueueUpdate(fiber, update, expirationTime) {
	  // Update queues are created lazily.
	  var alternate = fiber.alternate;
	  var queue1 = void 0;
	  var queue2 = void 0;
	  if (alternate === null) {
	    // There's only one fiber.
	    queue1 = fiber.updateQueue;
	    queue2 = null;
	    if (queue1 === null) {
	      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
	    }
	  } else {
	    // There are two owners.
	    queue1 = fiber.updateQueue;
	    queue2 = alternate.updateQueue;
	    if (queue1 === null) {
	      if (queue2 === null) {
	        // Neither fiber has an update queue. Create new ones.
	        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
	        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
	      } else {
	        // Only one fiber has an update queue. Clone to create a new one.
	        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
	      }
	    } else {
	      if (queue2 === null) {
	        // Only one fiber has an update queue. Clone to create a new one.
	        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
	      } else {
	        // Both owners have an update queue.
	      }
	    }
	  }
	  if (queue2 === null || queue1 === queue2) {
	    // There's only a single queue.
	    appendUpdateToQueue(queue1, update, expirationTime);
	  } else {
	    // There are two queues. We need to append the update to both queues,
	    // while accounting for the persistent structure of the list — we don't
	    // want the same update to be added multiple times.
	    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
	      // One of the queues is not empty. We must add the update to both queues.
	      appendUpdateToQueue(queue1, update, expirationTime);
	      appendUpdateToQueue(queue2, update, expirationTime);
	    } else {
	      // Both queues are non-empty. The last update is the same in both lists,
	      // because of structural sharing. So, only append to one of the lists.
	      appendUpdateToQueue(queue1, update, expirationTime);
	      // But we still need to update the `lastUpdate` pointer of queue2.
	      queue2.lastUpdate = update;
	    }
	  }

	  {
	    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
	      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
	      didWarnUpdateInsideUpdate = true;
	    }
	  }
	}

	function enqueueCapturedUpdate(workInProgress, update, renderExpirationTime) {
	  // Captured updates go into a separate list, and only on the work-in-
	  // progress queue.
	  var workInProgressQueue = workInProgress.updateQueue;
	  if (workInProgressQueue === null) {
	    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
	  } else {
	    // TODO: I put this here rather than createWorkInProgress so that we don't
	    // clone the queue unnecessarily. There's probably a better way to
	    // structure this.
	    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
	  }

	  // Append the update to the end of the list.
	  if (workInProgressQueue.lastCapturedUpdate === null) {
	    // This is the first render phase update
	    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
	  } else {
	    workInProgressQueue.lastCapturedUpdate.next = update;
	    workInProgressQueue.lastCapturedUpdate = update;
	  }
	  if (workInProgressQueue.expirationTime === NoWork || workInProgressQueue.expirationTime > renderExpirationTime) {
	    // The incoming update has the earliest expiration of any update in the
	    // queue. Update the queue's expiration time.
	    workInProgressQueue.expirationTime = renderExpirationTime;
	  }
	}

	function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
	  var current = workInProgress.alternate;
	  if (current !== null) {
	    // If the work-in-progress queue is equal to the current queue,
	    // we need to clone it first.
	    if (queue === current.updateQueue) {
	      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
	    }
	  }
	  return queue;
	}

	function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
	  switch (update.tag) {
	    case ReplaceState:
	      {
	        var _payload = update.payload;
	        if (typeof _payload === 'function') {
	          // Updater function
	          {
	            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	              _payload.call(instance, prevState, nextProps);
	            }
	          }
	          return _payload.call(instance, prevState, nextProps);
	        }
	        // State object
	        return _payload;
	      }
	    case CaptureUpdate:
	      {
	        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
	      }
	    // Intentional fallthrough
	    case UpdateState:
	      {
	        var _payload2 = update.payload;
	        var partialState = void 0;
	        if (typeof _payload2 === 'function') {
	          // Updater function
	          {
	            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	              _payload2.call(instance, prevState, nextProps);
	            }
	          }
	          partialState = _payload2.call(instance, prevState, nextProps);
	        } else {
	          // Partial state object
	          partialState = _payload2;
	        }
	        if (partialState === null || partialState === undefined) {
	          // Null and undefined are treated as no-ops.
	          return prevState;
	        }
	        // Merge the partial state and the previous state.
	        return _assign({}, prevState, partialState);
	      }
	    case ForceUpdate:
	      {
	        hasForceUpdate = true;
	        return prevState;
	      }
	  }
	  return prevState;
	}

	function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
	  hasForceUpdate = false;

	  if (queue.expirationTime === NoWork || queue.expirationTime > renderExpirationTime) {
	    // Insufficient priority. Bailout.
	    return;
	  }

	  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

	  {
	    currentlyProcessingQueue = queue;
	  }

	  // These values may change as we process the queue.
	  var newBaseState = queue.baseState;
	  var newFirstUpdate = null;
	  var newExpirationTime = NoWork;

	  // Iterate through the list of updates to compute the result.
	  var update = queue.firstUpdate;
	  var resultState = newBaseState;
	  while (update !== null) {
	    var updateExpirationTime = update.expirationTime;
	    if (updateExpirationTime > renderExpirationTime) {
	      // This update does not have sufficient priority. Skip it.
	      if (newFirstUpdate === null) {
	        // This is the first skipped update. It will be the first update in
	        // the new list.
	        newFirstUpdate = update;
	        // Since this is the first update that was skipped, the current result
	        // is the new base state.
	        newBaseState = resultState;
	      }
	      // Since this update will remain in the list, update the remaining
	      // expiration time.
	      if (newExpirationTime === NoWork || newExpirationTime > updateExpirationTime) {
	        newExpirationTime = updateExpirationTime;
	      }
	    } else {
	      // This update does have sufficient priority. Process it and compute
	      // a new result.
	      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
	      var _callback = update.callback;
	      if (_callback !== null) {
	        workInProgress.effectTag |= Callback;
	        // Set this to null, in case it was mutated during an aborted render.
	        update.nextEffect = null;
	        if (queue.lastEffect === null) {
	          queue.firstEffect = queue.lastEffect = update;
	        } else {
	          queue.lastEffect.nextEffect = update;
	          queue.lastEffect = update;
	        }
	      }
	    }
	    // Continue to the next update.
	    update = update.next;
	  }

	  // Separately, iterate though the list of captured updates.
	  var newFirstCapturedUpdate = null;
	  update = queue.firstCapturedUpdate;
	  while (update !== null) {
	    var _updateExpirationTime = update.expirationTime;
	    if (_updateExpirationTime > renderExpirationTime) {
	      // This update does not have sufficient priority. Skip it.
	      if (newFirstCapturedUpdate === null) {
	        // This is the first skipped captured update. It will be the first
	        // update in the new list.
	        newFirstCapturedUpdate = update;
	        // If this is the first update that was skipped, the current result is
	        // the new base state.
	        if (newFirstUpdate === null) {
	          newBaseState = resultState;
	        }
	      }
	      // Since this update will remain in the list, update the remaining
	      // expiration time.
	      if (newExpirationTime === NoWork || newExpirationTime > _updateExpirationTime) {
	        newExpirationTime = _updateExpirationTime;
	      }
	    } else {
	      // This update does have sufficient priority. Process it and compute
	      // a new result.
	      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
	      var _callback2 = update.callback;
	      if (_callback2 !== null) {
	        workInProgress.effectTag |= Callback;
	        // Set this to null, in case it was mutated during an aborted render.
	        update.nextEffect = null;
	        if (queue.lastCapturedEffect === null) {
	          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
	        } else {
	          queue.lastCapturedEffect.nextEffect = update;
	          queue.lastCapturedEffect = update;
	        }
	      }
	    }
	    update = update.next;
	  }

	  if (newFirstUpdate === null) {
	    queue.lastUpdate = null;
	  }
	  if (newFirstCapturedUpdate === null) {
	    queue.lastCapturedUpdate = null;
	  } else {
	    workInProgress.effectTag |= Callback;
	  }
	  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
	    // We processed every update, without skipping. That means the new base
	    // state is the same as the result state.
	    newBaseState = resultState;
	  }

	  queue.baseState = newBaseState;
	  queue.firstUpdate = newFirstUpdate;
	  queue.firstCapturedUpdate = newFirstCapturedUpdate;
	  queue.expirationTime = newExpirationTime;

	  workInProgress.memoizedState = resultState;

	  {
	    currentlyProcessingQueue = null;
	  }
	}

	function callCallback(callback, context) {
	  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
	  callback.call(context);
	}

	function resetHasForceUpdateBeforeProcessing() {
	  hasForceUpdate = false;
	}

	function checkHasForceUpdateAfterProcessing() {
	  return hasForceUpdate;
	}

	function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
	  // If the finished render included captured updates, and there are still
	  // lower priority updates left over, we need to keep the captured updates
	  // in the queue so that they are rebased and not dropped once we process the
	  // queue again at the lower priority.
	  if (finishedQueue.firstCapturedUpdate !== null) {
	    // Join the captured update list to the end of the normal list.
	    if (finishedQueue.lastUpdate !== null) {
	      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
	      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
	    }
	    // Clear the list of captured updates.
	    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
	  }

	  // Commit the effects
	  var effect = finishedQueue.firstEffect;
	  finishedQueue.firstEffect = finishedQueue.lastEffect = null;
	  while (effect !== null) {
	    var _callback3 = effect.callback;
	    if (_callback3 !== null) {
	      effect.callback = null;
	      callCallback(_callback3, instance);
	    }
	    effect = effect.nextEffect;
	  }

	  effect = finishedQueue.firstCapturedEffect;
	  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
	  while (effect !== null) {
	    var _callback4 = effect.callback;
	    if (_callback4 !== null) {
	      effect.callback = null;
	      callCallback(_callback4, instance);
	    }
	    effect = effect.nextEffect;
	  }
	}

	function createCapturedValue(value, source) {
	  // If the value is an error, call this function immediately after it is thrown
	  // so the stack is accurate.
	  return {
	    value: value,
	    source: source,
	    stack: getStackAddendumByWorkInProgressFiber(source)
	  };
	}

	var providerCursor = createCursor(null);
	var valueCursor = createCursor(null);
	var changedBitsCursor = createCursor(0);

	var rendererSigil = void 0;
	{
	  // Use this to detect multiple renderers using the same context
	  rendererSigil = {};
	}

	function pushProvider(providerFiber) {
	  var context = providerFiber.type._context;

	  if (isPrimaryRenderer) {
	    push(changedBitsCursor, context._changedBits, providerFiber);
	    push(valueCursor, context._currentValue, providerFiber);
	    push(providerCursor, providerFiber, providerFiber);

	    context._currentValue = providerFiber.pendingProps.value;
	    context._changedBits = providerFiber.stateNode;
	    {
	      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
	      context._currentRenderer = rendererSigil;
	    }
	  } else {
	    push(changedBitsCursor, context._changedBits2, providerFiber);
	    push(valueCursor, context._currentValue2, providerFiber);
	    push(providerCursor, providerFiber, providerFiber);

	    context._currentValue2 = providerFiber.pendingProps.value;
	    context._changedBits2 = providerFiber.stateNode;
	    {
	      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warning(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
	      context._currentRenderer2 = rendererSigil;
	    }
	  }
	}

	function popProvider(providerFiber) {
	  var changedBits = changedBitsCursor.current;
	  var currentValue = valueCursor.current;

	  pop(providerCursor, providerFiber);
	  pop(valueCursor, providerFiber);
	  pop(changedBitsCursor, providerFiber);

	  var context = providerFiber.type._context;
	  if (isPrimaryRenderer) {
	    context._currentValue = currentValue;
	    context._changedBits = changedBits;
	  } else {
	    context._currentValue2 = currentValue;
	    context._changedBits2 = changedBits;
	  }
	}

	function getContextCurrentValue(context) {
	  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
	}

	function getContextChangedBits(context) {
	  return isPrimaryRenderer ? context._changedBits : context._changedBits2;
	}

	var NO_CONTEXT = {};

	var contextStackCursor$1 = createCursor(NO_CONTEXT);
	var contextFiberStackCursor = createCursor(NO_CONTEXT);
	var rootInstanceStackCursor = createCursor(NO_CONTEXT);

	function requiredContext(c) {
	  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  return c;
	}

	function getRootHostContainer() {
	  var rootInstance = requiredContext(rootInstanceStackCursor.current);
	  return rootInstance;
	}

	function pushHostContainer(fiber, nextRootInstance) {
	  // Push current root instance onto the stack;
	  // This allows us to reset root when portals are popped.
	  push(rootInstanceStackCursor, nextRootInstance, fiber);
	  // Track the context and the Fiber that provided it.
	  // This enables us to pop only Fibers that provide unique contexts.
	  push(contextFiberStackCursor, fiber, fiber);

	  // Finally, we need to push the host context to the stack.
	  // However, we can't just call getRootHostContext() and push it because
	  // we'd have a different number of entries on the stack depending on
	  // whether getRootHostContext() throws somewhere in renderer code or not.
	  // So we push an empty value first. This lets us safely unwind on errors.
	  push(contextStackCursor$1, NO_CONTEXT, fiber);
	  var nextRootContext = getRootHostContext(nextRootInstance);
	  // Now that we know this function doesn't throw, replace it.
	  pop(contextStackCursor$1, fiber);
	  push(contextStackCursor$1, nextRootContext, fiber);
	}

	function popHostContainer(fiber) {
	  pop(contextStackCursor$1, fiber);
	  pop(contextFiberStackCursor, fiber);
	  pop(rootInstanceStackCursor, fiber);
	}

	function getHostContext() {
	  var context = requiredContext(contextStackCursor$1.current);
	  return context;
	}

	function pushHostContext(fiber) {
	  var rootInstance = requiredContext(rootInstanceStackCursor.current);
	  var context = requiredContext(contextStackCursor$1.current);
	  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

	  // Don't push this Fiber's context unless it's unique.
	  if (context === nextContext) {
	    return;
	  }

	  // Track the context and the Fiber that provided it.
	  // This enables us to pop only Fibers that provide unique contexts.
	  push(contextFiberStackCursor, fiber, fiber);
	  push(contextStackCursor$1, nextContext, fiber);
	}

	function popHostContext(fiber) {
	  // Do not pop unless this Fiber provided the current context.
	  // pushHostContext() only pushes Fibers that provide unique contexts.
	  if (contextFiberStackCursor.current !== fiber) {
	    return;
	  }

	  pop(contextStackCursor$1, fiber);
	  pop(contextFiberStackCursor, fiber);
	}

	var commitTime = 0;

	function getCommitTime() {
	  return commitTime;
	}

	function recordCommitTime() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  commitTime = now();
	}

	/**
	 * The "actual" render time is total time required to render the descendants of a Profiler component.
	 * This time is stored as a stack, since Profilers can be nested.
	 * This time is started during the "begin" phase and stopped during the "complete" phase.
	 * It is paused (and accumulated) in the event of an interruption or an aborted render.
	 */

	var fiberStack$1 = void 0;

	{
	  fiberStack$1 = [];
	}

	var timerPausedAt = 0;
	var totalElapsedPauseTime = 0;

	function checkActualRenderTimeStackEmpty() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    !(fiberStack$1.length === 0) ? warning(false, 'Expected an empty stack. Something was not reset properly.') : void 0;
	  }
	}

	function markActualRenderTimeStarted(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    fiberStack$1.push(fiber);
	  }

	  fiber.actualDuration = now() - fiber.actualDuration - totalElapsedPauseTime;
	  fiber.actualStartTime = now();
	}

	function pauseActualRenderTimerIfRunning() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  if (timerPausedAt === 0) {
	    timerPausedAt = now();
	  }
	}

	function recordElapsedActualRenderTime(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    !(fiber === fiberStack$1.pop()) ? warning(false, 'Unexpected Fiber (%s) popped.', getComponentName(fiber)) : void 0;
	  }

	  fiber.actualDuration = now() - totalElapsedPauseTime - fiber.actualDuration;
	}

	function resetActualRenderTimer() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  totalElapsedPauseTime = 0;
	}

	function resumeActualRenderTimerIfPaused() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  if (timerPausedAt > 0) {
	    totalElapsedPauseTime += now() - timerPausedAt;
	    timerPausedAt = 0;
	  }
	}

	/**
	 * The "base" render time is the duration of the “begin” phase of work for a particular fiber.
	 * This time is measured and stored on each fiber.
	 * The time for all sibling fibers are accumulated and stored on their parent during the "complete" phase.
	 * If a fiber bails out (sCU false) then its "base" timer is cancelled and the fiber is not updated.
	 */

	var baseStartTime = -1;

	function recordElapsedBaseRenderTimeIfRunning(fiber) {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  if (baseStartTime !== -1) {
	    fiber.selfBaseTime = now() - baseStartTime;
	  }
	}

	function startBaseRenderTimer() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  {
	    if (baseStartTime !== -1) {
	      warning(false, 'Cannot start base timer that is already running. ' + 'This error is likely caused by a bug in React. ' + 'Please file an issue.');
	    }
	  }
	  baseStartTime = now();
	}

	function stopBaseRenderTimerIfRunning() {
	  if (!enableProfilerTimer) {
	    return;
	  }
	  baseStartTime = -1;
	}

	var fakeInternalInstance = {};
	var isArray = Array.isArray;

	var didWarnAboutStateAssignmentForComponent = void 0;
	var didWarnAboutUninitializedState = void 0;
	var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
	var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
	var didWarnAboutUndefinedDerivedState = void 0;
	var warnOnUndefinedDerivedState = void 0;
	var warnOnInvalidCallback$1 = void 0;

	{
	  didWarnAboutStateAssignmentForComponent = new Set();
	  didWarnAboutUninitializedState = new Set();
	  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
	  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
	  didWarnAboutUndefinedDerivedState = new Set();

	  var didWarnOnInvalidCallback = new Set();

	  warnOnInvalidCallback$1 = function (callback, callerName) {
	    if (callback === null || typeof callback === 'function') {
	      return;
	    }
	    var key = callerName + '_' + callback;
	    if (!didWarnOnInvalidCallback.has(key)) {
	      didWarnOnInvalidCallback.add(key);
	      warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
	    }
	  };

	  warnOnUndefinedDerivedState = function (workInProgress, partialState) {
	    if (partialState === undefined) {
	      var componentName = getComponentName(workInProgress) || 'Component';
	      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
	        didWarnAboutUndefinedDerivedState.add(componentName);
	        warning(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
	      }
	    }
	  };

	  // This is so gross but it's at least non-critical and can be removed if
	  // it causes problems. This is meant to give a nicer error message for
	  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
	  // ...)) which otherwise throws a "_processChildContext is not a function"
	  // exception.
	  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
	    enumerable: false,
	    value: function () {
	      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
	    }
	  });
	  Object.freeze(fakeInternalInstance);
	}

	function applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, nextProps) {
	  var prevState = workInProgress.memoizedState;

	  {
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      // Invoke the function an extra time to help detect side-effects.
	      getDerivedStateFromProps(nextProps, prevState);
	    }
	  }

	  var partialState = getDerivedStateFromProps(nextProps, prevState);

	  {
	    warnOnUndefinedDerivedState(workInProgress, partialState);
	  }
	  // Merge the partial state and the previous state.
	  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
	  workInProgress.memoizedState = memoizedState;

	  // Once the update queue is empty, persist the derived state onto the
	  // base state.
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null && updateQueue.expirationTime === NoWork) {
	    updateQueue.baseState = memoizedState;
	  }
	}

	var classComponentUpdater = {
	  isMounted: isMounted,
	  enqueueSetState: function (inst, payload, callback) {
	    var fiber = get(inst);
	    var currentTime = recalculateCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.payload = payload;
	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'setState');
	      }
	      update.callback = callback;
	    }

	    enqueueUpdate(fiber, update, expirationTime);
	    scheduleWork$1(fiber, expirationTime);
	  },
	  enqueueReplaceState: function (inst, payload, callback) {
	    var fiber = get(inst);
	    var currentTime = recalculateCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.tag = ReplaceState;
	    update.payload = payload;

	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'replaceState');
	      }
	      update.callback = callback;
	    }

	    enqueueUpdate(fiber, update, expirationTime);
	    scheduleWork$1(fiber, expirationTime);
	  },
	  enqueueForceUpdate: function (inst, callback) {
	    var fiber = get(inst);
	    var currentTime = recalculateCurrentTime();
	    var expirationTime = computeExpirationForFiber(currentTime, fiber);

	    var update = createUpdate(expirationTime);
	    update.tag = ForceUpdate;

	    if (callback !== undefined && callback !== null) {
	      {
	        warnOnInvalidCallback$1(callback, 'forceUpdate');
	      }
	      update.callback = callback;
	    }

	    enqueueUpdate(fiber, update, expirationTime);
	    scheduleWork$1(fiber, expirationTime);
	  }
	};

	function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
	  var instance = workInProgress.stateNode;
	  var ctor = workInProgress.type;
	  if (typeof instance.shouldComponentUpdate === 'function') {
	    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
	    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
	    stopPhaseTimer();

	    {
	      !(shouldUpdate !== undefined) ? warning(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Component') : void 0;
	    }

	    return shouldUpdate;
	  }

	  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
	    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
	  }

	  return true;
	}

	function checkClassInstance(workInProgress) {
	  var instance = workInProgress.stateNode;
	  var type = workInProgress.type;
	  {
	    var name = getComponentName(workInProgress) || 'Component';
	    var renderPresent = instance.render;

	    if (!renderPresent) {
	      if (type.prototype && typeof type.prototype.render === 'function') {
	        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
	      } else {
	        warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
	      }
	    }

	    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
	    !noGetInitialStateOnES6 ? warning(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
	    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
	    !noGetDefaultPropsOnES6 ? warning(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
	    var noInstancePropTypes = !instance.propTypes;
	    !noInstancePropTypes ? warning(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
	    var noInstanceContextTypes = !instance.contextTypes;
	    !noInstanceContextTypes ? warning(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;
	    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
	    !noComponentShouldUpdate ? warning(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
	    if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
	      warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
	    }
	    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
	    !noComponentDidUnmount ? warning(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
	    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
	    !noComponentDidReceiveProps ? warning(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
	    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
	    !noComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
	    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
	    !noUnsafeComponentWillRecieveProps ? warning(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
	    var hasMutatedProps = instance.props !== workInProgress.pendingProps;
	    !(instance.props === undefined || !hasMutatedProps) ? warning(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
	    var noInstanceDefaultProps = !instance.defaultProps;
	    !noInstanceDefaultProps ? warning(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

	    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(type)) {
	      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(type);
	      warning(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(workInProgress));
	    }

	    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
	    !noInstanceGetDerivedStateFromProps ? warning(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
	    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromCatch !== 'function';
	    !noInstanceGetDerivedStateFromCatch ? warning(false, '%s: getDerivedStateFromCatch() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
	    var noStaticGetSnapshotBeforeUpdate = typeof type.getSnapshotBeforeUpdate !== 'function';
	    !noStaticGetSnapshotBeforeUpdate ? warning(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
	    var _state = instance.state;
	    if (_state && (typeof _state !== 'object' || isArray(_state))) {
	      warning(false, '%s.state: must be set to an object or null', name);
	    }
	    if (typeof instance.getChildContext === 'function') {
	      !(typeof type.childContextTypes === 'object') ? warning(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
	    }
	  }
	}

	function adoptClassInstance(workInProgress, instance) {
	  instance.updater = classComponentUpdater;
	  workInProgress.stateNode = instance;
	  // The instance needs access to the fiber so that it can schedule updates
	  set(instance, workInProgress);
	  {
	    instance._reactInternalInstance = fakeInternalInstance;
	  }
	}

	function constructClassInstance(workInProgress, props, renderExpirationTime) {
	  var ctor = workInProgress.type;
	  var unmaskedContext = getUnmaskedContext(workInProgress);
	  var needsContext = isContextConsumer(workInProgress);
	  var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;

	  // Instantiate twice to help detect side-effects.
	  {
	    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	      new ctor(props, context); // eslint-disable-line no-new
	    }
	  }

	  var instance = new ctor(props, context);
	  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
	  adoptClassInstance(workInProgress, instance);

	  {
	    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
	      var componentName = getComponentName(workInProgress) || 'Component';
	      if (!didWarnAboutUninitializedState.has(componentName)) {
	        didWarnAboutUninitializedState.add(componentName);
	        warning(false, '%s: Did not properly initialize state during construction. ' + 'Expected state to be an object, but it was %s.', componentName, instance.state === null ? 'null' : 'undefined');
	      }
	    }

	    // If new component APIs are defined, "unsafe" lifecycles won't be called.
	    // Warn about these lifecycles if they are present.
	    // Don't warn about react-lifecycles-compat polyfilled methods though.
	    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
	      var foundWillMountName = null;
	      var foundWillReceivePropsName = null;
	      var foundWillUpdateName = null;
	      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
	        foundWillMountName = 'componentWillMount';
	      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
	        foundWillMountName = 'UNSAFE_componentWillMount';
	      }
	      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
	        foundWillReceivePropsName = 'componentWillReceiveProps';
	      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
	      }
	      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
	        foundWillUpdateName = 'componentWillUpdate';
	      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
	        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
	      }
	      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
	        var _componentName = getComponentName(workInProgress) || 'Component';
	        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
	        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
	          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
	          warning(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
	        }
	      }
	    }
	  }

	  // Cache unmasked context so we can avoid recreating masked context unless necessary.
	  // ReactFiberContext usually updates this cache but can't for newly-created instances.
	  if (needsContext) {
	    cacheContext(workInProgress, unmaskedContext, context);
	  }

	  return instance;
	}

	function callComponentWillMount(workInProgress, instance) {
	  startPhaseTimer(workInProgress, 'componentWillMount');
	  var oldState = instance.state;

	  if (typeof instance.componentWillMount === 'function') {
	    instance.componentWillMount();
	  }
	  if (typeof instance.UNSAFE_componentWillMount === 'function') {
	    instance.UNSAFE_componentWillMount();
	  }

	  stopPhaseTimer();

	  if (oldState !== instance.state) {
	    {
	      warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress) || 'Component');
	    }
	    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
	  }
	}

	function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
	  var oldState = instance.state;
	  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
	  if (typeof instance.componentWillReceiveProps === 'function') {
	    instance.componentWillReceiveProps(newProps, newContext);
	  }
	  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
	    instance.UNSAFE_componentWillReceiveProps(newProps, newContext);
	  }
	  stopPhaseTimer();

	  if (instance.state !== oldState) {
	    {
	      var componentName = getComponentName(workInProgress) || 'Component';
	      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
	        didWarnAboutStateAssignmentForComponent.add(componentName);
	        warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
	      }
	    }
	    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
	  }
	}

	// Invokes the mount life-cycles on a previously never rendered instance.
	function mountClassInstance(workInProgress, renderExpirationTime) {
	  var ctor = workInProgress.type;

	  {
	    checkClassInstance(workInProgress);
	  }

	  var instance = workInProgress.stateNode;
	  var props = workInProgress.pendingProps;
	  var unmaskedContext = getUnmaskedContext(workInProgress);

	  instance.props = props;
	  instance.state = workInProgress.memoizedState;
	  instance.refs = emptyObject;
	  instance.context = getMaskedContext(workInProgress, unmaskedContext);

	  {
	    if (workInProgress.mode & StrictMode) {
	      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

	      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
	    }

	    if (warnAboutDeprecatedLifecycles) {
	      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
	    }
	  }

	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
	    instance.state = workInProgress.memoizedState;
	  }

	  var getDerivedStateFromProps = workInProgress.type.getDerivedStateFromProps;
	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
	    instance.state = workInProgress.memoizedState;
	  }

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
	    callComponentWillMount(workInProgress, instance);
	    // If we had additional state updates during this life-cycle, let's
	    // process them now.
	    updateQueue = workInProgress.updateQueue;
	    if (updateQueue !== null) {
	      processUpdateQueue(workInProgress, updateQueue, props, instance, renderExpirationTime);
	      instance.state = workInProgress.memoizedState;
	    }
	  }

	  if (typeof instance.componentDidMount === 'function') {
	    workInProgress.effectTag |= Update;
	  }
	}

	function resumeMountClassInstance(workInProgress, renderExpirationTime) {
	  var ctor = workInProgress.type;
	  var instance = workInProgress.stateNode;

	  var oldProps = workInProgress.memoizedProps;
	  var newProps = workInProgress.pendingProps;
	  instance.props = oldProps;

	  var oldContext = instance.context;
	  var newUnmaskedContext = getUnmaskedContext(workInProgress);
	  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

	  // Note: During these life-cycles, instance.props/instance.state are what
	  // ever the previously attempted to render - not the "current". However,
	  // during componentDidUpdate we pass the "current" props.

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
	    if (oldProps !== newProps || oldContext !== newContext) {
	      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
	    }
	  }

	  resetHasForceUpdateBeforeProcessing();

	  var oldState = workInProgress.memoizedState;
	  var newState = instance.state = oldState;
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    newState = workInProgress.memoizedState;
	  }
	  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	    return false;
	  }

	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
	    newState = workInProgress.memoizedState;
	  }

	  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

	  if (shouldUpdate) {
	    // In order to support react-lifecycles-compat polyfilled components,
	    // Unsafe lifecycles should not be invoked for components using the new APIs.
	    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
	      startPhaseTimer(workInProgress, 'componentWillMount');
	      if (typeof instance.componentWillMount === 'function') {
	        instance.componentWillMount();
	      }
	      if (typeof instance.UNSAFE_componentWillMount === 'function') {
	        instance.UNSAFE_componentWillMount();
	      }
	      stopPhaseTimer();
	    }
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	  } else {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidMount === 'function') {
	      workInProgress.effectTag |= Update;
	    }

	    // If shouldComponentUpdate returned false, we should still update the
	    // memoized state to indicate that this work can be reused.
	    workInProgress.memoizedProps = newProps;
	    workInProgress.memoizedState = newState;
	  }

	  // Update the existing instance's state, props, and context pointers even
	  // if shouldComponentUpdate returns false.
	  instance.props = newProps;
	  instance.state = newState;
	  instance.context = newContext;

	  return shouldUpdate;
	}

	// Invokes the update life-cycles and returns false if it shouldn't rerender.
	function updateClassInstance(current, workInProgress, renderExpirationTime) {
	  var ctor = workInProgress.type;
	  var instance = workInProgress.stateNode;

	  var oldProps = workInProgress.memoizedProps;
	  var newProps = workInProgress.pendingProps;
	  instance.props = oldProps;

	  var oldContext = instance.context;
	  var newUnmaskedContext = getUnmaskedContext(workInProgress);
	  var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

	  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
	  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

	  // Note: During these life-cycles, instance.props/instance.state are what
	  // ever the previously attempted to render - not the "current". However,
	  // during componentDidUpdate we pass the "current" props.

	  // In order to support react-lifecycles-compat polyfilled components,
	  // Unsafe lifecycles should not be invoked for components using the new APIs.
	  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
	    if (oldProps !== newProps || oldContext !== newContext) {
	      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
	    }
	  }

	  resetHasForceUpdateBeforeProcessing();

	  var oldState = workInProgress.memoizedState;
	  var newState = instance.state = oldState;
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
	    newState = workInProgress.memoizedState;
	  }

	  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Update;
	      }
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Snapshot;
	      }
	    }
	    return false;
	  }

	  if (typeof getDerivedStateFromProps === 'function') {
	    applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, newProps);
	    newState = workInProgress.memoizedState;
	  }

	  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

	  if (shouldUpdate) {
	    // In order to support react-lifecycles-compat polyfilled components,
	    // Unsafe lifecycles should not be invoked for components using the new APIs.
	    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
	      startPhaseTimer(workInProgress, 'componentWillUpdate');
	      if (typeof instance.componentWillUpdate === 'function') {
	        instance.componentWillUpdate(newProps, newState, newContext);
	      }
	      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
	        instance.UNSAFE_componentWillUpdate(newProps, newState, newContext);
	      }
	      stopPhaseTimer();
	    }
	    if (typeof instance.componentDidUpdate === 'function') {
	      workInProgress.effectTag |= Update;
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      workInProgress.effectTag |= Snapshot;
	    }
	  } else {
	    // If an update was already in progress, we should schedule an Update
	    // effect even though we're bailing out, so that cWU/cDU are called.
	    if (typeof instance.componentDidUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Update;
	      }
	    }
	    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
	      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
	        workInProgress.effectTag |= Snapshot;
	      }
	    }

	    // If shouldComponentUpdate returned false, we should still update the
	    // memoized props/state to indicate that this work can be reused.
	    workInProgress.memoizedProps = newProps;
	    workInProgress.memoizedState = newState;
	  }

	  // Update the existing instance's state, props, and context pointers even
	  // if shouldComponentUpdate returns false.
	  instance.props = newProps;
	  instance.state = newState;
	  instance.context = newContext;

	  return shouldUpdate;
	}

	var getCurrentFiberStackAddendum$7 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


	var didWarnAboutMaps = void 0;
	var didWarnAboutStringRefInStrictMode = void 0;
	var ownerHasKeyUseWarning = void 0;
	var ownerHasFunctionTypeWarning = void 0;
	var warnForMissingKey = function (child) {};

	{
	  didWarnAboutMaps = false;
	  didWarnAboutStringRefInStrictMode = {};

	  /**
	   * Warn if there's no key explicitly set on dynamic arrays of children or
	   * object keys are not valid. This allows us to keep track of children between
	   * updates.
	   */
	  ownerHasKeyUseWarning = {};
	  ownerHasFunctionTypeWarning = {};

	  warnForMissingKey = function (child) {
	    if (child === null || typeof child !== 'object') {
	      return;
	    }
	    if (!child._store || child._store.validated || child.key != null) {
	      return;
	    }
	    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	    child._store.validated = true;

	    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$7() || '');
	    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
	      return;
	    }
	    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

	    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$7());
	  };
	}

	var isArray$1 = Array.isArray;

	function coerceRef(returnFiber, current, element) {
	  var mixedRef = element.ref;
	  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
	    {
	      if (returnFiber.mode & StrictMode) {
	        var componentName = getComponentName(returnFiber) || 'Component';
	        if (!didWarnAboutStringRefInStrictMode[componentName]) {
	          warning(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackAddendumByWorkInProgressFiber(returnFiber));
	          didWarnAboutStringRefInStrictMode[componentName] = true;
	        }
	      }
	    }

	    if (element._owner) {
	      var owner = element._owner;
	      var inst = void 0;
	      if (owner) {
	        var ownerFiber = owner;
	        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
	        inst = ownerFiber.stateNode;
	      }
	      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
	      var stringRef = '' + mixedRef;
	      // Check if previous string ref matches new string ref
	      if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
	        return current.ref;
	      }
	      var ref = function (value) {
	        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	        if (value === null) {
	          delete refs[stringRef];
	        } else {
	          refs[stringRef] = value;
	        }
	      };
	      ref._stringRef = stringRef;
	      return ref;
	    } else {
	      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
	      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a functional component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
	    }
	  }
	  return mixedRef;
	}

	function throwOnInvalidObjectType(returnFiber, newChild) {
	  if (returnFiber.type !== 'textarea') {
	    var addendum = '';
	    {
	      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$7() || '');
	    }
	    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
	  }
	}

	function warnOnFunctionType() {
	  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$7() || '');

	  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
	    return;
	  }
	  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

	  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$7() || '');
	}

	// This wrapper function exists because I expect to clone the code in each path
	// to be able to optimize each path individually by branching early. This needs
	// a compiler or we can do it manually. Helpers that don't need this branching
	// live outside of this function.
	function ChildReconciler(shouldTrackSideEffects) {
	  function deleteChild(returnFiber, childToDelete) {
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return;
	    }
	    // Deletions are added in reversed order so we add it to the front.
	    // At this point, the return fiber's effect list is empty except for
	    // deletions, so we can just append the deletion to the list. The remaining
	    // effects aren't added until the complete phase. Once we implement
	    // resuming, this may not be true.
	    var last = returnFiber.lastEffect;
	    if (last !== null) {
	      last.nextEffect = childToDelete;
	      returnFiber.lastEffect = childToDelete;
	    } else {
	      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
	    }
	    childToDelete.nextEffect = null;
	    childToDelete.effectTag = Deletion;
	  }

	  function deleteRemainingChildren(returnFiber, currentFirstChild) {
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return null;
	    }

	    // TODO: For the shouldClone case, this could be micro-optimized a bit by
	    // assuming that after the first child we've already added everything.
	    var childToDelete = currentFirstChild;
	    while (childToDelete !== null) {
	      deleteChild(returnFiber, childToDelete);
	      childToDelete = childToDelete.sibling;
	    }
	    return null;
	  }

	  function mapRemainingChildren(returnFiber, currentFirstChild) {
	    // Add the remaining children to a temporary map so that we can find them by
	    // keys quickly. Implicit (null) keys get added to this set with their index
	    var existingChildren = new Map();

	    var existingChild = currentFirstChild;
	    while (existingChild !== null) {
	      if (existingChild.key !== null) {
	        existingChildren.set(existingChild.key, existingChild);
	      } else {
	        existingChildren.set(existingChild.index, existingChild);
	      }
	      existingChild = existingChild.sibling;
	    }
	    return existingChildren;
	  }

	  function useFiber(fiber, pendingProps, expirationTime) {
	    // We currently set sibling to null and index to 0 here because it is easy
	    // to forget to do before returning it. E.g. for the single child case.
	    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
	    clone.index = 0;
	    clone.sibling = null;
	    return clone;
	  }

	  function placeChild(newFiber, lastPlacedIndex, newIndex) {
	    newFiber.index = newIndex;
	    if (!shouldTrackSideEffects) {
	      // Noop.
	      return lastPlacedIndex;
	    }
	    var current = newFiber.alternate;
	    if (current !== null) {
	      var oldIndex = current.index;
	      if (oldIndex < lastPlacedIndex) {
	        // This is a move.
	        newFiber.effectTag = Placement;
	        return lastPlacedIndex;
	      } else {
	        // This item can stay in place.
	        return oldIndex;
	      }
	    } else {
	      // This is an insertion.
	      newFiber.effectTag = Placement;
	      return lastPlacedIndex;
	    }
	  }

	  function placeSingleChild(newFiber) {
	    // This is simpler for the single child case. We only need to do a
	    // placement for inserting new children.
	    if (shouldTrackSideEffects && newFiber.alternate === null) {
	      newFiber.effectTag = Placement;
	    }
	    return newFiber;
	  }

	  function updateTextNode(returnFiber, current, textContent, expirationTime) {
	    if (current === null || current.tag !== HostText) {
	      // Insert
	      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current, textContent, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function updateElement(returnFiber, current, element, expirationTime) {
	    if (current !== null && current.type === element.type) {
	      // Move based on index
	      var existing = useFiber(current, element.props, expirationTime);
	      existing.ref = coerceRef(returnFiber, current, element);
	      existing.return = returnFiber;
	      {
	        existing._debugSource = element._source;
	        existing._debugOwner = element._owner;
	      }
	      return existing;
	    } else {
	      // Insert
	      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
	      created.ref = coerceRef(returnFiber, current, element);
	      created.return = returnFiber;
	      return created;
	    }
	  }

	  function updatePortal(returnFiber, current, portal, expirationTime) {
	    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
	      // Insert
	      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current, portal.children || [], expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
	    if (current === null || current.tag !== Fragment) {
	      // Insert
	      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
	      created.return = returnFiber;
	      return created;
	    } else {
	      // Update
	      var existing = useFiber(current, fragment, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	  }

	  function createChild(returnFiber, newChild, expirationTime) {
	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys. If the previous node is implicitly keyed
	      // we can continue to replace it without aborting even if it is not a text
	      // node.
	      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
	      created.return = returnFiber;
	      return created;
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
	            _created.ref = coerceRef(returnFiber, null, newChild);
	            _created.return = returnFiber;
	            return _created;
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
	            _created2.return = returnFiber;
	            return _created2;
	          }
	      }

	      if (isArray$1(newChild) || getIteratorFn(newChild)) {
	        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
	        _created3.return = returnFiber;
	        return _created3;
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
	    // Update the fiber if the keys match, otherwise return null.

	    var key = oldFiber !== null ? oldFiber.key : null;

	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys. If the previous node is implicitly keyed
	      // we can continue to replace it without aborting even if it is not a text
	      // node.
	      if (key !== null) {
	        return null;
	      }
	      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            if (newChild.key === key) {
	              if (newChild.type === REACT_FRAGMENT_TYPE) {
	                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
	              }
	              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
	            } else {
	              return null;
	            }
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            if (newChild.key === key) {
	              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
	            } else {
	              return null;
	            }
	          }
	      }

	      if (isArray$1(newChild) || getIteratorFn(newChild)) {
	        if (key !== null) {
	          return null;
	        }

	        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      // Text nodes don't have keys, so we neither have to check the old nor
	      // new node for the key. If both are text nodes, they match.
	      var matchedFiber = existingChildren.get(newIdx) || null;
	      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
	    }

	    if (typeof newChild === 'object' && newChild !== null) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          {
	            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
	            if (newChild.type === REACT_FRAGMENT_TYPE) {
	              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
	            }
	            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
	          }
	        case REACT_PORTAL_TYPE:
	          {
	            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
	            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
	          }
	      }

	      if (isArray$1(newChild) || getIteratorFn(newChild)) {
	        var _matchedFiber3 = existingChildren.get(newIdx) || null;
	        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
	      }

	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }

	    return null;
	  }

	  /**
	   * Warns if there is a duplicate or missing key
	   */
	  function warnOnInvalidKey(child, knownKeys) {
	    {
	      if (typeof child !== 'object' || child === null) {
	        return knownKeys;
	      }
	      switch (child.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	        case REACT_PORTAL_TYPE:
	          warnForMissingKey(child);
	          var key = child.key;
	          if (typeof key !== 'string') {
	            break;
	          }
	          if (knownKeys === null) {
	            knownKeys = new Set();
	            knownKeys.add(key);
	            break;
	          }
	          if (!knownKeys.has(key)) {
	            knownKeys.add(key);
	            break;
	          }
	          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$7());
	          break;
	        default:
	          break;
	      }
	    }
	    return knownKeys;
	  }

	  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
	    // This algorithm can't optimize by searching from boths ends since we
	    // don't have backpointers on fibers. I'm trying to see how far we can get
	    // with that model. If it ends up not being worth the tradeoffs, we can
	    // add it later.

	    // Even with a two ended optimization, we'd want to optimize for the case
	    // where there are few changes and brute force the comparison instead of
	    // going for the Map. It'd like to explore hitting that path first in
	    // forward-only mode and only go for the Map once we notice that we need
	    // lots of look ahead. This doesn't handle reversal as well as two ended
	    // search but that's unusual. Besides, for the two ended optimization to
	    // work on Iterables, we'd need to copy the whole set.

	    // In this first iteration, we'll just live with hitting the bad case
	    // (adding everything to a Map) in for every insert/move.

	    // If you change this code, also update reconcileChildrenIterator() which
	    // uses the same algorithm.

	    {
	      // First, validate keys.
	      var knownKeys = null;
	      for (var i = 0; i < newChildren.length; i++) {
	        var child = newChildren[i];
	        knownKeys = warnOnInvalidKey(child, knownKeys);
	      }
	    }

	    var resultingFirstChild = null;
	    var previousNewFiber = null;

	    var oldFiber = currentFirstChild;
	    var lastPlacedIndex = 0;
	    var newIdx = 0;
	    var nextOldFiber = null;
	    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
	      if (oldFiber.index > newIdx) {
	        nextOldFiber = oldFiber;
	        oldFiber = null;
	      } else {
	        nextOldFiber = oldFiber.sibling;
	      }
	      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
	      if (newFiber === null) {
	        // TODO: This breaks on empty slots like null children. That's
	        // unfortunate because it triggers the slow path all the time. We need
	        // a better way to communicate whether this was a miss or null,
	        // boolean, undefined, etc.
	        if (oldFiber === null) {
	          oldFiber = nextOldFiber;
	        }
	        break;
	      }
	      if (shouldTrackSideEffects) {
	        if (oldFiber && newFiber.alternate === null) {
	          // We matched the slot, but we didn't reuse the existing fiber, so we
	          // need to delete the existing child.
	          deleteChild(returnFiber, oldFiber);
	        }
	      }
	      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
	      if (previousNewFiber === null) {
	        // TODO: Move out of the loop. This only happens for the first run.
	        resultingFirstChild = newFiber;
	      } else {
	        // TODO: Defer siblings if we're not at the right index for this slot.
	        // I.e. if we had null values before, then we want to defer this
	        // for each null value. However, we also don't want to call updateSlot
	        // with the previous one.
	        previousNewFiber.sibling = newFiber;
	      }
	      previousNewFiber = newFiber;
	      oldFiber = nextOldFiber;
	    }

	    if (newIdx === newChildren.length) {
	      // We've reached the end of the new children. We can delete the rest.
	      deleteRemainingChildren(returnFiber, oldFiber);
	      return resultingFirstChild;
	    }

	    if (oldFiber === null) {
	      // If we don't have any more existing children we can choose a fast path
	      // since the rest will all be insertions.
	      for (; newIdx < newChildren.length; newIdx++) {
	        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
	        if (!_newFiber) {
	          continue;
	        }
	        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          // TODO: Move out of the loop. This only happens for the first run.
	          resultingFirstChild = _newFiber;
	        } else {
	          previousNewFiber.sibling = _newFiber;
	        }
	        previousNewFiber = _newFiber;
	      }
	      return resultingFirstChild;
	    }

	    // Add all children to a key map for quick lookups.
	    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

	    // Keep scanning and use the map to restore deleted items as moves.
	    for (; newIdx < newChildren.length; newIdx++) {
	      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
	      if (_newFiber2) {
	        if (shouldTrackSideEffects) {
	          if (_newFiber2.alternate !== null) {
	            // The new fiber is a work in progress, but if there exists a
	            // current, that means that we reused the fiber. We need to delete
	            // it from the child list so that we don't add it to the deletion
	            // list.
	            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
	          }
	        }
	        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          resultingFirstChild = _newFiber2;
	        } else {
	          previousNewFiber.sibling = _newFiber2;
	        }
	        previousNewFiber = _newFiber2;
	      }
	    }

	    if (shouldTrackSideEffects) {
	      // Any existing children that weren't consumed above were deleted. We need
	      // to add them to the deletion list.
	      existingChildren.forEach(function (child) {
	        return deleteChild(returnFiber, child);
	      });
	    }

	    return resultingFirstChild;
	  }

	  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
	    // This is the same implementation as reconcileChildrenArray(),
	    // but using the iterator instead.

	    var iteratorFn = getIteratorFn(newChildrenIterable);
	    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	    {
	      // Warn about using Maps as children
	      if (newChildrenIterable.entries === iteratorFn) {
	        !didWarnAboutMaps ? warning(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$7()) : void 0;
	        didWarnAboutMaps = true;
	      }

	      // First, validate keys.
	      // We'll get a different iterator later for the main pass.
	      var _newChildren = iteratorFn.call(newChildrenIterable);
	      if (_newChildren) {
	        var knownKeys = null;
	        var _step = _newChildren.next();
	        for (; !_step.done; _step = _newChildren.next()) {
	          var child = _step.value;
	          knownKeys = warnOnInvalidKey(child, knownKeys);
	        }
	      }
	    }

	    var newChildren = iteratorFn.call(newChildrenIterable);
	    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

	    var resultingFirstChild = null;
	    var previousNewFiber = null;

	    var oldFiber = currentFirstChild;
	    var lastPlacedIndex = 0;
	    var newIdx = 0;
	    var nextOldFiber = null;

	    var step = newChildren.next();
	    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
	      if (oldFiber.index > newIdx) {
	        nextOldFiber = oldFiber;
	        oldFiber = null;
	      } else {
	        nextOldFiber = oldFiber.sibling;
	      }
	      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
	      if (newFiber === null) {
	        // TODO: This breaks on empty slots like null children. That's
	        // unfortunate because it triggers the slow path all the time. We need
	        // a better way to communicate whether this was a miss or null,
	        // boolean, undefined, etc.
	        if (!oldFiber) {
	          oldFiber = nextOldFiber;
	        }
	        break;
	      }
	      if (shouldTrackSideEffects) {
	        if (oldFiber && newFiber.alternate === null) {
	          // We matched the slot, but we didn't reuse the existing fiber, so we
	          // need to delete the existing child.
	          deleteChild(returnFiber, oldFiber);
	        }
	      }
	      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
	      if (previousNewFiber === null) {
	        // TODO: Move out of the loop. This only happens for the first run.
	        resultingFirstChild = newFiber;
	      } else {
	        // TODO: Defer siblings if we're not at the right index for this slot.
	        // I.e. if we had null values before, then we want to defer this
	        // for each null value. However, we also don't want to call updateSlot
	        // with the previous one.
	        previousNewFiber.sibling = newFiber;
	      }
	      previousNewFiber = newFiber;
	      oldFiber = nextOldFiber;
	    }

	    if (step.done) {
	      // We've reached the end of the new children. We can delete the rest.
	      deleteRemainingChildren(returnFiber, oldFiber);
	      return resultingFirstChild;
	    }

	    if (oldFiber === null) {
	      // If we don't have any more existing children we can choose a fast path
	      // since the rest will all be insertions.
	      for (; !step.done; newIdx++, step = newChildren.next()) {
	        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
	        if (_newFiber3 === null) {
	          continue;
	        }
	        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          // TODO: Move out of the loop. This only happens for the first run.
	          resultingFirstChild = _newFiber3;
	        } else {
	          previousNewFiber.sibling = _newFiber3;
	        }
	        previousNewFiber = _newFiber3;
	      }
	      return resultingFirstChild;
	    }

	    // Add all children to a key map for quick lookups.
	    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

	    // Keep scanning and use the map to restore deleted items as moves.
	    for (; !step.done; newIdx++, step = newChildren.next()) {
	      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
	      if (_newFiber4 !== null) {
	        if (shouldTrackSideEffects) {
	          if (_newFiber4.alternate !== null) {
	            // The new fiber is a work in progress, but if there exists a
	            // current, that means that we reused the fiber. We need to delete
	            // it from the child list so that we don't add it to the deletion
	            // list.
	            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
	          }
	        }
	        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
	        if (previousNewFiber === null) {
	          resultingFirstChild = _newFiber4;
	        } else {
	          previousNewFiber.sibling = _newFiber4;
	        }
	        previousNewFiber = _newFiber4;
	      }
	    }

	    if (shouldTrackSideEffects) {
	      // Any existing children that weren't consumed above were deleted. We need
	      // to add them to the deletion list.
	      existingChildren.forEach(function (child) {
	        return deleteChild(returnFiber, child);
	      });
	    }

	    return resultingFirstChild;
	  }

	  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
	    // There's no need to check for keys on text nodes since we don't have a
	    // way to define them.
	    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
	      // We already have an existing node so let's just update it and delete
	      // the rest.
	      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
	      var existing = useFiber(currentFirstChild, textContent, expirationTime);
	      existing.return = returnFiber;
	      return existing;
	    }
	    // The existing first child is not a text node so we need to create one
	    // and delete the existing ones.
	    deleteRemainingChildren(returnFiber, currentFirstChild);
	    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
	    created.return = returnFiber;
	    return created;
	  }

	  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
	    var key = element.key;
	    var child = currentFirstChild;
	    while (child !== null) {
	      // TODO: If key === null and child.key === null, then this only applies to
	      // the first item in the list.
	      if (child.key === key) {
	        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
	          deleteRemainingChildren(returnFiber, child.sibling);
	          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
	          existing.ref = coerceRef(returnFiber, child, element);
	          existing.return = returnFiber;
	          {
	            existing._debugSource = element._source;
	            existing._debugOwner = element._owner;
	          }
	          return existing;
	        } else {
	          deleteRemainingChildren(returnFiber, child);
	          break;
	        }
	      } else {
	        deleteChild(returnFiber, child);
	      }
	      child = child.sibling;
	    }

	    if (element.type === REACT_FRAGMENT_TYPE) {
	      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
	      created.return = returnFiber;
	      return created;
	    } else {
	      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
	      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
	      _created4.return = returnFiber;
	      return _created4;
	    }
	  }

	  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
	    var key = portal.key;
	    var child = currentFirstChild;
	    while (child !== null) {
	      // TODO: If key === null and child.key === null, then this only applies to
	      // the first item in the list.
	      if (child.key === key) {
	        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
	          deleteRemainingChildren(returnFiber, child.sibling);
	          var existing = useFiber(child, portal.children || [], expirationTime);
	          existing.return = returnFiber;
	          return existing;
	        } else {
	          deleteRemainingChildren(returnFiber, child);
	          break;
	        }
	      } else {
	        deleteChild(returnFiber, child);
	      }
	      child = child.sibling;
	    }

	    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
	    created.return = returnFiber;
	    return created;
	  }

	  // This API will tag the children with the side-effect of the reconciliation
	  // itself. They will be added to the side-effect list as we pass through the
	  // children and the parent.
	  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
	    // This function is not recursive.
	    // If the top level item is an array, we treat it as a set of children,
	    // not as a fragment. Nested arrays on the other hand will be treated as
	    // fragment nodes. Recursion happens at the normal flow.

	    // Handle top level unkeyed fragments as if they were arrays.
	    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
	    // We treat the ambiguous cases above the same.
	    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
	    if (isUnkeyedTopLevelFragment) {
	      newChild = newChild.props.children;
	    }

	    // Handle object types
	    var isObject = typeof newChild === 'object' && newChild !== null;

	    if (isObject) {
	      switch (newChild.$$typeof) {
	        case REACT_ELEMENT_TYPE:
	          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
	        case REACT_PORTAL_TYPE:
	          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
	      }
	    }

	    if (typeof newChild === 'string' || typeof newChild === 'number') {
	      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
	    }

	    if (isArray$1(newChild)) {
	      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
	    }

	    if (getIteratorFn(newChild)) {
	      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
	    }

	    if (isObject) {
	      throwOnInvalidObjectType(returnFiber, newChild);
	    }

	    {
	      if (typeof newChild === 'function') {
	        warnOnFunctionType();
	      }
	    }
	    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
	      // If the new child is undefined, and the return fiber is a composite
	      // component, throw an error. If Fiber return types are disabled,
	      // we already threw above.
	      switch (returnFiber.tag) {
	        case ClassComponent:
	          {
	            {
	              var instance = returnFiber.stateNode;
	              if (instance.render._isMockFunction) {
	                // We allow auto-mocks to proceed as if they're returning null.
	                break;
	              }
	            }
	          }
	        // Intentionally fall through to the next case, which handles both
	        // functions and classes
	        // eslint-disable-next-lined no-fallthrough
	        case FunctionalComponent:
	          {
	            var Component = returnFiber.type;
	            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
	          }
	      }
	    }

	    // Remaining cases are all treated as empty.
	    return deleteRemainingChildren(returnFiber, currentFirstChild);
	  }

	  return reconcileChildFibers;
	}

	var reconcileChildFibers = ChildReconciler(true);
	var mountChildFibers = ChildReconciler(false);

	function cloneChildFibers(current, workInProgress) {
	  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

	  if (workInProgress.child === null) {
	    return;
	  }

	  var currentChild = workInProgress.child;
	  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
	  workInProgress.child = newChild;

	  newChild.return = workInProgress;
	  while (currentChild.sibling !== null) {
	    currentChild = currentChild.sibling;
	    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
	    newChild.return = workInProgress;
	  }
	  newChild.sibling = null;
	}

	// The deepest Fiber on the stack involved in a hydration context.
	// This may have been an insertion or a hydration.
	var hydrationParentFiber = null;
	var nextHydratableInstance = null;
	var isHydrating = false;

	function enterHydrationState(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }

	  var parentInstance = fiber.stateNode.containerInfo;
	  nextHydratableInstance = getFirstHydratableChild(parentInstance);
	  hydrationParentFiber = fiber;
	  isHydrating = true;
	  return true;
	}

	function deleteHydratableInstance(returnFiber, instance) {
	  {
	    switch (returnFiber.tag) {
	      case HostRoot:
	        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
	        break;
	      case HostComponent:
	        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
	        break;
	    }
	  }

	  var childToDelete = createFiberFromHostInstanceForDeletion();
	  childToDelete.stateNode = instance;
	  childToDelete.return = returnFiber;
	  childToDelete.effectTag = Deletion;

	  // This might seem like it belongs on progressedFirstDeletion. However,
	  // these children are not part of the reconciliation list of children.
	  // Even if we abort and rereconcile the children, that will try to hydrate
	  // again and the nodes are still in the host tree so these will be
	  // recreated.
	  if (returnFiber.lastEffect !== null) {
	    returnFiber.lastEffect.nextEffect = childToDelete;
	    returnFiber.lastEffect = childToDelete;
	  } else {
	    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
	  }
	}

	function insertNonHydratedInstance(returnFiber, fiber) {
	  fiber.effectTag |= Placement;
	  {
	    switch (returnFiber.tag) {
	      case HostRoot:
	        {
	          var parentContainer = returnFiber.stateNode.containerInfo;
	          switch (fiber.tag) {
	            case HostComponent:
	              var type = fiber.type;
	              var props = fiber.pendingProps;
	              didNotFindHydratableContainerInstance(parentContainer, type, props);
	              break;
	            case HostText:
	              var text = fiber.pendingProps;
	              didNotFindHydratableContainerTextInstance(parentContainer, text);
	              break;
	          }
	          break;
	        }
	      case HostComponent:
	        {
	          var parentType = returnFiber.type;
	          var parentProps = returnFiber.memoizedProps;
	          var parentInstance = returnFiber.stateNode;
	          switch (fiber.tag) {
	            case HostComponent:
	              var _type = fiber.type;
	              var _props = fiber.pendingProps;
	              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
	              break;
	            case HostText:
	              var _text = fiber.pendingProps;
	              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
	              break;
	          }
	          break;
	        }
	      default:
	        return;
	    }
	  }
	}

	function tryHydrate(fiber, nextInstance) {
	  switch (fiber.tag) {
	    case HostComponent:
	      {
	        var type = fiber.type;
	        var props = fiber.pendingProps;
	        var instance = canHydrateInstance(nextInstance, type, props);
	        if (instance !== null) {
	          fiber.stateNode = instance;
	          return true;
	        }
	        return false;
	      }
	    case HostText:
	      {
	        var text = fiber.pendingProps;
	        var textInstance = canHydrateTextInstance(nextInstance, text);
	        if (textInstance !== null) {
	          fiber.stateNode = textInstance;
	          return true;
	        }
	        return false;
	      }
	    default:
	      return false;
	  }
	}

	function tryToClaimNextHydratableInstance(fiber) {
	  if (!isHydrating) {
	    return;
	  }
	  var nextInstance = nextHydratableInstance;
	  if (!nextInstance) {
	    // Nothing to hydrate. Make it an insertion.
	    insertNonHydratedInstance(hydrationParentFiber, fiber);
	    isHydrating = false;
	    hydrationParentFiber = fiber;
	    return;
	  }
	  var firstAttemptedInstance = nextInstance;
	  if (!tryHydrate(fiber, nextInstance)) {
	    // If we can't hydrate this instance let's try the next one.
	    // We use this as a heuristic. It's based on intuition and not data so it
	    // might be flawed or unnecessary.
	    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
	    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
	      // Nothing to hydrate. Make it an insertion.
	      insertNonHydratedInstance(hydrationParentFiber, fiber);
	      isHydrating = false;
	      hydrationParentFiber = fiber;
	      return;
	    }
	    // We matched the next one, we'll now assume that the first one was
	    // superfluous and we'll delete it. Since we can't eagerly delete it
	    // we'll have to schedule a deletion. To do that, this node needs a dummy
	    // fiber associated with it.
	    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
	  }
	  hydrationParentFiber = fiber;
	  nextHydratableInstance = getFirstHydratableChild(nextInstance);
	}

	function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  var instance = fiber.stateNode;
	  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
	  // TODO: Type this specific to this type of component.
	  fiber.updateQueue = updatePayload;
	  // If the update payload indicates that there is a change or if there
	  // is a new ref we mark this as an update.
	  if (updatePayload !== null) {
	    return true;
	  }
	  return false;
	}

	function prepareToHydrateHostTextInstance(fiber) {
	  if (!supportsHydration) {
	    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
	  }

	  var textInstance = fiber.stateNode;
	  var textContent = fiber.memoizedProps;
	  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
	  {
	    if (shouldUpdate) {
	      // We assume that prepareToHydrateHostTextInstance is called in a context where the
	      // hydration parent is the parent host component of this host text.
	      var returnFiber = hydrationParentFiber;
	      if (returnFiber !== null) {
	        switch (returnFiber.tag) {
	          case HostRoot:
	            {
	              var parentContainer = returnFiber.stateNode.containerInfo;
	              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
	              break;
	            }
	          case HostComponent:
	            {
	              var parentType = returnFiber.type;
	              var parentProps = returnFiber.memoizedProps;
	              var parentInstance = returnFiber.stateNode;
	              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
	              break;
	            }
	        }
	      }
	    }
	  }
	  return shouldUpdate;
	}

	function popToNextHostParent(fiber) {
	  var parent = fiber.return;
	  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
	    parent = parent.return;
	  }
	  hydrationParentFiber = parent;
	}

	function popHydrationState(fiber) {
	  if (!supportsHydration) {
	    return false;
	  }
	  if (fiber !== hydrationParentFiber) {
	    // We're deeper than the current hydration context, inside an inserted
	    // tree.
	    return false;
	  }
	  if (!isHydrating) {
	    // If we're not currently hydrating but we're in a hydration context, then
	    // we were an insertion and now need to pop up reenter hydration of our
	    // siblings.
	    popToNextHostParent(fiber);
	    isHydrating = true;
	    return false;
	  }

	  var type = fiber.type;

	  // If we have any remaining hydratable nodes, we need to delete them now.
	  // We only do this deeper than head and body since they tend to have random
	  // other nodes in them. We also ignore components with pure text content in
	  // side of them.
	  // TODO: Better heuristic.
	  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
	    var nextInstance = nextHydratableInstance;
	    while (nextInstance) {
	      deleteHydratableInstance(fiber, nextInstance);
	      nextInstance = getNextHydratableSibling(nextInstance);
	    }
	  }

	  popToNextHostParent(fiber);
	  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
	  return true;
	}

	function resetHydrationState() {
	  if (!supportsHydration) {
	    return;
	  }

	  hydrationParentFiber = null;
	  nextHydratableInstance = null;
	  isHydrating = false;
	}

	var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


	var didWarnAboutBadClass = void 0;
	var didWarnAboutGetDerivedStateOnFunctionalComponent = void 0;
	var didWarnAboutStatelessRefs = void 0;

	{
	  didWarnAboutBadClass = {};
	  didWarnAboutGetDerivedStateOnFunctionalComponent = {};
	  didWarnAboutStatelessRefs = {};
	}

	// TODO: Remove this and use reconcileChildrenAtExpirationTime directly.
	function reconcileChildren(current, workInProgress, nextChildren) {
	  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
	}

	function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
	  if (current === null) {
	    // If this is a fresh new component that hasn't been rendered yet, we
	    // won't update its child set by applying minimal side-effects. Instead,
	    // we will add them all to the child before it gets rendered. That means
	    // we can optimize this reconciliation pass by not tracking side-effects.
	    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	  } else {
	    // If the current child is the same as the work in progress, it means that
	    // we haven't yet started any work on these children. Therefore, we use
	    // the clone algorithm to create a copy of all the current children.

	    // If we had any progressed work already, that is invalid at this point so
	    // let's throw it out.
	    workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderExpirationTime);
	  }
	}

	function updateForwardRef(current, workInProgress) {
	  var render = workInProgress.type.render;
	  var nextProps = workInProgress.pendingProps;
	  var ref = workInProgress.ref;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (workInProgress.memoizedProps === nextProps) {
	    var currentRef = current !== null ? current.ref : null;
	    if (ref === currentRef) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	  }

	  var nextChildren = void 0;
	  {
	    ReactCurrentOwner.current = workInProgress;
	    ReactDebugCurrentFiber.setCurrentPhase('render');
	    nextChildren = render(nextProps, ref);
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }

	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function updateFragment(current, workInProgress) {
	  var nextChildren = workInProgress.pendingProps;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (workInProgress.memoizedProps === nextChildren) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextChildren);
	  return workInProgress.child;
	}

	function updateMode(current, workInProgress) {
	  var nextChildren = workInProgress.pendingProps.children;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextChildren);
	  return workInProgress.child;
	}

	function updateProfiler(current, workInProgress) {
	  var nextProps = workInProgress.pendingProps;
	  if (enableProfilerTimer) {
	    workInProgress.effectTag |= Update;
	  }
	  if (workInProgress.memoizedProps === nextProps) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  var nextChildren = nextProps.children;
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function markRef(current, workInProgress) {
	  var ref = workInProgress.ref;
	  if (current === null && ref !== null || current !== null && current.ref !== ref) {
	    // Schedule a Ref effect
	    workInProgress.effectTag |= Ref;
	  }
	}

	function updateFunctionalComponent(current, workInProgress) {
	  var fn = workInProgress.type;
	  var nextProps = workInProgress.pendingProps;

	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else {
	    if (workInProgress.memoizedProps === nextProps) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	    // TODO: consider bringing fn.shouldComponentUpdate() back.
	    // It used to be here.
	  }

	  var unmaskedContext = getUnmaskedContext(workInProgress);
	  var context = getMaskedContext(workInProgress, unmaskedContext);

	  var nextChildren = void 0;

	  {
	    ReactCurrentOwner.current = workInProgress;
	    ReactDebugCurrentFiber.setCurrentPhase('render');
	    nextChildren = fn(nextProps, context);
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }
	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function updateClassComponent(current, workInProgress, renderExpirationTime) {
	  // Push context providers early to prevent context stack mismatches.
	  // During mounting we don't know the child context yet as the instance doesn't exist.
	  // We will invalidate the child context in finishClassComponent() right after rendering.
	  var hasContext = pushContextProvider(workInProgress);
	  var shouldUpdate = void 0;
	  if (current === null) {
	    if (workInProgress.stateNode === null) {
	      // In the initial pass we might need to construct the instance.
	      constructClassInstance(workInProgress, workInProgress.pendingProps, renderExpirationTime);
	      mountClassInstance(workInProgress, renderExpirationTime);

	      shouldUpdate = true;
	    } else {
	      // In a resume, we'll already have an instance we can reuse.
	      shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
	    }
	  } else {
	    shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
	  }
	  return finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime);
	}

	function finishClassComponent(current, workInProgress, shouldUpdate, hasContext, renderExpirationTime) {
	  // Refs should update even if shouldComponentUpdate returns false
	  markRef(current, workInProgress);

	  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

	  if (!shouldUpdate && !didCaptureError) {
	    // Context providers should defer to sCU for rendering
	    if (hasContext) {
	      invalidateContextProvider(workInProgress, false);
	    }

	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }

	  var ctor = workInProgress.type;
	  var instance = workInProgress.stateNode;

	  // Rerender
	  ReactCurrentOwner.current = workInProgress;
	  var nextChildren = void 0;
	  if (didCaptureError && (!enableGetDerivedStateFromCatch || typeof ctor.getDerivedStateFromCatch !== 'function')) {
	    // If we captured an error, but getDerivedStateFrom catch is not defined,
	    // unmount all the children. componentDidCatch will schedule an update to
	    // re-render a fallback. This is temporary until we migrate everyone to
	    // the new API.
	    // TODO: Warn in a future release.
	    nextChildren = null;

	    if (enableProfilerTimer) {
	      stopBaseRenderTimerIfRunning();
	    }
	  } else {
	    {
	      ReactDebugCurrentFiber.setCurrentPhase('render');
	      nextChildren = instance.render();
	      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
	        instance.render();
	      }
	      ReactDebugCurrentFiber.setCurrentPhase(null);
	    }
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  if (didCaptureError) {
	    // If we're recovering from an error, reconcile twice: first to delete
	    // all the existing children.
	    reconcileChildrenAtExpirationTime(current, workInProgress, null, renderExpirationTime);
	    workInProgress.child = null;
	    // Now we can continue reconciling like normal. This has the effect of
	    // remounting all children regardless of whether their their
	    // identity matches.
	  }
	  reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);
	  // Memoize props and state using the values we just used to render.
	  // TODO: Restructure so we never read values from the instance.
	  memoizeState(workInProgress, instance.state);
	  memoizeProps(workInProgress, instance.props);

	  // The context might have changed so we need to recalculate it.
	  if (hasContext) {
	    invalidateContextProvider(workInProgress, true);
	  }

	  return workInProgress.child;
	}

	function pushHostRootContext(workInProgress) {
	  var root = workInProgress.stateNode;
	  if (root.pendingContext) {
	    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
	  } else if (root.context) {
	    // Should always be set
	    pushTopLevelContextObject(workInProgress, root.context, false);
	  }
	  pushHostContainer(workInProgress, root.containerInfo);
	}

	function updateHostRoot(current, workInProgress, renderExpirationTime) {
	  pushHostRootContext(workInProgress);
	  var updateQueue = workInProgress.updateQueue;
	  if (updateQueue !== null) {
	    var nextProps = workInProgress.pendingProps;
	    var prevState = workInProgress.memoizedState;
	    var prevChildren = prevState !== null ? prevState.element : null;
	    processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
	    var nextState = workInProgress.memoizedState;
	    // Caution: React DevTools currently depends on this property
	    // being called "element".
	    var nextChildren = nextState.element;

	    if (nextChildren === prevChildren) {
	      // If the state is the same as before, that's a bailout because we had
	      // no work that expires at this time.
	      resetHydrationState();
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	    var root = workInProgress.stateNode;
	    if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
	      // If we don't have any current children this might be the first pass.
	      // We always try to hydrate. If this isn't a hydration pass there won't
	      // be any children to hydrate which is effectively the same thing as
	      // not hydrating.

	      // This is a bit of a hack. We track the host root as a placement to
	      // know that we're currently in a mounting state. That way isMounted
	      // works as expected. We must reset this before committing.
	      // TODO: Delete this when we delete isMounted and findDOMNode.
	      workInProgress.effectTag |= Placement;

	      // Ensure that children mount into this root without tracking
	      // side-effects. This ensures that we don't store Placement effects on
	      // nodes that will be hydrated.
	      workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	    } else {
	      // Otherwise reset hydration state in case we aborted and resumed another
	      // root.
	      resetHydrationState();
	      reconcileChildren(current, workInProgress, nextChildren);
	    }
	    return workInProgress.child;
	  }
	  resetHydrationState();
	  // If there is no update queue, that's a bailout because the root has no props.
	  return bailoutOnAlreadyFinishedWork(current, workInProgress);
	}

	function updateHostComponent(current, workInProgress, renderExpirationTime) {
	  pushHostContext(workInProgress);

	  if (current === null) {
	    tryToClaimNextHydratableInstance(workInProgress);
	  }

	  var type = workInProgress.type;
	  var memoizedProps = workInProgress.memoizedProps;
	  var nextProps = workInProgress.pendingProps;
	  var prevProps = current !== null ? current.memoizedProps : null;

	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (memoizedProps === nextProps) {
	    var isHidden = workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps);
	    if (isHidden) {
	      // Before bailing out, make sure we've deprioritized a hidden component.
	      workInProgress.expirationTime = Never;
	    }
	    if (!isHidden || renderExpirationTime !== Never) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }
	    // If we're rendering a hidden node at hidden priority, don't bailout. The
	    // parent is complete, but the children may not be.
	  }

	  var nextChildren = nextProps.children;
	  var isDirectTextChild = shouldSetTextContent(type, nextProps);

	  if (isDirectTextChild) {
	    // We special case a direct text child of a host node. This is a common
	    // case. We won't handle it as a reified child. We will instead handle
	    // this in the host environment that also have access to this prop. That
	    // avoids allocating another HostText fiber and traversing it.
	    nextChildren = null;
	  } else if (prevProps && shouldSetTextContent(type, prevProps)) {
	    // If we're switching from a direct text child to a normal child, or to
	    // empty, we need to schedule the text content to be reset.
	    workInProgress.effectTag |= ContentReset;
	  }

	  markRef(current, workInProgress);

	  // Check the host config to see if the children are offscreen/hidden.
	  if (renderExpirationTime !== Never && workInProgress.mode & AsyncMode && shouldDeprioritizeSubtree(type, nextProps)) {
	    // Down-prioritize the children.
	    workInProgress.expirationTime = Never;
	    // Bailout and come back to this fiber later.
	    workInProgress.memoizedProps = nextProps;
	    return null;
	  }

	  reconcileChildren(current, workInProgress, nextChildren);
	  memoizeProps(workInProgress, nextProps);
	  return workInProgress.child;
	}

	function updateHostText(current, workInProgress) {
	  if (current === null) {
	    tryToClaimNextHydratableInstance(workInProgress);
	  }
	  var nextProps = workInProgress.pendingProps;
	  memoizeProps(workInProgress, nextProps);
	  // Nothing to do here. This is terminal. We'll do the completion step
	  // immediately after.
	  return null;
	}

	function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
	  !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var fn = workInProgress.type;
	  var props = workInProgress.pendingProps;
	  var unmaskedContext = getUnmaskedContext(workInProgress);
	  var context = getMaskedContext(workInProgress, unmaskedContext);

	  var value = void 0;

	  {
	    if (fn.prototype && typeof fn.prototype.render === 'function') {
	      var componentName = getComponentName(workInProgress) || 'Unknown';

	      if (!didWarnAboutBadClass[componentName]) {
	        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
	        didWarnAboutBadClass[componentName] = true;
	      }
	    }

	    if (workInProgress.mode & StrictMode) {
	      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
	    }

	    ReactCurrentOwner.current = workInProgress;
	    value = fn(props, context);
	  }
	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;

	  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
	    var Component = workInProgress.type;

	    // Proceed under the assumption that this is a class instance
	    workInProgress.tag = ClassComponent;

	    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

	    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
	    if (typeof getDerivedStateFromProps === 'function') {
	      applyDerivedStateFromProps(workInProgress, getDerivedStateFromProps, props);
	    }

	    // Push context providers early to prevent context stack mismatches.
	    // During mounting we don't know the child context yet as the instance doesn't exist.
	    // We will invalidate the child context in finishClassComponent() right after rendering.
	    var hasContext = pushContextProvider(workInProgress);
	    adoptClassInstance(workInProgress, value);
	    mountClassInstance(workInProgress, renderExpirationTime);
	    return finishClassComponent(current, workInProgress, true, hasContext, renderExpirationTime);
	  } else {
	    // Proceed under the assumption that this is a functional component
	    workInProgress.tag = FunctionalComponent;
	    {
	      var _Component = workInProgress.type;

	      if (_Component) {
	        !!_Component.childContextTypes ? warning(false, '%s(...): childContextTypes cannot be defined on a functional component.', _Component.displayName || _Component.name || 'Component') : void 0;
	      }
	      if (workInProgress.ref !== null) {
	        var info = '';
	        var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
	        if (ownerName) {
	          info += '\n\nCheck the render method of `' + ownerName + '`.';
	        }

	        var warningKey = ownerName || workInProgress._debugID || '';
	        var debugSource = workInProgress._debugSource;
	        if (debugSource) {
	          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
	        }
	        if (!didWarnAboutStatelessRefs[warningKey]) {
	          didWarnAboutStatelessRefs[warningKey] = true;
	          warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
	        }
	      }

	      if (typeof fn.getDerivedStateFromProps === 'function') {
	        var _componentName = getComponentName(workInProgress) || 'Unknown';

	        if (!didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName]) {
	          warning(false, '%s: Stateless functional components do not support getDerivedStateFromProps.', _componentName);
	          didWarnAboutGetDerivedStateOnFunctionalComponent[_componentName] = true;
	        }
	      }
	    }
	    reconcileChildren(current, workInProgress, value);
	    memoizeProps(workInProgress, props);
	    return workInProgress.child;
	  }
	}

	function updateTimeoutComponent(current, workInProgress, renderExpirationTime) {
	  if (enableSuspense) {
	    var nextProps = workInProgress.pendingProps;
	    var prevProps = workInProgress.memoizedProps;

	    var prevDidTimeout = workInProgress.memoizedState;

	    // Check if we already attempted to render the normal state. If we did,
	    // and we timed out, render the placeholder state.
	    var alreadyCaptured = (workInProgress.effectTag & DidCapture) === NoEffect;
	    var nextDidTimeout = !alreadyCaptured;

	    if (hasContextChanged()) {
	      // Normally we can bail out on props equality but if context has changed
	      // we don't do the bailout and we have to reuse existing props instead.
	    } else if (nextProps === prevProps && nextDidTimeout === prevDidTimeout) {
	      return bailoutOnAlreadyFinishedWork(current, workInProgress);
	    }

	    var render = nextProps.children;
	    var nextChildren = render(nextDidTimeout);
	    workInProgress.memoizedProps = nextProps;
	    workInProgress.memoizedState = nextDidTimeout;
	    reconcileChildren(current, workInProgress, nextChildren);
	    return workInProgress.child;
	  } else {
	    return null;
	  }
	}

	function updatePortalComponent(current, workInProgress, renderExpirationTime) {
	  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
	  var nextChildren = workInProgress.pendingProps;
	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (workInProgress.memoizedProps === nextChildren) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }

	  if (current === null) {
	    // Portals are special because we don't append the children during mount
	    // but at commit. Therefore we need to track insertions which the normal
	    // flow doesn't do during mount. This doesn't happen at the root because
	    // the root always starts with a "current" with a null child.
	    // TODO: Consider unifying this with how the root works.
	    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
	    memoizeProps(workInProgress, nextChildren);
	  } else {
	    reconcileChildren(current, workInProgress, nextChildren);
	    memoizeProps(workInProgress, nextChildren);
	  }
	  return workInProgress.child;
	}

	function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
	  var fiber = workInProgress.child;
	  if (fiber !== null) {
	    // Set the return pointer of the child to the work-in-progress fiber.
	    fiber.return = workInProgress;
	  }
	  while (fiber !== null) {
	    var nextFiber = void 0;
	    // Visit this fiber.
	    switch (fiber.tag) {
	      case ContextConsumer:
	        // Check if the context matches.
	        var observedBits = fiber.stateNode | 0;
	        if (fiber.type === context && (observedBits & changedBits) !== 0) {
	          // Update the expiration time of all the ancestors, including
	          // the alternates.
	          var node = fiber;
	          while (node !== null) {
	            var alternate = node.alternate;
	            if (node.expirationTime === NoWork || node.expirationTime > renderExpirationTime) {
	              node.expirationTime = renderExpirationTime;
	              if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
	                alternate.expirationTime = renderExpirationTime;
	              }
	            } else if (alternate !== null && (alternate.expirationTime === NoWork || alternate.expirationTime > renderExpirationTime)) {
	              alternate.expirationTime = renderExpirationTime;
	            } else {
	              // Neither alternate was updated, which means the rest of the
	              // ancestor path already has sufficient priority.
	              break;
	            }
	            node = node.return;
	          }
	          // Don't scan deeper than a matching consumer. When we render the
	          // consumer, we'll continue scanning from that point. This way the
	          // scanning work is time-sliced.
	          nextFiber = null;
	        } else {
	          // Traverse down.
	          nextFiber = fiber.child;
	        }
	        break;
	      case ContextProvider:
	        // Don't scan deeper if this is a matching provider
	        nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
	        break;
	      default:
	        // Traverse down.
	        nextFiber = fiber.child;
	        break;
	    }
	    if (nextFiber !== null) {
	      // Set the return pointer of the child to the work-in-progress fiber.
	      nextFiber.return = fiber;
	    } else {
	      // No child. Traverse to next sibling.
	      nextFiber = fiber;
	      while (nextFiber !== null) {
	        if (nextFiber === workInProgress) {
	          // We're back to the root of this subtree. Exit.
	          nextFiber = null;
	          break;
	        }
	        var sibling = nextFiber.sibling;
	        if (sibling !== null) {
	          // Set the return pointer of the sibling to the work-in-progress fiber.
	          sibling.return = nextFiber.return;
	          nextFiber = sibling;
	          break;
	        }
	        // No more siblings. Traverse up.
	        nextFiber = nextFiber.return;
	      }
	    }
	    fiber = nextFiber;
	  }
	}

	function updateContextProvider(current, workInProgress, renderExpirationTime) {
	  var providerType = workInProgress.type;
	  var context = providerType._context;

	  var newProps = workInProgress.pendingProps;
	  var oldProps = workInProgress.memoizedProps;
	  var canBailOnProps = true;

	  if (hasContextChanged()) {
	    canBailOnProps = false;
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (oldProps === newProps) {
	    workInProgress.stateNode = 0;
	    pushProvider(workInProgress);
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }

	  var newValue = newProps.value;
	  workInProgress.memoizedProps = newProps;

	  {
	    var providerPropTypes = workInProgress.type.propTypes;

	    if (providerPropTypes) {
	      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackAddendum$6);
	    }
	  }

	  var changedBits = void 0;
	  if (oldProps === null) {
	    // Initial render
	    changedBits = MAX_SIGNED_31_BIT_INT;
	  } else {
	    if (oldProps.value === newProps.value) {
	      // No change. Bailout early if children are the same.
	      if (oldProps.children === newProps.children && canBailOnProps) {
	        workInProgress.stateNode = 0;
	        pushProvider(workInProgress);
	        return bailoutOnAlreadyFinishedWork(current, workInProgress);
	      }
	      changedBits = 0;
	    } else {
	      var oldValue = oldProps.value;
	      // Use Object.is to compare the new context value to the old value.
	      // Inlined Object.is polyfill.
	      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	      if (oldValue === newValue && (oldValue !== 0 || 1 / oldValue === 1 / newValue) || oldValue !== oldValue && newValue !== newValue // eslint-disable-line no-self-compare
	      ) {
	          // No change. Bailout early if children are the same.
	          if (oldProps.children === newProps.children && canBailOnProps) {
	            workInProgress.stateNode = 0;
	            pushProvider(workInProgress);
	            return bailoutOnAlreadyFinishedWork(current, workInProgress);
	          }
	          changedBits = 0;
	        } else {
	        changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
	        {
	          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
	        }
	        changedBits |= 0;

	        if (changedBits === 0) {
	          // No change. Bailout early if children are the same.
	          if (oldProps.children === newProps.children && canBailOnProps) {
	            workInProgress.stateNode = 0;
	            pushProvider(workInProgress);
	            return bailoutOnAlreadyFinishedWork(current, workInProgress);
	          }
	        } else {
	          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
	        }
	      }
	    }
	  }

	  workInProgress.stateNode = changedBits;
	  pushProvider(workInProgress);

	  var newChildren = newProps.children;
	  reconcileChildren(current, workInProgress, newChildren);
	  return workInProgress.child;
	}

	function updateContextConsumer(current, workInProgress, renderExpirationTime) {
	  var context = workInProgress.type;
	  var newProps = workInProgress.pendingProps;
	  var oldProps = workInProgress.memoizedProps;

	  var newValue = getContextCurrentValue(context);
	  var changedBits = getContextChangedBits(context);

	  if (hasContextChanged()) {
	    // Normally we can bail out on props equality but if context has changed
	    // we don't do the bailout and we have to reuse existing props instead.
	  } else if (changedBits === 0 && oldProps === newProps) {
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  workInProgress.memoizedProps = newProps;

	  var observedBits = newProps.unstable_observedBits;
	  if (observedBits === undefined || observedBits === null) {
	    // Subscribe to all changes by default
	    observedBits = MAX_SIGNED_31_BIT_INT;
	  }
	  // Store the observedBits on the fiber's stateNode for quick access.
	  workInProgress.stateNode = observedBits;

	  if ((changedBits & observedBits) !== 0) {
	    // Context change propagation stops at matching consumers, for time-
	    // slicing. Continue the propagation here.
	    propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
	  } else if (oldProps === newProps) {
	    // Skip over a memoized parent with a bitmask bailout even
	    // if we began working on it because of a deeper matching child.
	    return bailoutOnAlreadyFinishedWork(current, workInProgress);
	  }
	  // There is no bailout on `children` equality because we expect people
	  // to often pass a bound method as a child, but it may reference
	  // `this.state` or `this.props` (and thus needs to re-render on `setState`).

	  var render = newProps.children;

	  {
	    !(typeof render === 'function') ? warning(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
	  }

	  var newChildren = void 0;
	  {
	    ReactCurrentOwner.current = workInProgress;
	    ReactDebugCurrentFiber.setCurrentPhase('render');
	    newChildren = render(newValue);
	    ReactDebugCurrentFiber.setCurrentPhase(null);
	  }

	  // React DevTools reads this flag.
	  workInProgress.effectTag |= PerformedWork;
	  reconcileChildren(current, workInProgress, newChildren);
	  return workInProgress.child;
	}

	/*
	  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
	    let child = firstChild;
	    do {
	      // Ensure that the first and last effect of the parent corresponds
	      // to the children's first and last effect.
	      if (!returnFiber.firstEffect) {
	        returnFiber.firstEffect = child.firstEffect;
	      }
	      if (child.lastEffect) {
	        if (returnFiber.lastEffect) {
	          returnFiber.lastEffect.nextEffect = child.firstEffect;
	        }
	        returnFiber.lastEffect = child.lastEffect;
	      }
	    } while (child = child.sibling);
	  }
	  */

	function bailoutOnAlreadyFinishedWork(current, workInProgress) {
	  cancelWorkTimer(workInProgress);

	  if (enableProfilerTimer) {
	    // Don't update "base" render times for bailouts.
	    stopBaseRenderTimerIfRunning();
	  }

	  // TODO: We should ideally be able to bail out early if the children have no
	  // more work to do. However, since we don't have a separation of this
	  // Fiber's priority and its children yet - we don't know without doing lots
	  // of the same work we do anyway. Once we have that separation we can just
	  // bail out here if the children has no more work at this priority level.
	  // if (workInProgress.priorityOfChildren <= priorityLevel) {
	  //   // If there are side-effects in these children that have not yet been
	  //   // committed we need to ensure that they get properly transferred up.
	  //   if (current && current.child !== workInProgress.child) {
	  //     reuseChildrenEffects(workInProgress, child);
	  //   }
	  //   return null;
	  // }

	  cloneChildFibers(current, workInProgress);
	  return workInProgress.child;
	}

	function bailoutOnLowPriority(current, workInProgress) {
	  cancelWorkTimer(workInProgress);

	  if (enableProfilerTimer) {
	    // Don't update "base" render times for bailouts.
	    stopBaseRenderTimerIfRunning();
	  }

	  // TODO: Handle HostComponent tags here as well and call pushHostContext()?
	  // See PR 8590 discussion for context
	  switch (workInProgress.tag) {
	    case HostRoot:
	      pushHostRootContext(workInProgress);
	      break;
	    case ClassComponent:
	      pushContextProvider(workInProgress);
	      break;
	    case HostPortal:
	      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
	      break;
	    case ContextProvider:
	      pushProvider(workInProgress);
	      break;
	  }
	  // TODO: What if this is currently in progress?
	  // How can that happen? How is this not being cloned?
	  return null;
	}

	// TODO: Delete memoizeProps/State and move to reconcile/bailout instead
	function memoizeProps(workInProgress, nextProps) {
	  workInProgress.memoizedProps = nextProps;
	}

	function memoizeState(workInProgress, nextState) {
	  workInProgress.memoizedState = nextState;
	  // Don't reset the updateQueue, in case there are pending updates. Resetting
	  // is handled by processUpdateQueue.
	}

	function beginWork(current, workInProgress, renderExpirationTime) {
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      markActualRenderTimeStarted(workInProgress);
	    }
	  }

	  if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
	    return bailoutOnLowPriority(current, workInProgress);
	  }

	  switch (workInProgress.tag) {
	    case IndeterminateComponent:
	      return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
	    case FunctionalComponent:
	      return updateFunctionalComponent(current, workInProgress);
	    case ClassComponent:
	      return updateClassComponent(current, workInProgress, renderExpirationTime);
	    case HostRoot:
	      return updateHostRoot(current, workInProgress, renderExpirationTime);
	    case HostComponent:
	      return updateHostComponent(current, workInProgress, renderExpirationTime);
	    case HostText:
	      return updateHostText(current, workInProgress);
	    case TimeoutComponent:
	      return updateTimeoutComponent(current, workInProgress, renderExpirationTime);
	    case HostPortal:
	      return updatePortalComponent(current, workInProgress, renderExpirationTime);
	    case ForwardRef:
	      return updateForwardRef(current, workInProgress);
	    case Fragment:
	      return updateFragment(current, workInProgress);
	    case Mode:
	      return updateMode(current, workInProgress);
	    case Profiler:
	      return updateProfiler(current, workInProgress);
	    case ContextProvider:
	      return updateContextProvider(current, workInProgress, renderExpirationTime);
	    case ContextConsumer:
	      return updateContextConsumer(current, workInProgress, renderExpirationTime);
	    default:
	      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
	  }
	}

	function markUpdate(workInProgress) {
	  // Tag the fiber with an update effect. This turns a Placement into
	  // a PlacementAndUpdate.
	  workInProgress.effectTag |= Update;
	}

	function markRef$1(workInProgress) {
	  workInProgress.effectTag |= Ref;
	}

	function appendAllChildren(parent, workInProgress) {
	  // We only have the top Fiber that was created but we need recurse down its
	  // children to find all the terminal nodes.
	  var node = workInProgress.child;
	  while (node !== null) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      appendInitialChild(parent, node.stateNode);
	    } else if (node.tag === HostPortal) {
	      // If we have a portal child, then we don't want to traverse
	      // down its children. Instead, we'll get insertions from each child in
	      // the portal directly.
	    } else if (node.child !== null) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === workInProgress) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === workInProgress) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	var updateHostContainer = void 0;
	var updateHostComponent$1 = void 0;
	var updateHostText$1 = void 0;
	if (supportsMutation) {
	  // Mutation mode

	  updateHostContainer = function (workInProgress) {
	    // Noop
	  };
	  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
	    // TODO: Type this specific to this type of component.
	    workInProgress.updateQueue = updatePayload;
	    // If the update payload indicates that there is a change or if there
	    // is a new ref we mark this as an update. All the work is done in commitWork.
	    if (updatePayload) {
	      markUpdate(workInProgress);
	    }
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    // If the text differs, mark it as an update. All the work in done in commitWork.
	    if (oldText !== newText) {
	      markUpdate(workInProgress);
	    }
	  };
	} else if (supportsPersistence) {
	  // Persistent host tree mode

	  // An unfortunate fork of appendAllChildren because we have two different parent types.
	  var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
	    // We only have the top Fiber that was created but we need recurse down its
	    // children to find all the terminal nodes.
	    var node = workInProgress.child;
	    while (node !== null) {
	      if (node.tag === HostComponent || node.tag === HostText) {
	        appendChildToContainerChildSet(containerChildSet, node.stateNode);
	      } else if (node.tag === HostPortal) {
	        // If we have a portal child, then we don't want to traverse
	        // down its children. Instead, we'll get insertions from each child in
	        // the portal directly.
	      } else if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	      if (node === workInProgress) {
	        return;
	      }
	      while (node.sibling === null) {
	        if (node.return === null || node.return === workInProgress) {
	          return;
	        }
	        node = node.return;
	      }
	      node.sibling.return = node.return;
	      node = node.sibling;
	    }
	  };
	  updateHostContainer = function (workInProgress) {
	    var portalOrRoot = workInProgress.stateNode;
	    var childrenUnchanged = workInProgress.firstEffect === null;
	    if (childrenUnchanged) {
	      // No changes, just reuse the existing instance.
	    } else {
	      var container = portalOrRoot.containerInfo;
	      var newChildSet = createContainerChildSet(container);
	      // If children might have changed, we have to add them all to the set.
	      appendAllChildrenToContainer(newChildSet, workInProgress);
	      portalOrRoot.pendingChildren = newChildSet;
	      // Schedule an update on the container to swap out the container.
	      markUpdate(workInProgress);
	      finalizeContainerChildren(container, newChildSet);
	    }
	  };
	  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
	    // If there are no effects associated with this node, then none of our children had any updates.
	    // This guarantees that we can reuse all of them.
	    var childrenUnchanged = workInProgress.firstEffect === null;
	    var currentInstance = current.stateNode;
	    if (childrenUnchanged && updatePayload === null) {
	      // No changes, just reuse the existing instance.
	      // Note that this might release a previous clone.
	      workInProgress.stateNode = currentInstance;
	    } else {
	      var recyclableInstance = workInProgress.stateNode;
	      var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
	      if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
	        markUpdate(workInProgress);
	      }
	      workInProgress.stateNode = newInstance;
	      if (childrenUnchanged) {
	        // If there are no other effects in this tree, we need to flag this node as having one.
	        // Even though we're not going to use it for anything.
	        // Otherwise parents won't know that there are new children to propagate upwards.
	        markUpdate(workInProgress);
	      } else {
	        // If children might have changed, we have to add them all to the set.
	        appendAllChildren(newInstance, workInProgress);
	      }
	    }
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    if (oldText !== newText) {
	      // If the text content differs, we'll create a new text instance for it.
	      var rootContainerInstance = getRootHostContainer();
	      var currentHostContext = getHostContext();
	      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
	      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
	      // This lets the parents know that at least one of their children has changed.
	      markUpdate(workInProgress);
	    }
	  };
	} else {
	  // No host operations
	  updateHostContainer = function (workInProgress) {
	    // Noop
	  };
	  updateHostComponent$1 = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext) {
	    // Noop
	  };
	  updateHostText$1 = function (current, workInProgress, oldText, newText) {
	    // Noop
	  };
	}

	function completeWork(current, workInProgress, renderExpirationTime) {
	  var newProps = workInProgress.pendingProps;

	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      recordElapsedActualRenderTime(workInProgress);
	    }
	  }

	  switch (workInProgress.tag) {
	    case FunctionalComponent:
	      return null;
	    case ClassComponent:
	      {
	        // We are leaving this subtree, so pop context if any.
	        popContextProvider(workInProgress);
	        return null;
	      }
	    case HostRoot:
	      {
	        popHostContainer(workInProgress);
	        popTopLevelContextObject(workInProgress);
	        var fiberRoot = workInProgress.stateNode;
	        if (fiberRoot.pendingContext) {
	          fiberRoot.context = fiberRoot.pendingContext;
	          fiberRoot.pendingContext = null;
	        }
	        if (current === null || current.child === null) {
	          // If we hydrated, pop so that we can delete any remaining children
	          // that weren't hydrated.
	          popHydrationState(workInProgress);
	          // This resets the hacky state to fix isMounted before committing.
	          // TODO: Delete this when we delete isMounted and findDOMNode.
	          workInProgress.effectTag &= ~Placement;
	        }
	        updateHostContainer(workInProgress);
	        return null;
	      }
	    case HostComponent:
	      {
	        popHostContext(workInProgress);
	        var rootContainerInstance = getRootHostContainer();
	        var type = workInProgress.type;
	        if (current !== null && workInProgress.stateNode != null) {
	          // If we have an alternate, that means this is an update and we need to
	          // schedule a side-effect to do the updates.
	          var oldProps = current.memoizedProps;
	          // If we get updated because one of our children updated, we don't
	          // have newProps so we'll have to reuse them.
	          // TODO: Split the update API as separate for the props vs. children.
	          // Even better would be if children weren't special cased at all tho.
	          var instance = workInProgress.stateNode;
	          var currentHostContext = getHostContext();
	          // TODO: Experiencing an error where oldProps is null. Suggests a host
	          // component is hitting the resume path. Figure out why. Possibly
	          // related to `hidden`.
	          var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

	          updateHostComponent$1(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance, currentHostContext);

	          if (current.ref !== workInProgress.ref) {
	            markRef$1(workInProgress);
	          }
	        } else {
	          if (!newProps) {
	            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	            // This can happen when we abort work.
	            return null;
	          }

	          var _currentHostContext = getHostContext();
	          // TODO: Move createInstance to beginWork and keep it on a context
	          // "stack" as the parent. Then append children as we go in beginWork
	          // or completeWork depending on we want to add then top->down or
	          // bottom->up. Top->down is faster in IE11.
	          var wasHydrated = popHydrationState(workInProgress);
	          if (wasHydrated) {
	            // TODO: Move this and createInstance step into the beginPhase
	            // to consolidate.
	            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
	              // If changes to the hydrated node needs to be applied at the
	              // commit-phase we mark this as such.
	              markUpdate(workInProgress);
	            }
	          } else {
	            var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

	            appendAllChildren(_instance, workInProgress);

	            // Certain renderers require commit-time effects for initial mount.
	            // (eg DOM renderer supports auto-focus for certain elements).
	            // Make sure such renderers get scheduled for later work.
	            if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance, _currentHostContext)) {
	              markUpdate(workInProgress);
	            }
	            workInProgress.stateNode = _instance;
	          }

	          if (workInProgress.ref !== null) {
	            // If there is a ref on a host node we need to schedule a callback
	            markRef$1(workInProgress);
	          }
	        }
	        return null;
	      }
	    case HostText:
	      {
	        var newText = newProps;
	        if (current && workInProgress.stateNode != null) {
	          var oldText = current.memoizedProps;
	          // If we have an alternate, that means this is an update and we need
	          // to schedule a side-effect to do the updates.
	          updateHostText$1(current, workInProgress, oldText, newText);
	        } else {
	          if (typeof newText !== 'string') {
	            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	            // This can happen when we abort work.
	            return null;
	          }
	          var _rootContainerInstance = getRootHostContainer();
	          var _currentHostContext2 = getHostContext();
	          var _wasHydrated = popHydrationState(workInProgress);
	          if (_wasHydrated) {
	            if (prepareToHydrateHostTextInstance(workInProgress)) {
	              markUpdate(workInProgress);
	            }
	          } else {
	            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
	          }
	        }
	        return null;
	      }
	    case ForwardRef:
	      return null;
	    case TimeoutComponent:
	      return null;
	    case Fragment:
	      return null;
	    case Mode:
	      return null;
	    case Profiler:
	      return null;
	    case HostPortal:
	      popHostContainer(workInProgress);
	      updateHostContainer(workInProgress);
	      return null;
	    case ContextProvider:
	      // Pop provider fiber
	      popProvider(workInProgress);
	      return null;
	    case ContextConsumer:
	      return null;
	    // Error cases
	    case IndeterminateComponent:
	      invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
	    // eslint-disable-next-line no-fallthrough
	    default:
	      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
	  }
	}

	// This module is forked in different environments.
	// By default, return `true` to log errors to the console.
	// Forks can return `false` if this isn't desirable.
	function showErrorDialog(capturedError) {
	  return true;
	}

	function logCapturedError(capturedError) {
	  var logError = showErrorDialog(capturedError);

	  // Allow injected showErrorDialog() to prevent default console.error logging.
	  // This enables renderers like ReactNative to better manage redbox behavior.
	  if (logError === false) {
	    return;
	  }

	  var error = capturedError.error;
	  var suppressLogging = error && error.suppressReactErrorLogging;
	  if (suppressLogging) {
	    return;
	  }

	  {
	    var componentName = capturedError.componentName,
	        componentStack = capturedError.componentStack,
	        errorBoundaryName = capturedError.errorBoundaryName,
	        errorBoundaryFound = capturedError.errorBoundaryFound,
	        willRetry = capturedError.willRetry;


	    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

	    var errorBoundaryMessage = void 0;
	    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
	    if (errorBoundaryFound && errorBoundaryName) {
	      if (willRetry) {
	        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
	      } else {
	        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
	      }
	    } else {
	      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
	    }
	    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

	    // In development, we provide our own message with just the component stack.
	    // We don't include the original error message and JS stack because the browser
	    // has already printed it. Even if the application swallows the error, it is still
	    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
	    console.error(combinedMessage);
	  }
	}

	var invokeGuardedCallback$3 = ReactErrorUtils.invokeGuardedCallback;
	var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
	var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


	var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
	{
	  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
	}

	function logError(boundary, errorInfo) {
	  var source = errorInfo.source;
	  var stack = errorInfo.stack;
	  if (stack === null && source !== null) {
	    stack = getStackAddendumByWorkInProgressFiber(source);
	  }

	  var capturedError = {
	    componentName: source !== null ? getComponentName(source) : null,
	    componentStack: stack !== null ? stack : '',
	    error: errorInfo.value,
	    errorBoundary: null,
	    errorBoundaryName: null,
	    errorBoundaryFound: false,
	    willRetry: false
	  };

	  if (boundary !== null && boundary.tag === ClassComponent) {
	    capturedError.errorBoundary = boundary.stateNode;
	    capturedError.errorBoundaryName = getComponentName(boundary);
	    capturedError.errorBoundaryFound = true;
	    capturedError.willRetry = true;
	  }

	  try {
	    logCapturedError(capturedError);
	  } catch (e) {
	    // Prevent cycle if logCapturedError() throws.
	    // A cycle may still occur if logCapturedError renders a component that throws.
	    var suppressLogging = e && e.suppressReactErrorLogging;
	    if (!suppressLogging) {
	      console.error(e);
	    }
	  }
	}

	var callComponentWillUnmountWithTimer = function (current, instance) {
	  startPhaseTimer(current, 'componentWillUnmount');
	  instance.props = current.memoizedProps;
	  instance.state = current.memoizedState;
	  instance.componentWillUnmount();
	  stopPhaseTimer();
	};

	// Capture errors so they don't interrupt unmounting.
	function safelyCallComponentWillUnmount(current, instance) {
	  {
	    invokeGuardedCallback$3(null, callComponentWillUnmountWithTimer, null, current, instance);
	    if (hasCaughtError$1()) {
	      var unmountError = clearCaughtError$1();
	      captureCommitPhaseError(current, unmountError);
	    }
	  }
	}

	function safelyDetachRef(current) {
	  var ref = current.ref;
	  if (ref !== null) {
	    if (typeof ref === 'function') {
	      {
	        invokeGuardedCallback$3(null, ref, null, null);
	        if (hasCaughtError$1()) {
	          var refError = clearCaughtError$1();
	          captureCommitPhaseError(current, refError);
	        }
	      }
	    } else {
	      ref.current = null;
	    }
	  }
	}

	function commitBeforeMutationLifeCycles(current, finishedWork) {
	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        if (finishedWork.effectTag & Snapshot) {
	          if (current !== null) {
	            var prevProps = current.memoizedProps;
	            var prevState = current.memoizedState;
	            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
	            var instance = finishedWork.stateNode;
	            instance.props = finishedWork.memoizedProps;
	            instance.state = finishedWork.memoizedState;
	            var snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);
	            {
	              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
	              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
	                didWarnSet.add(finishedWork.type);
	                warning(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork));
	              }
	            }
	            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
	            stopPhaseTimer();
	          }
	        }
	        return;
	      }
	    case HostRoot:
	    case HostComponent:
	    case HostText:
	    case HostPortal:
	      // Nothing to do for these component types
	      return;
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitLifeCycles(finishedRoot, current, finishedWork, currentTime, committedExpirationTime) {
	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        var instance = finishedWork.stateNode;
	        if (finishedWork.effectTag & Update) {
	          if (current === null) {
	            startPhaseTimer(finishedWork, 'componentDidMount');
	            instance.props = finishedWork.memoizedProps;
	            instance.state = finishedWork.memoizedState;
	            instance.componentDidMount();
	            stopPhaseTimer();
	          } else {
	            var prevProps = current.memoizedProps;
	            var prevState = current.memoizedState;
	            startPhaseTimer(finishedWork, 'componentDidUpdate');
	            instance.props = finishedWork.memoizedProps;
	            instance.state = finishedWork.memoizedState;
	            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
	            stopPhaseTimer();
	          }
	        }
	        var updateQueue = finishedWork.updateQueue;
	        if (updateQueue !== null) {
	          instance.props = finishedWork.memoizedProps;
	          instance.state = finishedWork.memoizedState;
	          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
	        }
	        return;
	      }
	    case HostRoot:
	      {
	        var _updateQueue = finishedWork.updateQueue;
	        if (_updateQueue !== null) {
	          var _instance = null;
	          if (finishedWork.child !== null) {
	            switch (finishedWork.child.tag) {
	              case HostComponent:
	                _instance = getPublicInstance(finishedWork.child.stateNode);
	                break;
	              case ClassComponent:
	                _instance = finishedWork.child.stateNode;
	                break;
	            }
	          }
	          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
	        }
	        return;
	      }
	    case HostComponent:
	      {
	        var _instance2 = finishedWork.stateNode;

	        // Renderers may schedule work to be done after host components are mounted
	        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
	        // These effects should only be committed when components are first mounted,
	        // aka when there is no current/alternate.
	        if (current === null && finishedWork.effectTag & Update) {
	          var type = finishedWork.type;
	          var props = finishedWork.memoizedProps;
	          commitMount(_instance2, type, props, finishedWork);
	        }

	        return;
	      }
	    case HostText:
	      {
	        // We have no life-cycles associated with text.
	        return;
	      }
	    case HostPortal:
	      {
	        // We have no life-cycles associated with portals.
	        return;
	      }
	    case Profiler:
	      {
	        // We have no life-cycles associated with Profiler.
	        return;
	      }
	    case TimeoutComponent:
	      {
	        // We have no life-cycles associated with Timeouts.
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitAttachRef(finishedWork) {
	  var ref = finishedWork.ref;
	  if (ref !== null) {
	    var instance = finishedWork.stateNode;
	    var instanceToUse = void 0;
	    switch (finishedWork.tag) {
	      case HostComponent:
	        instanceToUse = getPublicInstance(instance);
	        break;
	      default:
	        instanceToUse = instance;
	    }
	    if (typeof ref === 'function') {
	      ref(instanceToUse);
	    } else {
	      {
	        if (!ref.hasOwnProperty('current')) {
	          warning(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork), getStackAddendumByWorkInProgressFiber(finishedWork));
	        }
	      }

	      ref.current = instanceToUse;
	    }
	  }
	}

	function commitDetachRef(current) {
	  var currentRef = current.ref;
	  if (currentRef !== null) {
	    if (typeof currentRef === 'function') {
	      currentRef(null);
	    } else {
	      currentRef.current = null;
	    }
	  }
	}

	// User-originating errors (lifecycles and refs) should not interrupt
	// deletion, so don't let them throw. Host-originating errors should
	// interrupt deletion, so it's okay
	function commitUnmount(current) {
	  if (typeof onCommitUnmount === 'function') {
	    onCommitUnmount(current);
	  }

	  switch (current.tag) {
	    case ClassComponent:
	      {
	        safelyDetachRef(current);
	        var instance = current.stateNode;
	        if (typeof instance.componentWillUnmount === 'function') {
	          safelyCallComponentWillUnmount(current, instance);
	        }
	        return;
	      }
	    case HostComponent:
	      {
	        safelyDetachRef(current);
	        return;
	      }
	    case HostPortal:
	      {
	        // TODO: this is recursive.
	        // We are also not using this parent because
	        // the portal will get pushed immediately.
	        if (supportsMutation) {
	          unmountHostComponents(current);
	        } else if (supportsPersistence) {
	          emptyPortalContainer(current);
	        }
	        return;
	      }
	  }
	}

	function commitNestedUnmounts(root) {
	  // While we're inside a removed host node we don't want to call
	  // removeChild on the inner nodes because they're removed by the top
	  // call anyway. We also want to call componentWillUnmount on all
	  // composites before this host node is removed from the tree. Therefore
	  var node = root;
	  while (true) {
	    commitUnmount(node);
	    // Visit children because they may contain more composite or host nodes.
	    // Skip portals because commitUnmount() currently visits them recursively.
	    if (node.child !== null && (
	    // If we use mutation we drill down into portals using commitUnmount above.
	    // If we don't use mutation we drill down into portals here instead.
	    !supportsMutation || node.tag !== HostPortal)) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === root) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === root) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function detachFiber(current) {
	  // Cut off the return pointers to disconnect it from the tree. Ideally, we
	  // should clear the child pointer of the parent alternate to let this
	  // get GC:ed but we don't know which for sure which parent is the current
	  // one so we'll settle for GC:ing the subtree of this child. This child
	  // itself will be GC:ed when the parent updates the next time.
	  current.return = null;
	  current.child = null;
	  if (current.alternate) {
	    current.alternate.child = null;
	    current.alternate.return = null;
	  }
	}

	function emptyPortalContainer(current) {
	  if (!supportsPersistence) {
	    return;
	  }

	  var portal = current.stateNode;
	  var containerInfo = portal.containerInfo;

	  var emptyChildSet = createContainerChildSet(containerInfo);
	  replaceContainerChildren(containerInfo, emptyChildSet);
	}

	function commitContainer(finishedWork) {
	  if (!supportsPersistence) {
	    return;
	  }

	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        return;
	      }
	    case HostComponent:
	      {
	        return;
	      }
	    case HostText:
	      {
	        return;
	      }
	    case HostRoot:
	    case HostPortal:
	      {
	        var portalOrRoot = finishedWork.stateNode;
	        var containerInfo = portalOrRoot.containerInfo,
	            _pendingChildren = portalOrRoot.pendingChildren;

	        replaceContainerChildren(containerInfo, _pendingChildren);
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function getHostParentFiber(fiber) {
	  var parent = fiber.return;
	  while (parent !== null) {
	    if (isHostParent(parent)) {
	      return parent;
	    }
	    parent = parent.return;
	  }
	  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
	}

	function isHostParent(fiber) {
	  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
	}

	function getHostSibling(fiber) {
	  // We're going to search forward into the tree until we find a sibling host
	  // node. Unfortunately, if multiple insertions are done in a row we have to
	  // search past them. This leads to exponential search for the next sibling.
	  var node = fiber;
	  siblings: while (true) {
	    // If we didn't find anything, let's try the next sibling.
	    while (node.sibling === null) {
	      if (node.return === null || isHostParent(node.return)) {
	        // If we pop out of the root or hit the parent the fiber we are the
	        // last sibling.
	        return null;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	    while (node.tag !== HostComponent && node.tag !== HostText) {
	      // If it is not host node and, we might have a host node inside it.
	      // Try to search down until we find one.
	      if (node.effectTag & Placement) {
	        // If we don't have a child, try the siblings instead.
	        continue siblings;
	      }
	      // If we don't have a child, try the siblings instead.
	      // We also skip portals because they are not part of this host tree.
	      if (node.child === null || node.tag === HostPortal) {
	        continue siblings;
	      } else {
	        node.child.return = node;
	        node = node.child;
	      }
	    }
	    // Check if this host node is stable or about to be placed.
	    if (!(node.effectTag & Placement)) {
	      // Found it!
	      return node.stateNode;
	    }
	  }
	}

	function commitPlacement(finishedWork) {
	  if (!supportsMutation) {
	    return;
	  }

	  // Recursively insert all host nodes into the parent.
	  var parentFiber = getHostParentFiber(finishedWork);
	  var parent = void 0;
	  var isContainer = void 0;
	  switch (parentFiber.tag) {
	    case HostComponent:
	      parent = parentFiber.stateNode;
	      isContainer = false;
	      break;
	    case HostRoot:
	      parent = parentFiber.stateNode.containerInfo;
	      isContainer = true;
	      break;
	    case HostPortal:
	      parent = parentFiber.stateNode.containerInfo;
	      isContainer = true;
	      break;
	    default:
	      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
	  }
	  if (parentFiber.effectTag & ContentReset) {
	    // Reset the text content of the parent before doing any insertions
	    resetTextContent(parent);
	    // Clear ContentReset from the effect tag
	    parentFiber.effectTag &= ~ContentReset;
	  }

	  var before = getHostSibling(finishedWork);
	  // We only have the top Fiber that was inserted but we need recurse down its
	  // children to find all the terminal nodes.
	  var node = finishedWork;
	  while (true) {
	    if (node.tag === HostComponent || node.tag === HostText) {
	      if (before) {
	        if (isContainer) {
	          insertInContainerBefore(parent, node.stateNode, before);
	        } else {
	          insertBefore(parent, node.stateNode, before);
	        }
	      } else {
	        if (isContainer) {
	          appendChildToContainer(parent, node.stateNode);
	        } else {
	          appendChild(parent, node.stateNode);
	        }
	      }
	    } else if (node.tag === HostPortal) {
	      // If the insertion itself is a portal, then we don't want to traverse
	      // down its children. Instead, we'll get insertions from each child in
	      // the portal directly.
	    } else if (node.child !== null) {
	      node.child.return = node;
	      node = node.child;
	      continue;
	    }
	    if (node === finishedWork) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === finishedWork) {
	        return;
	      }
	      node = node.return;
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function unmountHostComponents(current) {
	  // We only have the top Fiber that was inserted but we need recurse down its
	  var node = current;

	  // Each iteration, currentParent is populated with node's host parent if not
	  // currentParentIsValid.
	  var currentParentIsValid = false;
	  var currentParent = void 0;
	  var currentParentIsContainer = void 0;

	  while (true) {
	    if (!currentParentIsValid) {
	      var parent = node.return;
	      findParent: while (true) {
	        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        switch (parent.tag) {
	          case HostComponent:
	            currentParent = parent.stateNode;
	            currentParentIsContainer = false;
	            break findParent;
	          case HostRoot:
	            currentParent = parent.stateNode.containerInfo;
	            currentParentIsContainer = true;
	            break findParent;
	          case HostPortal:
	            currentParent = parent.stateNode.containerInfo;
	            currentParentIsContainer = true;
	            break findParent;
	        }
	        parent = parent.return;
	      }
	      currentParentIsValid = true;
	    }

	    if (node.tag === HostComponent || node.tag === HostText) {
	      commitNestedUnmounts(node);
	      // After all the children have unmounted, it is now safe to remove the
	      // node from the tree.
	      if (currentParentIsContainer) {
	        removeChildFromContainer(currentParent, node.stateNode);
	      } else {
	        removeChild(currentParent, node.stateNode);
	      }
	      // Don't visit children because we already visited them.
	    } else if (node.tag === HostPortal) {
	      // When we go into a portal, it becomes the parent to remove from.
	      // We will reassign it back when we pop the portal on the way up.
	      currentParent = node.stateNode.containerInfo;
	      // Visit children because portals might contain host components.
	      if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	    } else {
	      commitUnmount(node);
	      // Visit children because we may find more host components below.
	      if (node.child !== null) {
	        node.child.return = node;
	        node = node.child;
	        continue;
	      }
	    }
	    if (node === current) {
	      return;
	    }
	    while (node.sibling === null) {
	      if (node.return === null || node.return === current) {
	        return;
	      }
	      node = node.return;
	      if (node.tag === HostPortal) {
	        // When we go out of the portal, we need to restore the parent.
	        // Since we don't keep a stack of them, we will search for it.
	        currentParentIsValid = false;
	      }
	    }
	    node.sibling.return = node.return;
	    node = node.sibling;
	  }
	}

	function commitDeletion(current) {
	  if (supportsMutation) {
	    // Recursively delete all host nodes from the parent.
	    // Detach refs and call componentWillUnmount() on the whole subtree.
	    unmountHostComponents(current);
	  } else {
	    // Detach refs and call componentWillUnmount() on the whole subtree.
	    commitNestedUnmounts(current);
	  }
	  detachFiber(current);
	}

	function commitWork(current, finishedWork) {
	  if (!supportsMutation) {
	    commitContainer(finishedWork);
	    return;
	  }

	  switch (finishedWork.tag) {
	    case ClassComponent:
	      {
	        return;
	      }
	    case HostComponent:
	      {
	        var instance = finishedWork.stateNode;
	        if (instance != null) {
	          // Commit the work prepared earlier.
	          var newProps = finishedWork.memoizedProps;
	          // For hydration we reuse the update path but we treat the oldProps
	          // as the newProps. The updatePayload will contain the real change in
	          // this case.
	          var oldProps = current !== null ? current.memoizedProps : newProps;
	          var type = finishedWork.type;
	          // TODO: Type the updateQueue to be specific to host components.
	          var updatePayload = finishedWork.updateQueue;
	          finishedWork.updateQueue = null;
	          if (updatePayload !== null) {
	            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
	          }
	        }
	        return;
	      }
	    case HostText:
	      {
	        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        var textInstance = finishedWork.stateNode;
	        var newText = finishedWork.memoizedProps;
	        // For hydration we reuse the update path but we treat the oldProps
	        // as the newProps. The updatePayload will contain the real change in
	        // this case.
	        var oldText = current !== null ? current.memoizedProps : newText;
	        commitTextUpdate(textInstance, oldText, newText);
	        return;
	      }
	    case HostRoot:
	      {
	        return;
	      }
	    case Profiler:
	      {
	        if (enableProfilerTimer) {
	          var onRender = finishedWork.memoizedProps.onRender;
	          onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseTime, finishedWork.actualStartTime, getCommitTime());
	        }
	        return;
	      }
	    case TimeoutComponent:
	      {
	        return;
	      }
	    default:
	      {
	        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
	      }
	  }
	}

	function commitResetTextContent(current) {
	  if (!supportsMutation) {
	    return;
	  }
	  resetTextContent(current.stateNode);
	}

	function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
	  var update = createUpdate(expirationTime);
	  // Unmount the root by rendering null.
	  update.tag = CaptureUpdate;
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  update.payload = { element: null };
	  var error = errorInfo.value;
	  update.callback = function () {
	    onUncaughtError(error);
	    logError(fiber, errorInfo);
	  };
	  return update;
	}

	function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
	  var update = createUpdate(expirationTime);
	  update.tag = CaptureUpdate;
	  var getDerivedStateFromCatch = fiber.type.getDerivedStateFromCatch;
	  if (enableGetDerivedStateFromCatch && typeof getDerivedStateFromCatch === 'function') {
	    var error = errorInfo.value;
	    update.payload = function () {
	      return getDerivedStateFromCatch(error);
	    };
	  }

	  var inst = fiber.stateNode;
	  if (inst !== null && typeof inst.componentDidCatch === 'function') {
	    update.callback = function callback() {
	      if (!enableGetDerivedStateFromCatch || getDerivedStateFromCatch !== 'function') {
	        // To preserve the preexisting retry behavior of error boundaries,
	        // we keep track of which ones already failed during this batch.
	        // This gets reset before we yield back to the browser.
	        // TODO: Warn in strict mode if getDerivedStateFromCatch is
	        // not defined.
	        markLegacyErrorBoundaryAsFailed(this);
	      }
	      var error = errorInfo.value;
	      var stack = errorInfo.stack;
	      logError(fiber, errorInfo);
	      this.componentDidCatch(error, {
	        componentStack: stack !== null ? stack : ''
	      });
	    };
	  }
	  return update;
	}

	function schedulePing(finishedWork) {
	  // Once the promise resolves, we should try rendering the non-
	  // placeholder state again.
	  var currentTime = recalculateCurrentTime();
	  var expirationTime = computeExpirationForFiber(currentTime, finishedWork);
	  var recoveryUpdate = createUpdate(expirationTime);
	  enqueueUpdate(finishedWork, recoveryUpdate, expirationTime);
	  scheduleWork$1(finishedWork, expirationTime);
	}

	function throwException(root, returnFiber, sourceFiber, value, renderIsExpired, renderExpirationTime, currentTimeMs) {
	  // The source fiber did not complete.
	  sourceFiber.effectTag |= Incomplete;
	  // Its effect list is no longer valid.
	  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

	  if (enableSuspense && value !== null && typeof value === 'object' && typeof value.then === 'function') {
	    // This is a thenable.
	    var thenable = value;

	    var expirationTimeMs = expirationTimeToMs(renderExpirationTime);
	    var startTimeMs = expirationTimeMs - 5000;
	    var elapsedMs = currentTimeMs - startTimeMs;
	    if (elapsedMs < 0) {
	      elapsedMs = 0;
	    }
	    var remainingTimeMs = expirationTimeMs - currentTimeMs;

	    // Find the earliest timeout of all the timeouts in the ancestor path.
	    // TODO: Alternatively, we could store the earliest timeout on the context
	    // stack, rather than searching on every suspend.
	    var _workInProgress = returnFiber;
	    var earliestTimeoutMs = -1;
	    searchForEarliestTimeout: do {
	      if (_workInProgress.tag === TimeoutComponent) {
	        var current = _workInProgress.alternate;
	        if (current !== null && current.memoizedState === true) {
	          // A parent Timeout already committed in a placeholder state. We
	          // need to handle this promise immediately. In other words, we
	          // should never suspend inside a tree that already expired.
	          earliestTimeoutMs = 0;
	          break searchForEarliestTimeout;
	        }
	        var timeoutPropMs = _workInProgress.pendingProps.ms;
	        if (typeof timeoutPropMs === 'number') {
	          if (timeoutPropMs <= 0) {
	            earliestTimeoutMs = 0;
	            break searchForEarliestTimeout;
	          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
	            earliestTimeoutMs = timeoutPropMs;
	          }
	        } else if (earliestTimeoutMs === -1) {
	          earliestTimeoutMs = remainingTimeMs;
	        }
	      }
	      _workInProgress = _workInProgress.return;
	    } while (_workInProgress !== null);

	    // Compute the remaining time until the timeout.
	    var msUntilTimeout = earliestTimeoutMs - elapsedMs;

	    if (renderExpirationTime === Never || msUntilTimeout > 0) {
	      // There's still time remaining.
	      suspendRoot(root, thenable, msUntilTimeout, renderExpirationTime);
	      var onResolveOrReject = function () {
	        retrySuspendedRoot(root, renderExpirationTime);
	      };
	      thenable.then(onResolveOrReject, onResolveOrReject);
	      return;
	    } else {
	      // No time remaining. Need to fallback to placeholder.
	      // Find the nearest timeout that can be retried.
	      _workInProgress = returnFiber;
	      do {
	        switch (_workInProgress.tag) {
	          case HostRoot:
	            {
	              // The root expired, but no fallback was provided. Throw a
	              // helpful error.
	              var message = renderExpirationTime === Sync ? 'A synchronous update was suspended, but no fallback UI ' + 'was provided.' : 'An update was suspended for longer than the timeout, ' + 'but no fallback UI was provided.';
	              value = new Error(message);
	              break;
	            }
	          case TimeoutComponent:
	            {
	              if ((_workInProgress.effectTag & DidCapture) === NoEffect) {
	                _workInProgress.effectTag |= ShouldCapture;
	                var _onResolveOrReject = schedulePing.bind(null, _workInProgress);
	                thenable.then(_onResolveOrReject, _onResolveOrReject);
	                return;
	              }
	              // Already captured during this render. Continue to the next
	              // Timeout ancestor.
	              break;
	            }
	        }
	        _workInProgress = _workInProgress.return;
	      } while (_workInProgress !== null);
	    }
	  }

	  // We didn't find a boundary that could handle this type of exception. Start
	  // over and traverse parent path again, this time treating the exception
	  // as an error.
	  value = createCapturedValue(value, sourceFiber);
	  var workInProgress = returnFiber;
	  do {
	    switch (workInProgress.tag) {
	      case HostRoot:
	        {
	          var _errorInfo = value;
	          workInProgress.effectTag |= ShouldCapture;
	          var update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
	          enqueueCapturedUpdate(workInProgress, update, renderExpirationTime);
	          return;
	        }
	      case ClassComponent:
	        // Capture and retry
	        var errorInfo = value;
	        var ctor = workInProgress.type;
	        var instance = workInProgress.stateNode;
	        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromCatch === 'function' && enableGetDerivedStateFromCatch || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
	          workInProgress.effectTag |= ShouldCapture;
	          // Schedule the error boundary to re-render using updated state
	          var _update = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
	          enqueueCapturedUpdate(workInProgress, _update, renderExpirationTime);
	          return;
	        }
	        break;
	      default:
	        break;
	    }
	    workInProgress = workInProgress.return;
	  } while (workInProgress !== null);
	}

	function unwindWork(workInProgress, renderIsExpired, renderExpirationTime) {
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      recordElapsedActualRenderTime(workInProgress);
	    }
	  }

	  switch (workInProgress.tag) {
	    case ClassComponent:
	      {
	        popContextProvider(workInProgress);
	        var effectTag = workInProgress.effectTag;
	        if (effectTag & ShouldCapture) {
	          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostRoot:
	      {
	        popHostContainer(workInProgress);
	        popTopLevelContextObject(workInProgress);
	        var _effectTag = workInProgress.effectTag;
	        if (_effectTag & ShouldCapture) {
	          workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostComponent:
	      {
	        popHostContext(workInProgress);
	        return null;
	      }
	    case TimeoutComponent:
	      {
	        var _effectTag2 = workInProgress.effectTag;
	        if (_effectTag2 & ShouldCapture) {
	          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
	          return workInProgress;
	        }
	        return null;
	      }
	    case HostPortal:
	      popHostContainer(workInProgress);
	      return null;
	    case ContextProvider:
	      popProvider(workInProgress);
	      return null;
	    default:
	      return null;
	  }
	}

	function unwindInterruptedWork(interruptedWork) {
	  if (enableProfilerTimer) {
	    if (interruptedWork.mode & ProfileMode) {
	      // Resume in case we're picking up on work that was paused.
	      resumeActualRenderTimerIfPaused();
	      recordElapsedActualRenderTime(interruptedWork);
	    }
	  }

	  switch (interruptedWork.tag) {
	    case ClassComponent:
	      {
	        popContextProvider(interruptedWork);
	        break;
	      }
	    case HostRoot:
	      {
	        popHostContainer(interruptedWork);
	        popTopLevelContextObject(interruptedWork);
	        break;
	      }
	    case HostComponent:
	      {
	        popHostContext(interruptedWork);
	        break;
	      }
	    case HostPortal:
	      popHostContainer(interruptedWork);
	      break;
	    case ContextProvider:
	      popProvider(interruptedWork);
	      break;
	    default:
	      break;
	  }
	}

	var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
	var hasCaughtError = ReactErrorUtils.hasCaughtError;
	var clearCaughtError = ReactErrorUtils.clearCaughtError;


	var didWarnAboutStateTransition = void 0;
	var didWarnSetStateChildContext = void 0;
	var warnAboutUpdateOnUnmounted = void 0;
	var warnAboutInvalidUpdates = void 0;

	{
	  didWarnAboutStateTransition = false;
	  didWarnSetStateChildContext = false;
	  var didWarnStateUpdateForUnmountedComponent = {};

	  warnAboutUpdateOnUnmounted = function (fiber) {
	    // We show the whole stack but dedupe on the top component's name because
	    // the problematic code almost always lies inside that component.
	    var componentName = getComponentName(fiber) || 'ReactClass';
	    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
	      return;
	    }
	    warning(false, "Can't call setState (or forceUpdate) on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in the ' + 'componentWillUnmount method.%s', getStackAddendumByWorkInProgressFiber(fiber));
	    didWarnStateUpdateForUnmountedComponent[componentName] = true;
	  };

	  warnAboutInvalidUpdates = function (instance) {
	    switch (ReactDebugCurrentFiber.phase) {
	      case 'getChildContext':
	        if (didWarnSetStateChildContext) {
	          return;
	        }
	        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
	        didWarnSetStateChildContext = true;
	        break;
	      case 'render':
	        if (didWarnAboutStateTransition) {
	          return;
	        }
	        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
	        didWarnAboutStateTransition = true;
	        break;
	    }
	  };
	}

	// Represents the current time in ms.
	var originalStartTimeMs = now();
	var mostRecentCurrentTime = msToExpirationTime(0);
	var mostRecentCurrentTimeMs = originalStartTimeMs;

	// Used to ensure computeUniqueAsyncExpiration is monotonically increases.
	var lastUniqueAsyncExpiration = 0;

	// Represents the expiration time that incoming updates should use. (If this
	// is NoWork, use the default strategy: async updates in async mode, sync
	// updates in sync mode.)
	var expirationContext = NoWork;

	var isWorking = false;

	// The next work in progress fiber that we're currently working on.
	var nextUnitOfWork = null;
	var nextRoot = null;
	// The time at which we're currently rendering work.
	var nextRenderExpirationTime = NoWork;
	var nextLatestTimeoutMs = -1;
	var nextRenderIsExpired = false;

	// The next fiber with an effect that we're currently committing.
	var nextEffect = null;

	var isCommitting$1 = false;

	var isRootReadyForCommit = false;

	var legacyErrorBoundariesThatAlreadyFailed = null;

	// Used for performance tracking.
	var interruptedBy = null;

	var stashedWorkInProgressProperties = void 0;
	var replayUnitOfWork = void 0;
	var isReplayingFailedUnitOfWork = void 0;
	var originalReplayError = void 0;
	var rethrowOriginalError = void 0;
	if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	  stashedWorkInProgressProperties = null;
	  isReplayingFailedUnitOfWork = false;
	  originalReplayError = null;
	  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isAsync) {
	    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
	      // Don't replay promises. Treat everything else like an error.
	      // TODO: Need to figure out a different strategy if/when we add
	      // support for catching other types.
	      return;
	    }

	    // Restore the original state of the work-in-progress
	    if (stashedWorkInProgressProperties === null) {
	      // This should never happen. Don't throw because this code is DEV-only.
	      warning(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
	      return;
	    }
	    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

	    switch (failedUnitOfWork.tag) {
	      case HostRoot:
	        popHostContainer(failedUnitOfWork);
	        popTopLevelContextObject(failedUnitOfWork);
	        break;
	      case HostComponent:
	        popHostContext(failedUnitOfWork);
	        break;
	      case ClassComponent:
	        popContextProvider(failedUnitOfWork);
	        break;
	      case HostPortal:
	        popHostContainer(failedUnitOfWork);
	        break;
	      case ContextProvider:
	        popProvider(failedUnitOfWork);
	        break;
	    }
	    // Replay the begin phase.
	    isReplayingFailedUnitOfWork = true;
	    originalReplayError = thrownValue;
	    invokeGuardedCallback$2(null, workLoop, null, isAsync);
	    isReplayingFailedUnitOfWork = false;
	    originalReplayError = null;
	    if (hasCaughtError()) {
	      clearCaughtError();

	      if (enableProfilerTimer) {
	        if (failedUnitOfWork.mode & ProfileMode) {
	          recordElapsedActualRenderTime(failedUnitOfWork);
	        }

	        // Stop "base" render timer again (after the re-thrown error).
	        stopBaseRenderTimerIfRunning();
	      }
	    } else {
	      // If the begin phase did not fail the second time, set this pointer
	      // back to the original value.
	      nextUnitOfWork = failedUnitOfWork;
	    }
	  };
	  rethrowOriginalError = function () {
	    throw originalReplayError;
	  };
	}

	function resetStack() {
	  if (nextUnitOfWork !== null) {
	    var interruptedWork = nextUnitOfWork.return;
	    while (interruptedWork !== null) {
	      unwindInterruptedWork(interruptedWork);
	      interruptedWork = interruptedWork.return;
	    }
	  }

	  {
	    ReactStrictModeWarnings.discardPendingWarnings();
	    checkThatStackIsEmpty();
	  }

	  nextRoot = null;
	  nextRenderExpirationTime = NoWork;
	  nextLatestTimeoutMs = -1;
	  nextRenderIsExpired = false;
	  nextUnitOfWork = null;

	  isRootReadyForCommit = false;
	}

	function commitAllHostEffects() {
	  while (nextEffect !== null) {
	    {
	      ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
	    }
	    recordEffect();

	    var effectTag = nextEffect.effectTag;

	    if (effectTag & ContentReset) {
	      commitResetTextContent(nextEffect);
	    }

	    if (effectTag & Ref) {
	      var current = nextEffect.alternate;
	      if (current !== null) {
	        commitDetachRef(current);
	      }
	    }

	    // The following switch statement is only concerned about placement,
	    // updates, and deletions. To avoid needing to add a case for every
	    // possible bitmap value, we remove the secondary effects from the
	    // effect tag and switch on that value.
	    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
	    switch (primaryEffectTag) {
	      case Placement:
	        {
	          commitPlacement(nextEffect);
	          // Clear the "placement" from effect tag so that we know that this is inserted, before
	          // any life-cycles like componentDidMount gets called.
	          // TODO: findDOMNode doesn't rely on this any more but isMounted
	          // does and isMounted is deprecated anyway so we should be able
	          // to kill this.
	          nextEffect.effectTag &= ~Placement;
	          break;
	        }
	      case PlacementAndUpdate:
	        {
	          // Placement
	          commitPlacement(nextEffect);
	          // Clear the "placement" from effect tag so that we know that this is inserted, before
	          // any life-cycles like componentDidMount gets called.
	          nextEffect.effectTag &= ~Placement;

	          // Update
	          var _current = nextEffect.alternate;
	          commitWork(_current, nextEffect);
	          break;
	        }
	      case Update:
	        {
	          var _current2 = nextEffect.alternate;
	          commitWork(_current2, nextEffect);
	          break;
	        }
	      case Deletion:
	        {
	          commitDeletion(nextEffect);
	          break;
	        }
	    }
	    nextEffect = nextEffect.nextEffect;
	  }

	  {
	    ReactDebugCurrentFiber.resetCurrentFiber();
	  }
	}

	function commitBeforeMutationLifecycles() {
	  while (nextEffect !== null) {
	    var effectTag = nextEffect.effectTag;

	    if (effectTag & Snapshot) {
	      recordEffect();
	      var current = nextEffect.alternate;
	      commitBeforeMutationLifeCycles(current, nextEffect);
	    }

	    // Don't cleanup effects yet;
	    // This will be done by commitAllLifeCycles()
	    nextEffect = nextEffect.nextEffect;
	  }
	}

	function commitAllLifeCycles(finishedRoot, currentTime, committedExpirationTime) {
	  {
	    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();

	    if (warnAboutDeprecatedLifecycles) {
	      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
	    }

	    if (warnAboutLegacyContextAPI) {
	      ReactStrictModeWarnings.flushLegacyContextWarning();
	    }
	  }
	  while (nextEffect !== null) {
	    var effectTag = nextEffect.effectTag;

	    if (effectTag & (Update | Callback)) {
	      recordEffect();
	      var current = nextEffect.alternate;
	      commitLifeCycles(finishedRoot, current, nextEffect, currentTime, committedExpirationTime);
	    }

	    if (effectTag & Ref) {
	      recordEffect();
	      commitAttachRef(nextEffect);
	    }

	    var next = nextEffect.nextEffect;
	    // Ensure that we clean these up so that we don't accidentally keep them.
	    // I'm not actually sure this matters because we can't reset firstEffect
	    // and lastEffect since they're on every node, not just the effectful
	    // ones. So we have to clean everything as we reuse nodes anyway.
	    nextEffect.nextEffect = null;
	    // Ensure that we reset the effectTag here so that we can rely on effect
	    // tags to reason about the current life-cycle.
	    nextEffect = next;
	  }
	}

	function isAlreadyFailedLegacyErrorBoundary(instance) {
	  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
	}

	function markLegacyErrorBoundaryAsFailed(instance) {
	  if (legacyErrorBoundariesThatAlreadyFailed === null) {
	    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
	  } else {
	    legacyErrorBoundariesThatAlreadyFailed.add(instance);
	  }
	}

	function commitRoot(finishedWork) {
	  isWorking = true;
	  isCommitting$1 = true;
	  startCommitTimer();

	  var root = finishedWork.stateNode;
	  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  var committedExpirationTime = root.pendingCommitExpirationTime;
	  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  root.pendingCommitExpirationTime = NoWork;

	  var currentTime = recalculateCurrentTime();

	  // Reset this to null before calling lifecycles
	  ReactCurrentOwner.current = null;

	  var firstEffect = void 0;
	  if (finishedWork.effectTag > PerformedWork) {
	    // A fiber's effect list consists only of its children, not itself. So if
	    // the root has an effect, we need to add it to the end of the list. The
	    // resulting list is the set that would belong to the root's parent, if
	    // it had one; that is, all the effects in the tree including the root.
	    if (finishedWork.lastEffect !== null) {
	      finishedWork.lastEffect.nextEffect = finishedWork;
	      firstEffect = finishedWork.firstEffect;
	    } else {
	      firstEffect = finishedWork;
	    }
	  } else {
	    // There is no effect on the root.
	    firstEffect = finishedWork.firstEffect;
	  }

	  prepareForCommit(root.containerInfo);

	  // Invoke instances of getSnapshotBeforeUpdate before mutation.
	  nextEffect = firstEffect;
	  startCommitSnapshotEffectsTimer();
	  while (nextEffect !== null) {
	    var didError = false;
	    var error = void 0;
	    {
	      invokeGuardedCallback$2(null, commitBeforeMutationLifecycles, null);
	      if (hasCaughtError()) {
	        didError = true;
	        error = clearCaughtError();
	      }
	    }
	    if (didError) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, error);
	      // Clean-up
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }
	  stopCommitSnapshotEffectsTimer();

	  if (enableProfilerTimer) {
	    // Mark the current commit time to be shared by all Profilers in this batch.
	    // This enables them to be grouped later.
	    recordCommitTime();
	  }

	  // Commit all the side-effects within a tree. We'll do this in two passes.
	  // The first pass performs all the host insertions, updates, deletions and
	  // ref unmounts.
	  nextEffect = firstEffect;
	  startCommitHostEffectsTimer();
	  while (nextEffect !== null) {
	    var _didError = false;
	    var _error = void 0;
	    {
	      invokeGuardedCallback$2(null, commitAllHostEffects, null);
	      if (hasCaughtError()) {
	        _didError = true;
	        _error = clearCaughtError();
	      }
	    }
	    if (_didError) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, _error);
	      // Clean-up
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }
	  stopCommitHostEffectsTimer();

	  resetAfterCommit(root.containerInfo);

	  // The work-in-progress tree is now the current tree. This must come after
	  // the first pass of the commit phase, so that the previous tree is still
	  // current during componentWillUnmount, but before the second pass, so that
	  // the finished work is current during componentDidMount/Update.
	  root.current = finishedWork;

	  // In the second pass we'll perform all life-cycles and ref callbacks.
	  // Life-cycles happen as a separate pass so that all placements, updates,
	  // and deletions in the entire tree have already been invoked.
	  // This pass also triggers any renderer-specific initial effects.
	  nextEffect = firstEffect;
	  startCommitLifeCyclesTimer();
	  while (nextEffect !== null) {
	    var _didError2 = false;
	    var _error2 = void 0;
	    {
	      invokeGuardedCallback$2(null, commitAllLifeCycles, null, root, currentTime, committedExpirationTime);
	      if (hasCaughtError()) {
	        _didError2 = true;
	        _error2 = clearCaughtError();
	      }
	    }
	    if (_didError2) {
	      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      captureCommitPhaseError(nextEffect, _error2);
	      if (nextEffect !== null) {
	        nextEffect = nextEffect.nextEffect;
	      }
	    }
	  }

	  if (enableProfilerTimer) {
	    {
	      checkActualRenderTimeStackEmpty();
	    }
	    resetActualRenderTimer();
	  }

	  isCommitting$1 = false;
	  isWorking = false;
	  stopCommitLifeCyclesTimer();
	  stopCommitTimer();
	  if (typeof onCommitRoot === 'function') {
	    onCommitRoot(finishedWork.stateNode);
	  }
	  if (true && ReactFiberInstrumentation_1.debugTool) {
	    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
	  }

	  markCommittedPriorityLevels(root, currentTime, root.current.expirationTime);
	  var remainingTime = findNextPendingPriorityLevel(root);
	  if (remainingTime === NoWork) {
	    // If there's no remaining work, we can clear the set of already failed
	    // error boundaries.
	    legacyErrorBoundariesThatAlreadyFailed = null;
	  }
	  return remainingTime;
	}

	function resetExpirationTime(workInProgress, renderTime) {
	  if (renderTime !== Never && workInProgress.expirationTime === Never) {
	    // The children of this component are hidden. Don't bubble their
	    // expiration times.
	    return;
	  }

	  // Check for pending updates.
	  var newExpirationTime = NoWork;
	  switch (workInProgress.tag) {
	    case HostRoot:
	    case ClassComponent:
	      {
	        var updateQueue = workInProgress.updateQueue;
	        if (updateQueue !== null) {
	          newExpirationTime = updateQueue.expirationTime;
	        }
	      }
	  }

	  // TODO: Calls need to visit stateNode

	  // Bubble up the earliest expiration time.
	  // (And "base" render timers if that feature flag is enabled)
	  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
	    var treeBaseTime = workInProgress.selfBaseTime;
	    var child = workInProgress.child;
	    while (child !== null) {
	      treeBaseTime += child.treeBaseTime;
	      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
	        newExpirationTime = child.expirationTime;
	      }
	      child = child.sibling;
	    }
	    workInProgress.treeBaseTime = treeBaseTime;
	  } else {
	    var _child = workInProgress.child;
	    while (_child !== null) {
	      if (_child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > _child.expirationTime)) {
	        newExpirationTime = _child.expirationTime;
	      }
	      _child = _child.sibling;
	    }
	  }

	  workInProgress.expirationTime = newExpirationTime;
	}

	function completeUnitOfWork(workInProgress) {
	  // Attempt to complete the current unit of work, then move to the
	  // next sibling. If there are no more siblings, return to the
	  // parent fiber.
	  while (true) {
	    // The current, flushed, state of this fiber is the alternate.
	    // Ideally nothing should rely on this, but relying on it here
	    // means that we don't need an additional field on the work in
	    // progress.
	    var current = workInProgress.alternate;
	    {
	      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
	    }

	    var returnFiber = workInProgress.return;
	    var siblingFiber = workInProgress.sibling;

	    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
	      // This fiber completed.
	      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
	      stopWorkTimer(workInProgress);
	      resetExpirationTime(workInProgress, nextRenderExpirationTime);
	      {
	        ReactDebugCurrentFiber.resetCurrentFiber();
	      }

	      if (next !== null) {
	        stopWorkTimer(workInProgress);
	        if (true && ReactFiberInstrumentation_1.debugTool) {
	          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	        }
	        // If completing this work spawned new work, do that next. We'll come
	        // back here again.
	        return next;
	      }

	      if (returnFiber !== null &&
	      // Do not append effects to parents if a sibling failed to complete
	      (returnFiber.effectTag & Incomplete) === NoEffect) {
	        // Append all the effects of the subtree and this fiber onto the effect
	        // list of the parent. The completion order of the children affects the
	        // side-effect order.
	        if (returnFiber.firstEffect === null) {
	          returnFiber.firstEffect = workInProgress.firstEffect;
	        }
	        if (workInProgress.lastEffect !== null) {
	          if (returnFiber.lastEffect !== null) {
	            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
	          }
	          returnFiber.lastEffect = workInProgress.lastEffect;
	        }

	        // If this fiber had side-effects, we append it AFTER the children's
	        // side-effects. We can perform certain side-effects earlier if
	        // needed, by doing multiple passes over the effect list. We don't want
	        // to schedule our own side-effect on our own list because if end up
	        // reusing children we'll schedule this effect onto itself since we're
	        // at the end.
	        var effectTag = workInProgress.effectTag;
	        // Skip both NoWork and PerformedWork tags when creating the effect list.
	        // PerformedWork effect is read by React DevTools but shouldn't be committed.
	        if (effectTag > PerformedWork) {
	          if (returnFiber.lastEffect !== null) {
	            returnFiber.lastEffect.nextEffect = workInProgress;
	          } else {
	            returnFiber.firstEffect = workInProgress;
	          }
	          returnFiber.lastEffect = workInProgress;
	        }
	      }

	      if (true && ReactFiberInstrumentation_1.debugTool) {
	        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	      }

	      if (siblingFiber !== null) {
	        // If there is more work to do in this returnFiber, do that next.
	        return siblingFiber;
	      } else if (returnFiber !== null) {
	        // If there's no more work in this returnFiber. Complete the returnFiber.
	        workInProgress = returnFiber;
	        continue;
	      } else {
	        // We've reached the root.
	        isRootReadyForCommit = true;
	        return null;
	      }
	    } else {
	      // This fiber did not complete because something threw. Pop values off
	      // the stack without entering the complete phase. If this is a boundary,
	      // capture values if possible.
	      var _next = unwindWork(workInProgress, nextRenderIsExpired, nextRenderExpirationTime);
	      // Because this fiber did not complete, don't reset its expiration time.
	      if (workInProgress.effectTag & DidCapture) {
	        // Restarting an error boundary
	        stopFailedWorkTimer(workInProgress);
	      } else {
	        stopWorkTimer(workInProgress);
	      }

	      {
	        ReactDebugCurrentFiber.resetCurrentFiber();
	      }

	      if (_next !== null) {
	        stopWorkTimer(workInProgress);
	        if (true && ReactFiberInstrumentation_1.debugTool) {
	          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	        }
	        // If completing this work spawned new work, do that next. We'll come
	        // back here again.
	        // Since we're restarting, remove anything that is not a host effect
	        // from the effect tag.
	        _next.effectTag &= HostEffectMask;
	        return _next;
	      }

	      if (returnFiber !== null) {
	        // Mark the parent fiber as incomplete and clear its effect list.
	        returnFiber.firstEffect = returnFiber.lastEffect = null;
	        returnFiber.effectTag |= Incomplete;
	      }

	      if (true && ReactFiberInstrumentation_1.debugTool) {
	        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
	      }

	      if (siblingFiber !== null) {
	        // If there is more work to do in this returnFiber, do that next.
	        return siblingFiber;
	      } else if (returnFiber !== null) {
	        // If there's no more work in this returnFiber. Complete the returnFiber.
	        workInProgress = returnFiber;
	        continue;
	      } else {
	        return null;
	      }
	    }
	  }

	  // Without this explicit null return Flow complains of invalid return type
	  // TODO Remove the above while(true) loop
	  // eslint-disable-next-line no-unreachable
	  return null;
	}

	function performUnitOfWork(workInProgress) {
	  // The current, flushed, state of this fiber is the alternate.
	  // Ideally nothing should rely on this, but relying on it here
	  // means that we don't need an additional field on the work in
	  // progress.
	  var current = workInProgress.alternate;

	  // See if beginning this work spawns more work.
	  startWorkTimer(workInProgress);
	  {
	    ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
	  }

	  if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
	  }

	  var next = void 0;
	  if (enableProfilerTimer) {
	    if (workInProgress.mode & ProfileMode) {
	      startBaseRenderTimer();
	    }

	    next = beginWork(current, workInProgress, nextRenderExpirationTime);

	    if (workInProgress.mode & ProfileMode) {
	      // Update "base" time if the render wasn't bailed out on.
	      recordElapsedBaseRenderTimeIfRunning(workInProgress);
	      stopBaseRenderTimerIfRunning();
	    }
	  } else {
	    next = beginWork(current, workInProgress, nextRenderExpirationTime);
	  }

	  {
	    ReactDebugCurrentFiber.resetCurrentFiber();
	    if (isReplayingFailedUnitOfWork) {
	      // Currently replaying a failed unit of work. This should be unreachable,
	      // because the render phase is meant to be idempotent, and it should
	      // have thrown again. Since it didn't, rethrow the original error, so
	      // React's internal stack is not misaligned.
	      rethrowOriginalError();
	    }
	  }
	  if (true && ReactFiberInstrumentation_1.debugTool) {
	    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
	  }

	  if (next === null) {
	    // If this doesn't spawn new work, complete the current work.
	    next = completeUnitOfWork(workInProgress);
	  }

	  ReactCurrentOwner.current = null;

	  return next;
	}

	function workLoop(isAsync) {
	  if (!isAsync) {
	    // Flush all expired work.
	    while (nextUnitOfWork !== null) {
	      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
	    }
	  } else {
	    // Flush asynchronous work until the deadline runs out of time.
	    while (nextUnitOfWork !== null && !shouldYield()) {
	      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
	    }

	    if (enableProfilerTimer) {
	      // If we didn't finish, pause the "actual" render timer.
	      // We'll restart it when we resume work.
	      pauseActualRenderTimerIfRunning();
	    }
	  }
	}

	function renderRoot(root, expirationTime, isAsync) {
	  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  isWorking = true;

	  // Check if we're starting from a fresh stack, or if we're resuming from
	  // previously yielded work.
	  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
	    // Reset the stack and start working from the root.
	    resetStack();
	    nextRoot = root;
	    nextRenderExpirationTime = expirationTime;
	    nextLatestTimeoutMs = -1;
	    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
	    root.pendingCommitExpirationTime = NoWork;
	  }

	  var didFatal = false;

	  nextRenderIsExpired = !isAsync || nextRenderExpirationTime <= mostRecentCurrentTime;

	  startWorkLoopTimer(nextUnitOfWork);

	  do {
	    try {
	      workLoop(isAsync);
	    } catch (thrownValue) {
	      if (enableProfilerTimer) {
	        // Stop "base" render timer in the event of an error.
	        stopBaseRenderTimerIfRunning();
	      }

	      if (nextUnitOfWork === null) {
	        // This is a fatal error.
	        didFatal = true;
	        onUncaughtError(thrownValue);
	      } else {
	        {
	          // Reset global debug state
	          // We assume this is defined in DEV
	          resetCurrentlyProcessingQueue();
	        }

	        var failedUnitOfWork = nextUnitOfWork;
	        if (true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
	          replayUnitOfWork(failedUnitOfWork, thrownValue, isAsync);
	        }

	        // TODO: we already know this isn't true in some cases.
	        // At least this shows a nicer error message until we figure out the cause.
	        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
	        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

	        var sourceFiber = nextUnitOfWork;
	        var returnFiber = sourceFiber.return;
	        if (returnFiber === null) {
	          // This is the root. The root could capture its own errors. However,
	          // we don't know if it errors before or after we pushed the host
	          // context. This information is needed to avoid a stack mismatch.
	          // Because we're not sure, treat this as a fatal error. We could track
	          // which phase it fails in, but doesn't seem worth it. At least
	          // for now.
	          didFatal = true;
	          onUncaughtError(thrownValue);
	          break;
	        }
	        throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderIsExpired, nextRenderExpirationTime, mostRecentCurrentTimeMs);
	        nextUnitOfWork = completeUnitOfWork(sourceFiber);
	      }
	    }
	    break;
	  } while (true);

	  // We're done performing work. Time to clean up.
	  var didCompleteRoot = false;
	  isWorking = false;

	  // Yield back to main thread.
	  if (didFatal) {
	    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	    interruptedBy = null;
	    // There was a fatal error.
	    {
	      resetStackAfterFatalErrorInDev();
	    }
	    return null;
	  } else if (nextUnitOfWork === null) {
	    // We reached the root.
	    if (isRootReadyForCommit) {
	      didCompleteRoot = true;
	      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	      interruptedBy = null;
	      // The root successfully completed. It's ready for commit.
	      root.pendingCommitExpirationTime = expirationTime;
	      var finishedWork = root.current.alternate;
	      return finishedWork;
	    } else {
	      // The root did not complete.
	      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	      interruptedBy = null;
	      !!nextRenderIsExpired ? invariant(false, 'Expired work should have completed. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	      markSuspendedPriorityLevel(root, expirationTime);
	      if (nextLatestTimeoutMs >= 0) {
	        setTimeout(function () {
	          retrySuspendedRoot(root, expirationTime);
	        }, nextLatestTimeoutMs);
	      }
	      var firstUnblockedExpirationTime = findNextPendingPriorityLevel(root);
	      onBlock(firstUnblockedExpirationTime);
	      return null;
	    }
	  } else {
	    stopWorkLoopTimer(interruptedBy, didCompleteRoot);
	    interruptedBy = null;
	    // There's more work to do, but we ran out of time. Yield back to
	    // the renderer.
	    return null;
	  }
	}

	function dispatch(sourceFiber, value, expirationTime) {
	  !(!isWorking || isCommitting$1) ? invariant(false, 'dispatch: Cannot dispatch during the render phase.') : void 0;

	  var fiber = sourceFiber.return;
	  while (fiber !== null) {
	    switch (fiber.tag) {
	      case ClassComponent:
	        var ctor = fiber.type;
	        var instance = fiber.stateNode;
	        if (typeof ctor.getDerivedStateFromCatch === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
	          var errorInfo = createCapturedValue(value, sourceFiber);
	          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
	          enqueueUpdate(fiber, update, expirationTime);
	          scheduleWork$1(fiber, expirationTime);
	          return;
	        }
	        break;
	      case HostRoot:
	        {
	          var _errorInfo = createCapturedValue(value, sourceFiber);
	          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
	          enqueueUpdate(fiber, _update, expirationTime);
	          scheduleWork$1(fiber, expirationTime);
	          return;
	        }
	    }
	    fiber = fiber.return;
	  }

	  if (sourceFiber.tag === HostRoot) {
	    // Error was thrown at the root. There is no parent, so the root
	    // itself should capture it.
	    var rootFiber = sourceFiber;
	    var _errorInfo2 = createCapturedValue(value, rootFiber);
	    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
	    enqueueUpdate(rootFiber, _update2, expirationTime);
	    scheduleWork$1(rootFiber, expirationTime);
	  }
	}

	function captureCommitPhaseError(fiber, error) {
	  return dispatch(fiber, error, Sync);
	}

	function computeAsyncExpiration(currentTime) {
	  // Given the current clock time, returns an expiration time. We use rounding
	  // to batch like updates together.
	  // Should complete within ~5000ms. 5250ms max.
	  var expirationMs = 5000;
	  var bucketSizeMs = 250;
	  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
	}

	function computeInteractiveExpiration(currentTime) {
	  var expirationMs = void 0;
	  // We intentionally set a higher expiration time for interactive updates in
	  // dev than in production.
	  // If the main thread is being blocked so long that you hit the expiration,
	  // it's a problem that could be solved with better scheduling.
	  // People will be more likely to notice this and fix it with the long
	  // expiration time in development.
	  // In production we opt for better UX at the risk of masking scheduling
	  // problems, by expiring fast.
	  {
	    // Should complete within ~500ms. 600ms max.
	    expirationMs = 500;
	  }
	  var bucketSizeMs = 100;
	  return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
	}

	// Creates a unique async expiration time.
	function computeUniqueAsyncExpiration() {
	  var currentTime = recalculateCurrentTime();
	  var result = computeAsyncExpiration(currentTime);
	  if (result <= lastUniqueAsyncExpiration) {
	    // Since we assume the current time monotonically increases, we only hit
	    // this branch when computeUniqueAsyncExpiration is fired multiple times
	    // within a 200ms window (or whatever the async bucket size is).
	    result = lastUniqueAsyncExpiration + 1;
	  }
	  lastUniqueAsyncExpiration = result;
	  return lastUniqueAsyncExpiration;
	}

	function computeExpirationForFiber(currentTime, fiber) {
	  var expirationTime = void 0;
	  if (expirationContext !== NoWork) {
	    // An explicit expiration context was set;
	    expirationTime = expirationContext;
	  } else if (isWorking) {
	    if (isCommitting$1) {
	      // Updates that occur during the commit phase should have sync priority
	      // by default.
	      expirationTime = Sync;
	    } else {
	      // Updates during the render phase should expire at the same time as
	      // the work that is being rendered.
	      expirationTime = nextRenderExpirationTime;
	    }
	  } else {
	    // No explicit expiration context was set, and we're not currently
	    // performing work. Calculate a new expiration time.
	    if (fiber.mode & AsyncMode) {
	      if (isBatchingInteractiveUpdates) {
	        // This is an interactive update
	        expirationTime = computeInteractiveExpiration(currentTime);
	      } else {
	        // This is an async update
	        expirationTime = computeAsyncExpiration(currentTime);
	      }
	    } else {
	      // This is a sync update
	      expirationTime = Sync;
	    }
	  }
	  if (isBatchingInteractiveUpdates) {
	    // This is an interactive update. Keep track of the lowest pending
	    // interactive expiration time. This allows us to synchronously flush
	    // all interactive updates when needed.
	    if (lowestPendingInteractiveExpirationTime === NoWork || expirationTime > lowestPendingInteractiveExpirationTime) {
	      lowestPendingInteractiveExpirationTime = expirationTime;
	    }
	  }
	  return expirationTime;
	}

	// TODO: Rename this to scheduleTimeout or something
	function suspendRoot(root, thenable, timeoutMs, suspendedTime) {
	  // Schedule the timeout.
	  if (timeoutMs >= 0 && nextLatestTimeoutMs < timeoutMs) {
	    nextLatestTimeoutMs = timeoutMs;
	  }
	}

	function retrySuspendedRoot(root, suspendedTime) {
	  markPingedPriorityLevel(root, suspendedTime);
	  var retryTime = findNextPendingPriorityLevel(root);
	  if (retryTime !== NoWork) {
	    requestRetry(root, retryTime);
	  }
	}

	function scheduleWork$1(fiber, expirationTime) {
	  recordScheduleUpdate();

	  {
	    if (fiber.tag === ClassComponent) {
	      var instance = fiber.stateNode;
	      warnAboutInvalidUpdates(instance);
	    }
	  }

	  var node = fiber;
	  while (node !== null) {
	    // Walk the parent path to the root and update each node's
	    // expiration time.
	    if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
	      node.expirationTime = expirationTime;
	    }
	    if (node.alternate !== null) {
	      if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
	        node.alternate.expirationTime = expirationTime;
	      }
	    }
	    if (node.return === null) {
	      if (node.tag === HostRoot) {
	        var root = node.stateNode;
	        if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime < nextRenderExpirationTime) {
	          // This is an interruption. (Used for performance tracking.)
	          interruptedBy = fiber;
	          resetStack();
	        }
	        markPendingPriorityLevel(root, expirationTime);
	        var nextExpirationTimeToWorkOn = findNextPendingPriorityLevel(root);
	        if (
	        // If we're in the render phase, we don't need to schedule this root
	        // for an update, because we'll do it before we exit...
	        !isWorking || isCommitting$1 ||
	        // ...unless this is a different root than the one we're rendering.
	        nextRoot !== root) {
	          requestWork(root, nextExpirationTimeToWorkOn);
	        }
	        if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
	          invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
	        }
	      } else {
	        {
	          if (fiber.tag === ClassComponent) {
	            warnAboutUpdateOnUnmounted(fiber);
	          }
	        }
	        return;
	      }
	    }
	    node = node.return;
	  }
	}

	function recalculateCurrentTime() {
	  // Subtract initial time so it fits inside 32bits
	  mostRecentCurrentTimeMs = now() - originalStartTimeMs;
	  mostRecentCurrentTime = msToExpirationTime(mostRecentCurrentTimeMs);
	  return mostRecentCurrentTime;
	}

	function deferredUpdates(fn) {
	  var previousExpirationContext = expirationContext;
	  var currentTime = recalculateCurrentTime();
	  expirationContext = computeAsyncExpiration(currentTime);
	  try {
	    return fn();
	  } finally {
	    expirationContext = previousExpirationContext;
	  }
	}
	function syncUpdates(fn, a, b, c, d) {
	  var previousExpirationContext = expirationContext;
	  expirationContext = Sync;
	  try {
	    return fn(a, b, c, d);
	  } finally {
	    expirationContext = previousExpirationContext;
	  }
	}

	// TODO: Everything below this is written as if it has been lifted to the
	// renderers. I'll do this in a follow-up.

	// Linked-list of roots
	var firstScheduledRoot = null;
	var lastScheduledRoot = null;

	var callbackExpirationTime = NoWork;
	var callbackID = void 0;
	var isRendering = false;
	var nextFlushedRoot = null;
	var nextFlushedExpirationTime = NoWork;
	var lowestPendingInteractiveExpirationTime = NoWork;
	var deadlineDidExpire = false;
	var hasUnhandledError = false;
	var unhandledError = null;
	var deadline = null;

	var isBatchingUpdates = false;
	var isUnbatchingUpdates = false;
	var isBatchingInteractiveUpdates = false;

	var completedBatches = null;

	// Use these to prevent an infinite loop of nested updates
	var NESTED_UPDATE_LIMIT = 1000;
	var nestedUpdateCount = 0;

	var timeHeuristicForUnitOfWork = 1;

	function scheduleCallbackWithExpiration(expirationTime) {
	  if (callbackExpirationTime !== NoWork) {
	    // A callback is already scheduled. Check its expiration time (timeout).
	    if (expirationTime > callbackExpirationTime) {
	      // Existing callback has sufficient timeout. Exit.
	      return;
	    } else {
	      if (callbackID !== null) {
	        // Existing callback has insufficient timeout. Cancel and schedule a
	        // new one.
	        cancelDeferredCallback(callbackID);
	      }
	    }
	    // The request callback timer is already running. Don't start a new one.
	  } else {
	    startRequestCallbackTimer();
	  }

	  // Compute a timeout for the given expiration time.
	  var currentMs = now() - originalStartTimeMs;
	  var expirationMs = expirationTimeToMs(expirationTime);
	  var timeout = expirationMs - currentMs;

	  callbackExpirationTime = expirationTime;
	  callbackID = scheduleDeferredCallback(performAsyncWork, { timeout: timeout });
	}

	function requestRetry(root, expirationTime) {
	  if (root.remainingExpirationTime === NoWork || root.remainingExpirationTime < expirationTime) {
	    // For a retry, only update the remaining expiration time if it has a
	    // *lower priority* than the existing value. This is because, on a retry,
	    // we should attempt to coalesce as much as possible.
	    requestWork(root, expirationTime);
	  }
	}

	// requestWork is called by the scheduler whenever a root receives an update.
	// It's up to the renderer to call renderRoot at some point in the future.
	function requestWork(root, expirationTime) {
	  addRootToSchedule(root, expirationTime);

	  if (isRendering) {
	    // Prevent reentrancy. Remaining work will be scheduled at the end of
	    // the currently rendering batch.
	    return;
	  }

	  if (isBatchingUpdates) {
	    // Flush work at the end of the batch.
	    if (isUnbatchingUpdates) {
	      // ...unless we're inside unbatchedUpdates, in which case we should
	      // flush it now.
	      nextFlushedRoot = root;
	      nextFlushedExpirationTime = Sync;
	      performWorkOnRoot(root, Sync, false);
	    }
	    return;
	  }

	  // TODO: Get rid of Sync and use current time?
	  if (expirationTime === Sync) {
	    performSyncWork();
	  } else {
	    scheduleCallbackWithExpiration(expirationTime);
	  }
	}

	function addRootToSchedule(root, expirationTime) {
	  // Add the root to the schedule.
	  // Check if this root is already part of the schedule.
	  if (root.nextScheduledRoot === null) {
	    // This root is not already scheduled. Add it.
	    root.remainingExpirationTime = expirationTime;
	    if (lastScheduledRoot === null) {
	      firstScheduledRoot = lastScheduledRoot = root;
	      root.nextScheduledRoot = root;
	    } else {
	      lastScheduledRoot.nextScheduledRoot = root;
	      lastScheduledRoot = root;
	      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
	    }
	  } else {
	    // This root is already scheduled, but its priority may have increased.
	    var remainingExpirationTime = root.remainingExpirationTime;
	    if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
	      // Update the priority.
	      root.remainingExpirationTime = expirationTime;
	    }
	  }
	}

	function findHighestPriorityRoot() {
	  var highestPriorityWork = NoWork;
	  var highestPriorityRoot = null;
	  if (lastScheduledRoot !== null) {
	    var previousScheduledRoot = lastScheduledRoot;
	    var root = firstScheduledRoot;
	    while (root !== null) {
	      var remainingExpirationTime = root.remainingExpirationTime;
	      if (remainingExpirationTime === NoWork) {
	        // This root no longer has work. Remove it from the scheduler.

	        // TODO: This check is redudant, but Flow is confused by the branch
	        // below where we set lastScheduledRoot to null, even though we break
	        // from the loop right after.
	        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	        if (root === root.nextScheduledRoot) {
	          // This is the only root in the list.
	          root.nextScheduledRoot = null;
	          firstScheduledRoot = lastScheduledRoot = null;
	          break;
	        } else if (root === firstScheduledRoot) {
	          // This is the first root in the list.
	          var next = root.nextScheduledRoot;
	          firstScheduledRoot = next;
	          lastScheduledRoot.nextScheduledRoot = next;
	          root.nextScheduledRoot = null;
	        } else if (root === lastScheduledRoot) {
	          // This is the last root in the list.
	          lastScheduledRoot = previousScheduledRoot;
	          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
	          root.nextScheduledRoot = null;
	          break;
	        } else {
	          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
	          root.nextScheduledRoot = null;
	        }
	        root = previousScheduledRoot.nextScheduledRoot;
	      } else {
	        if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
	          // Update the priority, if it's higher
	          highestPriorityWork = remainingExpirationTime;
	          highestPriorityRoot = root;
	        }
	        if (root === lastScheduledRoot) {
	          break;
	        }
	        previousScheduledRoot = root;
	        root = root.nextScheduledRoot;
	      }
	    }
	  }

	  // If the next root is the same as the previous root, this is a nested
	  // update. To prevent an infinite loop, increment the nested update count.
	  var previousFlushedRoot = nextFlushedRoot;
	  if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot && highestPriorityWork === Sync) {
	    nestedUpdateCount++;
	  } else {
	    // Reset whenever we switch roots.
	    nestedUpdateCount = 0;
	  }
	  nextFlushedRoot = highestPriorityRoot;
	  nextFlushedExpirationTime = highestPriorityWork;
	}

	function performAsyncWork(dl) {
	  performWork(NoWork, true, dl);
	}

	function performSyncWork() {
	  performWork(Sync, false, null);
	}

	function performWork(minExpirationTime, isAsync, dl) {
	  deadline = dl;

	  // Keep working on roots until there's no more work, or until the we reach
	  // the deadline.
	  findHighestPriorityRoot();

	  if (enableProfilerTimer) {
	    resumeActualRenderTimerIfPaused();
	  }

	  if (enableUserTimingAPI && deadline !== null) {
	    var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
	    var timeout = expirationTimeToMs(nextFlushedExpirationTime);
	    stopRequestCallbackTimer(didExpire, timeout);
	  }

	  if (isAsync) {
	    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime) && (!deadlineDidExpire || recalculateCurrentTime() >= nextFlushedExpirationTime)) {
	      recalculateCurrentTime();
	      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, !deadlineDidExpire);
	      findHighestPriorityRoot();
	    }
	  } else {
	    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || minExpirationTime >= nextFlushedExpirationTime)) {
	      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
	      findHighestPriorityRoot();
	    }
	  }

	  // We're done flushing work. Either we ran out of time in this callback,
	  // or there's no more work left with sufficient priority.

	  // If we're inside a callback, set this to false since we just completed it.
	  if (deadline !== null) {
	    callbackExpirationTime = NoWork;
	    callbackID = null;
	  }
	  // If there's work left over, schedule a new callback.
	  if (nextFlushedExpirationTime !== NoWork) {
	    scheduleCallbackWithExpiration(nextFlushedExpirationTime);
	  }

	  // Clean-up.
	  deadline = null;
	  deadlineDidExpire = false;

	  finishRendering();
	}

	function flushRoot(root, expirationTime) {
	  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
	  // Perform work on root as if the given expiration time is the current time.
	  // This has the effect of synchronously flushing all work up to and
	  // including the given time.
	  nextFlushedRoot = root;
	  nextFlushedExpirationTime = expirationTime;
	  performWorkOnRoot(root, expirationTime, false);
	  // Flush any sync work that was scheduled by lifecycles
	  performSyncWork();
	  finishRendering();
	}

	function finishRendering() {
	  nestedUpdateCount = 0;

	  if (completedBatches !== null) {
	    var batches = completedBatches;
	    completedBatches = null;
	    for (var i = 0; i < batches.length; i++) {
	      var batch = batches[i];
	      try {
	        batch._onComplete();
	      } catch (error) {
	        if (!hasUnhandledError) {
	          hasUnhandledError = true;
	          unhandledError = error;
	        }
	      }
	    }
	  }

	  if (hasUnhandledError) {
	    var error = unhandledError;
	    unhandledError = null;
	    hasUnhandledError = false;
	    throw error;
	  }
	}

	function performWorkOnRoot(root, expirationTime, isAsync) {
	  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

	  isRendering = true;

	  // Check if this is async work or sync/expired work.
	  if (!isAsync) {
	    // Flush sync work.
	    var finishedWork = root.finishedWork;
	    if (finishedWork !== null) {
	      // This root is already complete. We can commit it.
	      completeRoot(root, finishedWork, expirationTime);
	    } else {
	      finishedWork = renderRoot(root, expirationTime, false);
	      if (finishedWork !== null) {
	        // We've completed the root. Commit it.
	        completeRoot(root, finishedWork, expirationTime);
	      }
	    }
	  } else {
	    // Flush async work.
	    var _finishedWork = root.finishedWork;
	    if (_finishedWork !== null) {
	      // This root is already complete. We can commit it.
	      completeRoot(root, _finishedWork, expirationTime);
	    } else {
	      _finishedWork = renderRoot(root, expirationTime, true);
	      if (_finishedWork !== null) {
	        // We've completed the root. Check the deadline one more time
	        // before committing.
	        if (!shouldYield()) {
	          // Still time left. Commit the root.
	          completeRoot(root, _finishedWork, expirationTime);
	        } else {
	          // There's no time left. Mark this root as complete. We'll come
	          // back and commit it later.
	          root.finishedWork = _finishedWork;

	          if (enableProfilerTimer) {
	            // If we didn't finish, pause the "actual" render timer.
	            // We'll restart it when we resume work.
	            pauseActualRenderTimerIfRunning();
	          }
	        }
	      }
	    }
	  }

	  isRendering = false;
	}

	function completeRoot(root, finishedWork, expirationTime) {
	  // Check if there's a batch that matches this expiration time.
	  var firstBatch = root.firstBatch;
	  if (firstBatch !== null && firstBatch._expirationTime <= expirationTime) {
	    if (completedBatches === null) {
	      completedBatches = [firstBatch];
	    } else {
	      completedBatches.push(firstBatch);
	    }
	    if (firstBatch._defer) {
	      // This root is blocked from committing by a batch. Unschedule it until
	      // we receive another update.
	      root.finishedWork = finishedWork;
	      root.remainingExpirationTime = NoWork;
	      return;
	    }
	  }

	  // Commit the root.
	  root.finishedWork = null;
	  root.remainingExpirationTime = commitRoot(finishedWork);
	}

	// When working on async work, the reconciler asks the renderer if it should
	// yield execution. For DOM, we implement this with requestIdleCallback.
	function shouldYield() {
	  if (deadline === null) {
	    return false;
	  }
	  if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
	    // Disregard deadline.didTimeout. Only expired work should be flushed
	    // during a timeout. This path is only hit for non-expired work.
	    return false;
	  }
	  deadlineDidExpire = true;
	  return true;
	}

	function onUncaughtError(error) {
	  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  // Unschedule this root so we don't work on it again until there's
	  // another update.
	  nextFlushedRoot.remainingExpirationTime = NoWork;
	  if (!hasUnhandledError) {
	    hasUnhandledError = true;
	    unhandledError = error;
	  }
	}

	function onBlock(remainingExpirationTime) {
	  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
	  // This root was blocked. Unschedule it until there's another update.
	  nextFlushedRoot.remainingExpirationTime = remainingExpirationTime;
	}

	// TODO: Batching should be implemented at the renderer level, not inside
	// the reconciler.
	function batchedUpdates$1(fn, a) {
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return fn(a);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	// TODO: Batching should be implemented at the renderer level, not inside
	// the reconciler.
	function unbatchedUpdates(fn, a) {
	  if (isBatchingUpdates && !isUnbatchingUpdates) {
	    isUnbatchingUpdates = true;
	    try {
	      return fn(a);
	    } finally {
	      isUnbatchingUpdates = false;
	    }
	  }
	  return fn(a);
	}

	// TODO: Batching should be implemented at the renderer level, not within
	// the reconciler.
	function flushSync(fn, a) {
	  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    return syncUpdates(fn, a);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    performSyncWork();
	  }
	}

	function interactiveUpdates$1(fn, a, b) {
	  if (isBatchingInteractiveUpdates) {
	    return fn(a, b);
	  }
	  // If there are any pending interactive updates, synchronously flush them.
	  // This needs to happen before we read any handlers, because the effect of
	  // the previous event may influence which handlers are called during
	  // this event.
	  if (!isBatchingUpdates && !isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
	    // Synchronously flush pending interactive updates.
	    performWork(lowestPendingInteractiveExpirationTime, false, null);
	    lowestPendingInteractiveExpirationTime = NoWork;
	  }
	  var previousIsBatchingInteractiveUpdates = isBatchingInteractiveUpdates;
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingInteractiveUpdates = true;
	  isBatchingUpdates = true;
	  try {
	    return fn(a, b);
	  } finally {
	    isBatchingInteractiveUpdates = previousIsBatchingInteractiveUpdates;
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performSyncWork();
	    }
	  }
	}

	function flushInteractiveUpdates$1() {
	  if (!isRendering && lowestPendingInteractiveExpirationTime !== NoWork) {
	    // Synchronously flush pending interactive updates.
	    performWork(lowestPendingInteractiveExpirationTime, false, null);
	    lowestPendingInteractiveExpirationTime = NoWork;
	  }
	}

	function flushControlled(fn) {
	  var previousIsBatchingUpdates = isBatchingUpdates;
	  isBatchingUpdates = true;
	  try {
	    syncUpdates(fn);
	  } finally {
	    isBatchingUpdates = previousIsBatchingUpdates;
	    if (!isBatchingUpdates && !isRendering) {
	      performWork(Sync, false, null);
	    }
	  }
	}

	// 0 is PROD, 1 is DEV.
	// Might add PROFILE later.


	var didWarnAboutNestedUpdates = void 0;

	{
	  didWarnAboutNestedUpdates = false;
	}

	function getContextForSubtree(parentComponent) {
	  if (!parentComponent) {
	    return emptyObject;
	  }

	  var fiber = get(parentComponent);
	  var parentContext = findCurrentUnmaskedContext(fiber);
	  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
	}

	function scheduleRootUpdate(current, element, expirationTime, callback) {
	  {
	    if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
	      didWarnAboutNestedUpdates = true;
	      warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
	    }
	  }

	  var update = createUpdate(expirationTime);
	  // Caution: React DevTools currently depends on this property
	  // being called "element".
	  update.payload = { element: element };

	  callback = callback === undefined ? null : callback;
	  if (callback !== null) {
	    !(typeof callback === 'function') ? warning(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
	    update.callback = callback;
	  }
	  enqueueUpdate(current, update, expirationTime);

	  scheduleWork$1(current, expirationTime);
	  return expirationTime;
	}

	function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
	  // TODO: If this is a nested container, this won't be the root.
	  var current = container.current;

	  {
	    if (ReactFiberInstrumentation_1.debugTool) {
	      if (current.alternate === null) {
	        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
	      } else if (element === null) {
	        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
	      } else {
	        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
	      }
	    }
	  }

	  var context = getContextForSubtree(parentComponent);
	  if (container.context === null) {
	    container.context = context;
	  } else {
	    container.pendingContext = context;
	  }

	  return scheduleRootUpdate(current, element, expirationTime, callback);
	}

	function findHostInstance(component) {
	  var fiber = get(component);
	  if (fiber === undefined) {
	    if (typeof component.render === 'function') {
	      invariant(false, 'Unable to find node on an unmounted component.');
	    } else {
	      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
	    }
	  }
	  var hostFiber = findCurrentHostFiber(fiber);
	  if (hostFiber === null) {
	    return null;
	  }
	  return hostFiber.stateNode;
	}

	function createContainer(containerInfo, isAsync, hydrate) {
	  return createFiberRoot(containerInfo, isAsync, hydrate);
	}

	function updateContainer(element, container, parentComponent, callback) {
	  var current = container.current;
	  var currentTime = recalculateCurrentTime();
	  var expirationTime = computeExpirationForFiber(currentTime, current);
	  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
	}

	function getPublicRootInstance(container) {
	  var containerFiber = container.current;
	  if (!containerFiber.child) {
	    return null;
	  }
	  switch (containerFiber.child.tag) {
	    case HostComponent:
	      return getPublicInstance(containerFiber.child.stateNode);
	    default:
	      return containerFiber.child.stateNode;
	  }
	}

	function findHostInstanceWithNoPortals(fiber) {
	  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
	  if (hostFiber === null) {
	    return null;
	  }
	  return hostFiber.stateNode;
	}

	function injectIntoDevTools(devToolsConfig) {
	  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

	  return injectInternals(_assign({}, devToolsConfig, {
	    findHostInstanceByFiber: function (fiber) {
	      var hostFiber = findCurrentHostFiber(fiber);
	      if (hostFiber === null) {
	        return null;
	      }
	      return hostFiber.stateNode;
	    },
	    findFiberByHostInstance: function (instance) {
	      if (!findFiberByHostInstance) {
	        // Might not be implemented by the renderer.
	        return null;
	      }
	      return findFiberByHostInstance(instance);
	    }
	  }));
	}

	// This file intentionally does *not* have the Flow annotation.
	// Don't add it. See `./inline-typed.js` for an explanation.



	var DOMRenderer = Object.freeze({
		updateContainerAtExpirationTime: updateContainerAtExpirationTime,
		createContainer: createContainer,
		updateContainer: updateContainer,
		flushRoot: flushRoot,
		requestWork: requestWork,
		computeUniqueAsyncExpiration: computeUniqueAsyncExpiration,
		batchedUpdates: batchedUpdates$1,
		unbatchedUpdates: unbatchedUpdates,
		deferredUpdates: deferredUpdates,
		syncUpdates: syncUpdates,
		interactiveUpdates: interactiveUpdates$1,
		flushInteractiveUpdates: flushInteractiveUpdates$1,
		flushControlled: flushControlled,
		flushSync: flushSync,
		getPublicRootInstance: getPublicRootInstance,
		findHostInstance: findHostInstance,
		findHostInstanceWithNoPortals: findHostInstanceWithNoPortals,
		injectIntoDevTools: injectIntoDevTools
	});

	function createPortal$1(children, containerInfo,
	// TODO: figure out the API for cross-renderer implementation.
	implementation) {
	  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

	  return {
	    // This tag allow us to uniquely identify this as a React Portal
	    $$typeof: REACT_PORTAL_TYPE,
	    key: key == null ? null : '' + key,
	    children: children,
	    containerInfo: containerInfo,
	    implementation: implementation
	  };
	}

	// TODO: this is special because it gets imported during build.

	var ReactVersion = '16.4.1';

	// TODO: This type is shared between the reconciler and ReactDOM, but will
	// eventually be lifted out to the renderer.
	var topLevelUpdateWarnings = void 0;
	var warnOnInvalidCallback = void 0;
	var didWarnAboutUnstableCreatePortal = false;

	{
	  if (typeof Map !== 'function' ||
	  // $FlowIssue Flow incorrectly thinks Map has no prototype
	  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
	  // $FlowIssue Flow incorrectly thinks Set has no prototype
	  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
	    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
	  }

	  topLevelUpdateWarnings = function (container) {
	    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
	      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
	      if (hostInstance) {
	        !(hostInstance.parentNode === container) ? warning(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
	      }
	    }

	    var isRootRenderedBySomeReact = !!container._reactRootContainer;
	    var rootEl = getReactRootElementInContainer(container);
	    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

	    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warning(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warning(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
	  };

	  warnOnInvalidCallback = function (callback, callerName) {
	    !(callback === null || typeof callback === 'function') ? warning(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
	  };
	}

	injection$2.injectFiberControlledHostComponent(ReactDOMFiberComponent);

	function ReactBatch(root) {
	  var expirationTime = computeUniqueAsyncExpiration();
	  this._expirationTime = expirationTime;
	  this._root = root;
	  this._next = null;
	  this._callbacks = null;
	  this._didComplete = false;
	  this._hasChildren = false;
	  this._children = null;
	  this._defer = true;
	}
	ReactBatch.prototype.render = function (children) {
	  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
	  this._hasChildren = true;
	  this._children = children;
	  var internalRoot = this._root._internalRoot;
	  var expirationTime = this._expirationTime;
	  var work = new ReactWork();
	  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
	  return work;
	};
	ReactBatch.prototype.then = function (onComplete) {
	  if (this._didComplete) {
	    onComplete();
	    return;
	  }
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    callbacks = this._callbacks = [];
	  }
	  callbacks.push(onComplete);
	};
	ReactBatch.prototype.commit = function () {
	  var internalRoot = this._root._internalRoot;
	  var firstBatch = internalRoot.firstBatch;
	  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

	  if (!this._hasChildren) {
	    // This batch is empty. Return.
	    this._next = null;
	    this._defer = false;
	    return;
	  }

	  var expirationTime = this._expirationTime;

	  // Ensure this is the first batch in the list.
	  if (firstBatch !== this) {
	    // This batch is not the earliest batch. We need to move it to the front.
	    // Update its expiration time to be the expiration time of the earliest
	    // batch, so that we can flush it without flushing the other batches.
	    if (this._hasChildren) {
	      expirationTime = this._expirationTime = firstBatch._expirationTime;
	      // Rendering this batch again ensures its children will be the final state
	      // when we flush (updates are processed in insertion order: last
	      // update wins).
	      // TODO: This forces a restart. Should we print a warning?
	      this.render(this._children);
	    }

	    // Remove the batch from the list.
	    var previous = null;
	    var batch = firstBatch;
	    while (batch !== this) {
	      previous = batch;
	      batch = batch._next;
	    }
	    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
	    previous._next = batch._next;

	    // Add it to the front.
	    this._next = firstBatch;
	    firstBatch = internalRoot.firstBatch = this;
	  }

	  // Synchronously flush all the work up to this batch's expiration time.
	  this._defer = false;
	  flushRoot(internalRoot, expirationTime);

	  // Pop the batch from the list.
	  var next = this._next;
	  this._next = null;
	  firstBatch = internalRoot.firstBatch = next;

	  // Append the next earliest batch's children to the update queue.
	  if (firstBatch !== null && firstBatch._hasChildren) {
	    firstBatch.render(firstBatch._children);
	  }
	};
	ReactBatch.prototype._onComplete = function () {
	  if (this._didComplete) {
	    return;
	  }
	  this._didComplete = true;
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    return;
	  }
	  // TODO: Error handling.
	  for (var i = 0; i < callbacks.length; i++) {
	    var _callback = callbacks[i];
	    _callback();
	  }
	};

	function ReactWork() {
	  this._callbacks = null;
	  this._didCommit = false;
	  // TODO: Avoid need to bind by replacing callbacks in the update queue with
	  // list of Work objects.
	  this._onCommit = this._onCommit.bind(this);
	}
	ReactWork.prototype.then = function (onCommit) {
	  if (this._didCommit) {
	    onCommit();
	    return;
	  }
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    callbacks = this._callbacks = [];
	  }
	  callbacks.push(onCommit);
	};
	ReactWork.prototype._onCommit = function () {
	  if (this._didCommit) {
	    return;
	  }
	  this._didCommit = true;
	  var callbacks = this._callbacks;
	  if (callbacks === null) {
	    return;
	  }
	  // TODO: Error handling.
	  for (var i = 0; i < callbacks.length; i++) {
	    var _callback2 = callbacks[i];
	    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
	    _callback2();
	  }
	};

	function ReactRoot(container, isAsync, hydrate) {
	  var root = createContainer(container, isAsync, hydrate);
	  this._internalRoot = root;
	}
	ReactRoot.prototype.render = function (children, callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(children, root, null, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.unmount = function (callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(null, root, null, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
	  var root = this._internalRoot;
	  var work = new ReactWork();
	  callback = callback === undefined ? null : callback;
	  {
	    warnOnInvalidCallback(callback, 'render');
	  }
	  if (callback !== null) {
	    work.then(callback);
	  }
	  updateContainer(children, root, parentComponent, work._onCommit);
	  return work;
	};
	ReactRoot.prototype.createBatch = function () {
	  var batch = new ReactBatch(this);
	  var expirationTime = batch._expirationTime;

	  var internalRoot = this._internalRoot;
	  var firstBatch = internalRoot.firstBatch;
	  if (firstBatch === null) {
	    internalRoot.firstBatch = batch;
	    batch._next = null;
	  } else {
	    // Insert sorted by expiration time then insertion order
	    var insertAfter = null;
	    var insertBefore = firstBatch;
	    while (insertBefore !== null && insertBefore._expirationTime <= expirationTime) {
	      insertAfter = insertBefore;
	      insertBefore = insertBefore._next;
	    }
	    batch._next = insertBefore;
	    if (insertAfter !== null) {
	      insertAfter._next = batch;
	    }
	  }

	  return batch;
	};

	/**
	 * True if the supplied DOM node is a valid node element.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM is a valid DOM node.
	 * @internal
	 */
	function isValidContainer(node) {
	  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
	}

	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOCUMENT_NODE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function shouldHydrateDueToLegacyHeuristic(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
	}

	injection$3.injectRenderer(DOMRenderer);

	var warnedAboutHydrateAPI = false;

	function legacyCreateRootFromDOMContainer(container, forceHydrate) {
	  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
	  // First clear any existing content.
	  if (!shouldHydrate) {
	    var warned = false;
	    var rootSibling = void 0;
	    while (rootSibling = container.lastChild) {
	      {
	        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
	          warned = true;
	          warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
	        }
	      }
	      container.removeChild(rootSibling);
	    }
	  }
	  {
	    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
	      warnedAboutHydrateAPI = true;
	      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
	    }
	  }
	  // Legacy roots are not async by default.
	  var isAsync = false;
	  return new ReactRoot(container, isAsync, shouldHydrate);
	}

	function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
	  // TODO: Ensure all entry points contain this check
	  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

	  {
	    topLevelUpdateWarnings(container);
	  }

	  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
	  // member of intersection type." Whyyyyyy.
	  var root = container._reactRootContainer;
	  if (!root) {
	    // Initial mount
	    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
	    if (typeof callback === 'function') {
	      var originalCallback = callback;
	      callback = function () {
	        var instance = getPublicRootInstance(root._internalRoot);
	        originalCallback.call(instance);
	      };
	    }
	    // Initial mount should not be batched.
	    unbatchedUpdates(function () {
	      if (parentComponent != null) {
	        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
	      } else {
	        root.render(children, callback);
	      }
	    });
	  } else {
	    if (typeof callback === 'function') {
	      var _originalCallback = callback;
	      callback = function () {
	        var instance = getPublicRootInstance(root._internalRoot);
	        _originalCallback.call(instance);
	      };
	    }
	    // Update
	    if (parentComponent != null) {
	      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
	    } else {
	      root.render(children, callback);
	    }
	  }
	  return getPublicRootInstance(root._internalRoot);
	}

	function createPortal(children, container) {
	  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

	  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
	  // TODO: pass ReactDOM portal implementation as third argument
	  return createPortal$1(children, container, null, key);
	}

	var ReactDOM = {
	  createPortal: createPortal,

	  findDOMNode: function (componentOrElement) {
	    {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null && owner.stateNode !== null) {
	        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
	        !warnedAboutRefsInRender ? warning(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component') : void 0;
	        owner.stateNode._warnedAboutRefsInRender = true;
	      }
	    }
	    if (componentOrElement == null) {
	      return null;
	    }
	    if (componentOrElement.nodeType === ELEMENT_NODE) {
	      return componentOrElement;
	    }

	    return findHostInstance(componentOrElement);
	  },
	  hydrate: function (element, container, callback) {
	    // TODO: throw or warn if we couldn't hydrate?
	    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
	  },
	  render: function (element, container, callback) {
	    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
	  },
	  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
	    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
	    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
	  },
	  unmountComponentAtNode: function (container) {
	    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

	    if (container._reactRootContainer) {
	      {
	        var rootEl = getReactRootElementInContainer(container);
	        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
	        !!renderedByDifferentReact ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
	      }

	      // Unmount should not be batched.
	      unbatchedUpdates(function () {
	        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
	          container._reactRootContainer = null;
	        });
	      });
	      // If you call unmountComponentAtNode twice in quick succession, you'll
	      // get `true` twice. That's probably fine?
	      return true;
	    } else {
	      {
	        var _rootEl = getReactRootElementInContainer(container);
	        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

	        // Check if the container itself is a React root node.
	        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

	        !!hasNonRootReactChild ? warning(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	  },


	  // Temporary alias since we already shipped React 16 RC with it.
	  // TODO: remove in React 17.
	  unstable_createPortal: function () {
	    if (!didWarnAboutUnstableCreatePortal) {
	      didWarnAboutUnstableCreatePortal = true;
	      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
	    }
	    return createPortal.apply(undefined, arguments);
	  },


	  unstable_batchedUpdates: batchedUpdates$1,

	  unstable_deferredUpdates: deferredUpdates,

	  unstable_interactiveUpdates: interactiveUpdates$1,

	  flushSync: flushSync,

	  unstable_flushControlled: flushControlled,

	  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
	    // For TapEventPlugin which is popular in open source
	    EventPluginHub: EventPluginHub,
	    // Used by test-utils
	    EventPluginRegistry: EventPluginRegistry,
	    EventPropagators: EventPropagators,
	    ReactControlledComponent: ReactControlledComponent,
	    ReactDOMComponentTree: ReactDOMComponentTree,
	    ReactDOMEventListener: ReactDOMEventListener
	  }
	};

	ReactDOM.unstable_createRoot = function createRoot(container, options) {
	  var hydrate = options != null && options.hydrate === true;
	  return new ReactRoot(container, true, hydrate);
	};

	var foundDevTools = injectIntoDevTools({
	  findFiberByHostInstance: getClosestInstanceFromNode,
	  bundleType: 1,
	  version: ReactVersion,
	  rendererPackageName: 'react-dom'
	});

	{
	  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
	    // If we're in Chrome or Firefox, provide a download link if not installed.
	    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	      var protocol = window.location.protocol;
	      // Don't warn in exotic cases like chrome-extension://.
	      if (/^(https?|file):$/.test(protocol)) {
	        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
	      }
	    }
	  }
	}



	var ReactDOM$2 = Object.freeze({
		default: ReactDOM
	});

	var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

	// TODO: decide on the top-level export form.
	// This is hacky but makes it work with both Rollup and Jest.
	var reactDom = ReactDOM$3.default ? ReactDOM$3.default : ReactDOM$3;

	module.exports = reactDom;
	  })();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(23);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ }),
/* 23 */
/***/ (function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(25);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ }),
/* 25 */
/***/ (function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE file in the root directory of this source tree.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(27);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(13);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _semanticUiReact = __webpack_require__(31);

	var _utils = __webpack_require__(696);

	var _warning = __webpack_require__(697);

	var _warning2 = _interopRequireDefault(_warning);

	var numberableType = function numberableType(props, propName, componentName) {
	  (0, _warning2["default"])(!isNaN(parseInt(props[propName])), "Invalid " + propName + " '" + props.size + "' sent to '" + componentName + "'. Requires an\n    int or string capable of conversion to an int.\n    Check the render method of == '" + componentName + "'. == ");
	};

	var Cropper = (function (_Component) {
	  _inherits(Cropper, _Component);

	  function Cropper() {
	    _classCallCheck(this, Cropper);

	    _get(Object.getPrototypeOf(Cropper.prototype), "constructor", this).call(this);

	    this.state = {
	      dragging: false,
	      image: {},
	      mouse: {
	        x: null,
	        y: null
	      },
	      preview: null,
	      zoom: 1
	    };

	    this.listeners = [];
	  }

	  _createClass(Cropper, [{
	    key: "fitImageToCanvas",
	    value: function fitImageToCanvas(width, height) {
	      var scaledHeight, scaledWidth;

	      var canvasAspectRatio = this.props.height / this.props.width;
	      var imageAspectRatio = height / width;

	      if (canvasAspectRatio > imageAspectRatio) {
	        scaledHeight = this.props.height;
	        var scaleRatio = scaledHeight / height;
	        scaledWidth = width * scaleRatio;
	      } else {
	        scaledWidth = this.props.width;
	        var scaleRatio = scaledWidth / width;
	        scaledHeight = height * scaleRatio;
	      }

	      return { width: scaledWidth, height: scaledHeight };
	    }
	  }, {
	    key: "prepareImage",
	    value: function prepareImage(imageUri) {
	      var _this = this;

	      var img = new Image();
	      if (!(0, _utils.isDataURL)(imageUri)) img.crossOrigin = 'anonymous';
	      img.onload = function () {
	        var scaledImage = _this.fitImageToCanvas(img.width, img.height);
	        scaledImage.resource = img;
	        scaledImage.x = 0;
	        scaledImage.y = 0;
	        _this.setState({ dragging: false, image: scaledImage, preview: _this.toDataURL() });
	      };
	      img.src = imageUri;
	    }
	  }, {
	    key: "mouseDownListener",
	    value: function mouseDownListener(e) {
	      this.setState({
	        image: this.state.image,
	        dragging: true,
	        mouse: {
	          x: null,
	          y: null
	        }
	      });
	    }
	  }, {
	    key: "preventSelection",
	    value: function preventSelection(e) {
	      if (this.state.dragging) {
	        e.preventDefault();
	        return false;
	      }
	    }
	  }, {
	    key: "mouseUpListener",
	    value: function mouseUpListener(e) {
	      this.setState({ dragging: false, preview: this.toDataURL() });
	    }
	  }, {
	    key: "mouseMoveListener",
	    value: function mouseMoveListener(e) {
	      if (!this.state.dragging) return;

	      var mouseX = e.clientX || e.touches[0].clientX;
	      var mouseY = e.clientY || e.touches[0].clientY;
	      var imageX = this.state.image.x;
	      var imageY = this.state.image.y;

	      var newImage = this.state.image;

	      if (this.state.mouse.x && this.state.mouse.y) {
	        var dx = this.state.mouse.x - mouseX;
	        var dy = this.state.mouse.y - mouseY;

	        var bounded = this.boundedCoords(imageX, imageY, dx, dy);

	        newImage.x = bounded.x;
	        newImage.y = bounded.y;
	      }

	      this.setState({
	        image: this.state.image,
	        mouse: {
	          x: mouseX,
	          y: mouseY
	        }
	      });
	    }
	  }, {
	    key: "boundedCoords",
	    value: function boundedCoords(x, y, dx, dy) {
	      var newX = x - dx;
	      var newY = y - dy;

	      var scaledWidth = this.state.image.width * this.state.zoom;
	      var dw = (scaledWidth - this.state.image.width) / 2;
	      var imageLeftEdge = this.state.image.x - dw;
	      var imageRightEdge = imageLeftEdge + scaledWidth;

	      var rightEdge = this.props.width;
	      var leftEdge = 0;

	      if (newX - dw > 0) {
	        x = dw;
	      } else if (newX < -scaledWidth + rightEdge) {
	        x = rightEdge - scaledWidth;
	      } else {
	        x = newX;
	      }

	      var scaledHeight = this.state.image.height * this.state.zoom;
	      var dh = (scaledHeight - this.state.image.height) / 2;
	      var imageTopEdge = this.state.image.y - dh;
	      var imageBottomEdge = imageTopEdge + scaledHeight;

	      var bottomEdge = this.props.height;
	      var topEdge = 0;
	      if (newY - dh > 0) {
	        y = dh;
	      } else if (newY < -scaledHeight + bottomEdge) {
	        y = bottomEdge - scaledHeight;
	      } else {
	        y = newY;
	      }

	      return { x: x, y: y };
	    }
	  }, {
	    key: "componentDidMount",
	    value: function componentDidMount() {
	      var _this2 = this;

	      var canvas = _reactDom2["default"].findDOMNode(this.refs.canvas);
	      var context = canvas.getContext("2d");
	      this.prepareImage(this.props.image);

	      this.listeners = {
	        mousemove: function mousemove(e) {
	          return _this2.mouseMoveListener(e);
	        },
	        mouseup: function mouseup(e) {
	          return _this2.mouseUpListener(e);
	        },
	        mousedown: function mousedown(e) {
	          return _this2.mouseDownListener(e);
	        }
	      };

	      window.addEventListener("mousemove", this.listeners.mousemove, false);
	      window.addEventListener("mouseup", this.listeners.mouseup, false);
	      canvas.addEventListener("mousedown", this.listeners.mousedown, false);

	      // make it work on mobile devices
	      window.addEventListener("touchmove", this.listeners.mousemove, false);
	      window.addEventListener("touchend", this.listeners.mouseup, false);
	      canvas.addEventListener("touchstart", this.listeners.mousedown, false);

	      document.onselectstart = function (e) {
	        return _this2.preventSelection(e);
	      };
	    }

	    // make sure we clean up listeners when unmounted.
	  }, {
	    key: "componentWillUnmount",
	    value: function componentWillUnmount() {
	      var canvas = _reactDom2["default"].findDOMNode(this.refs.canvas);
	      window.removeEventListener("mousemove", this.listeners.mousemove);
	      window.removeEventListener("mouseup", this.listeners.mouseup);
	      canvas.removeEventListener("mousedown", this.listeners.mousedown);

	      window.removeEventListener("touchmove", this.listeners.mousemove, false);
	      window.removeEventListener("touchend", this.listeners.mouseup, false);
	      canvas.removeEventListener("touchstart", this.listeners.mousedown, false);
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate() {
	      var context = _reactDom2["default"].findDOMNode(this.refs.canvas).getContext("2d");
	      context.clearRect(0, 0, this.props.width, this.props.height);
	      this.addImageToCanvas(context, this.state.image);
	    }

	    /* fitting original size image to maximum available canvas size */
	  }, {
	    key: "addImageToCanvasWithOriginalSize",
	    value: function addImageToCanvasWithOriginalSize(context, canvasWidth, canvasHeight, image) {
	      if (!image.resource) return;

	      var zoom = this.state.zoom;
	      var resource = image.resource;

	      context.save();
	      context.globalCompositeOperation = "destination-over";

	      var scaledHeight = undefined,
	          scaledWidth = undefined;

	      var canvasAspectRatio = canvasHeight / canvasWidth;
	      var imageAspectRatio = resource.height / resource.width;

	      if (canvasAspectRatio > imageAspectRatio) {
	        scaledHeight = canvasHeight;
	        var scaleRatio = canvasHeight / resource.height;
	        scaledWidth = resource.width * scaleRatio;
	      } else {
	        scaledWidth = canvasWidth;
	        var scaleRatio = canvasWidth / resource.width;
	        scaledHeight = resource.height * scaleRatio;
	      }

	      var zoomedWidth = scaledWidth * zoom;
	      var zoomedHeight = scaledHeight * zoom;

	      var scaleRatioX = canvasWidth / this.props.width;
	      var scaleRatioY = canvasHeight / this.props.height;

	      var x = image.x * scaleRatioX - (zoomedWidth - scaledWidth) / 2;
	      var y = image.y * scaleRatioY - (zoomedHeight - scaledHeight) / 2;

	      x = Math.min(x, 0);
	      y = Math.min(y, 0);
	      y = zoomedHeight + y >= canvasHeight ? y : y + (canvasHeight - (zoomedHeight + y));
	      x = zoomedWidth + x >= canvasWidth ? x : x + (canvasWidth - (zoomedWidth + x));

	      context.drawImage(resource, x, y, scaledWidth * zoom, scaledHeight * zoom);
	      context.restore();
	    }

	    /* getting original cropped image */
	  }, {
	    key: "getOriginalCroppedImage",
	    value: function getOriginalCroppedImage() {
	      var image = this.state.image;

	      var orCanvas = document.createElement('canvas');
	      var orCanvasContext = orCanvas.getContext('2d');

	      var initialCanvasHeight = this.props.height;
	      var initialCanvasWidth = this.props.width;
	      var imageAspectRatio = initialCanvasWidth / initialCanvasHeight;
	      var canvasWidth = undefined,
	          canvasHeight = undefined;

	      if (image.resource.width > image.resource.height) {
	        canvasHeight = image.resource.height;
	        canvasWidth = canvasHeight * imageAspectRatio;
	      } else {
	        canvasWidth = image.resource.width;
	        canvasHeight = canvasWidth / imageAspectRatio;
	      }

	      orCanvas.width = canvasWidth / this.state.zoom;
	      orCanvas.height = canvasHeight / this.state.zoom;

	      this.addImageToCanvasWithOriginalSize(orCanvasContext, orCanvas.width, orCanvas.height, image);

	      return orCanvas.toDataURL('image/jpeg', 0.9);
	    }
	  }, {
	    key: "addImageToCanvas",
	    value: function addImageToCanvas(context, image) {
	      if (!image.resource) return;
	      context.save();
	      context.globalCompositeOperation = "destination-over";
	      var scaledWidth = this.state.image.width * this.state.zoom;
	      var scaledHeight = this.state.image.height * this.state.zoom;

	      var x = image.x - (scaledWidth - this.state.image.width) / 2;
	      var y = image.y - (scaledHeight - this.state.image.height) / 2;

	      // need to make sure we aren't going out of bounds here...
	      x = Math.min(x, 0);
	      y = Math.min(y, 0);
	      y = scaledHeight + y >= this.props.height ? y : y + (this.props.height - (scaledHeight + y));
	      x = scaledWidth + x >= this.props.width ? x : x + (this.props.width - (scaledWidth + x));

	      context.drawImage(image.resource, x, y, image.width * this.state.zoom, image.height * this.state.zoom);
	      context.restore();
	    }
	  }, {
	    key: "toDataURL",
	    value: function toDataURL() {
	      var canvas = document.createElement("canvas");
	      var context = canvas.getContext("2d");

	      canvas.width = this.props.width;
	      canvas.height = this.props.height;

	      this.addImageToCanvas(context, {
	        resource: this.state.image.resource,
	        x: this.state.image.x,
	        y: this.state.image.y,
	        height: this.state.image.height,
	        width: this.state.image.width
	      });

	      return canvas.toDataURL();
	    }
	  }, {
	    key: "handleCrop",
	    value: function handleCrop() {
	      var image = this.state.image;
	      var _props = this.props;
	      var isOriginalSize = _props.isOriginalSize;
	      var onCrop = _props.onCrop;

	      var data = isOriginalSize ? this.getOriginalCroppedImage() : this.toDataURL();
	      onCrop(data);
	    }
	  }, {
	    key: "handleZoomUpdate",
	    value: function handleZoomUpdate() {
	      var newstate = this.state;
	      newstate.zoom = _reactDom2["default"].findDOMNode(this.refs.zoom).value;
	      this.setState({ newstate: newstate });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2["default"].createElement(
	        "div",
	        { className: "AvatarCropper-canvas" },
	        _react2["default"].createElement(
	          "div",
	          { className: "row" },
	          _react2["default"].createElement("canvas", {
	            ref: "canvas",
	            width: this.props.width,
	            height: this.props.height })
	        ),
	        _react2["default"].createElement(
	          "div",
	          { className: "row" },
	          _react2["default"].createElement("input", {
	            type: "range",
	            name: "zoom",
	            ref: "zoom",
	            onChange: this.handleZoomUpdate.bind(this),
	            style: { width: this.props.width },
	            min: "1",
	            max: "3",
	            step: "0.01",
	            defaultValue: "1"
	          })
	        ),
	        _react2["default"].createElement(
	          "div",
	          { className: "modal-footer" },
	          _react2["default"].createElement(
	            _semanticUiReact.Button,
	            { onClick: this.props.onRequestHide },
	            this.props.closeButtonCopy
	          ),
	          _react2["default"].createElement(
	            _semanticUiReact.Button,
	            { primary: true, onClick: this.handleCrop.bind(this) },
	            this.props.cropButtonCopy
	          )
	        )
	      );
	    }
	  }]);

	  return Cropper;
	})(_react.Component);

	Cropper.propTypes = {
	  image: _react2["default"].PropTypes.string.isRequired,
	  width: numberableType,
	  height: numberableType,
	  zoom: numberableType,
	  isOriginalSize: _react2["default"].PropTypes.bool
	};

	Cropper.defaultProps = {
	  width: 400, height: 400,
	  zoom: 1,
	  isOriginalSize: true
	};

	var AvatarCropper = (function (_React$Component) {
	  _inherits(AvatarCropper, _React$Component);

	  function AvatarCropper() {
	    _classCallCheck(this, AvatarCropper);

	    _get(Object.getPrototypeOf(AvatarCropper.prototype), "constructor", this).call(this);
	  }

	  _createClass(AvatarCropper, [{
	    key: "handleZoomUpdate",
	    value: function handleZoomUpdate() {
	      var zoom = _reactDom2["default"].findDOMNode(this.refs.zoom).value;
	      this.setState({ zoom: zoom });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _props$modalOptions = this.props.modalOptions;
	      var header = _props$modalOptions.header;
	      var content = _props$modalOptions.content;

	      var modalOptions = _objectWithoutProperties(_props$modalOptions, ["header", "content"]);

	      return _react2["default"].createElement(
	        _semanticUiReact.Modal,
	        _extends({
	          onClose: this.props.onRequestHide,
	          open: this.props.cropperOpen
	        }, modalOptions),
	        header && _react2["default"].createElement(
	          _semanticUiReact.Modal.Header,
	          null,
	          header
	        ),
	        _react2["default"].createElement(
	          "div",
	          { className: "modal-body" },
	          _react2["default"].createElement(
	            "div",
	            { className: "AvatarCropper-base" },
	            _react2["default"].createElement(Cropper, {
	              image: this.props.image,
	              width: this.props.width,
	              height: this.props.height,
	              onCrop: this.props.onCrop,
	              onRequestHide: this.props.onRequestHide,
	              closeButtonCopy: this.props.closeButtonCopy,
	              cropButtonCopy: this.props.cropButtonCopy
	            })
	          )
	        )
	      );
	    }
	  }]);

	  return AvatarCropper;
	})(_react2["default"].Component);

	AvatarCropper.propTypes = {
	  image: _react2["default"].PropTypes.string.isRequired,
	  onCrop: _react2["default"].PropTypes.func.isRequired,
	  closeButtonCopy: _react2["default"].PropTypes.string,
	  cropButtonCopy: _react2["default"].PropTypes.string,
	  width: numberableType,
	  height: numberableType,
	  onRequestHide: _react2["default"].PropTypes.func.isRequired,
	  modalOptions: _react2["default"].PropTypes.object //semantic ui react modal options
	};

	AvatarCropper.defaultProps = {
	  width: 400, height: 400,
	  closeButtonCopy: "Close", cropButtonCopy: "Crop and Save",
	  modalOptions: {}
	};

	exports["default"] = AvatarCropper;
	module.exports = exports["default"];

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(28);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(30)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../node_modules/css-loader/index.js!./styles.css", function() {
				var newContent = require("!!../node_modules/css-loader/index.js!./styles.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(29)();
	exports.push([module.id, ".AvatarCropper-base {\n  text-align: center;\n}\n\n.AvatarCropper-base input[type=range] {\n  display: inline-block;\n}\n\n.AvatarCropper-base input[type=range] {\n  /*removes default webkit styles*/\n  -webkit-appearance: none;\n  /*fix for FF unable to apply focus style bug */\n  padding: 20px 0;\n  border: 1px solid white;\n\n  /*required for proper track sizing in FF*/\n  width: 400px;\n}\n.AvatarCropper-base input[type=range]::-webkit-slider-runnable-track {\n  width: 400px;\n  height: 5px;\n  background: #ddd;\n  border: none;\n  border-radius: 3px;\n}\n.AvatarCropper-base input[type=range]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  border: none;\n  height: 16px;\n  width: 16px;\n  border-radius: 50%;\n  background: #454545;\n  margin-top: -4px;\n}\n.AvatarCropper-base input[type=range]:focus {\n  outline: none;\n}\n.AvatarCropper-base input[type=range]:focus::-webkit-slider-runnable-track {\n  background: #ccc;\n}\n\n.AvatarCropper-base input[type=range]::-moz-range-track {\n  width: 400px;\n  height: 5px;\n  background: #ddd;\n  border: none;\n  border-radius: 3px;\n}\n.AvatarCropper-base input[type=range]::-moz-range-thumb {\n  border: none;\n  height: 16px;\n  width: 16px;\n  border-radius: 50%;\n  background: #454545;\n}\n\n/*hide the outline behind the border*/\n.AvatarCropper-base input[type=range]:-moz-focusring{\n  outline: 1px solid white;\n  outline-offset: -1px;\n}\n\n.AvatarCropper-base input[type=range]::-ms-track {\n  width: 400px;\n  height: 5px;\n\n  /*remove bg colour from the track, we'll use ms-fill-lower and ms-fill-upper instead */\n  background: transparent;\n\n  /*leave room for the larger thumb to overflow with a transparent border */\n  border-color: transparent;\n  border-width: 6px 0;\n\n  /*remove default tick marks*/\n  color: transparent;\n}\n.AvatarCropper-base input[type=range]::-ms-fill-lower {\n  background: #777;\n  border-radius: 10px;\n}\n.AvatarCropper-base input[type=range]::-ms-fill-upper {\n  background: #ddd;\n  border-radius: 10px;\n}\n.AvatarCropper-base input[type=range]::-ms-thumb {\n  border: none;\n  height: 16px;\n  width: 16px;\n  border-radius: 50%;\n  background: #454545;\n}\n.AvatarCropper-base input[type=range]:focus::-ms-fill-lower {\n  background: #888;\n}\n.AvatarCropper-base input[type=range]:focus::-ms-fill-upper {\n  background: #ccc;\n}\n.AvatarCropper-base canvas {\n  cursor: move;\n}\n\n.AvatarCropper-canvas {\n  padding: 30px 0;\n}\n", ""]);

/***/ }),
/* 29 */
/***/ (function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0;

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function createStyleElement() {
		var styleElement = document.createElement("style");
		var head = getHeadElement();
		styleElement.type = "text/css";
		head.appendChild(styleElement);
		return styleElement;
	}

	function createLinkElement() {
		var linkElement = document.createElement("link");
		var head = getHeadElement();
		linkElement.rel = "stylesheet";
		head.appendChild(linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement());
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement();
			update = updateLink.bind(null, styleElement);
			remove = function() {
				styleElement.parentNode.removeChild(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement();
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				styleElement.parentNode.removeChild(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _Confirm = __webpack_require__(32);

	Object.defineProperty(exports, 'Confirm', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Confirm).default;
	  }
	});

	var _Portal = __webpack_require__(473);

	Object.defineProperty(exports, 'Portal', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Portal).default;
	  }
	});

	var _Radio = __webpack_require__(492);

	Object.defineProperty(exports, 'Radio', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Radio).default;
	  }
	});

	var _Select = __webpack_require__(497);

	Object.defineProperty(exports, 'Select', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Select).default;
	  }
	});

	var _TextArea = __webpack_require__(526);

	Object.defineProperty(exports, 'TextArea', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TextArea).default;
	  }
	});

	var _Visibility = __webpack_require__(528);

	Object.defineProperty(exports, 'Visibility', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Visibility).default;
	  }
	});

	var _Breadcrumb = __webpack_require__(530);

	Object.defineProperty(exports, 'Breadcrumb', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Breadcrumb).default;
	  }
	});

	var _BreadcrumbDivider = __webpack_require__(532);

	Object.defineProperty(exports, 'BreadcrumbDivider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_BreadcrumbDivider).default;
	  }
	});

	var _BreadcrumbSection = __webpack_require__(533);

	Object.defineProperty(exports, 'BreadcrumbSection', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_BreadcrumbSection).default;
	  }
	});

	var _Form = __webpack_require__(534);

	Object.defineProperty(exports, 'Form', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Form).default;
	  }
	});

	var _FormButton = __webpack_require__(536);

	Object.defineProperty(exports, 'FormButton', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormButton).default;
	  }
	});

	var _FormCheckbox = __webpack_require__(538);

	Object.defineProperty(exports, 'FormCheckbox', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormCheckbox).default;
	  }
	});

	var _FormDropdown = __webpack_require__(539);

	Object.defineProperty(exports, 'FormDropdown', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormDropdown).default;
	  }
	});

	var _FormField = __webpack_require__(537);

	Object.defineProperty(exports, 'FormField', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormField).default;
	  }
	});

	var _FormGroup = __webpack_require__(540);

	Object.defineProperty(exports, 'FormGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormGroup).default;
	  }
	});

	var _FormInput = __webpack_require__(541);

	Object.defineProperty(exports, 'FormInput', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormInput).default;
	  }
	});

	var _FormRadio = __webpack_require__(551);

	Object.defineProperty(exports, 'FormRadio', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormRadio).default;
	  }
	});

	var _FormSelect = __webpack_require__(552);

	Object.defineProperty(exports, 'FormSelect', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormSelect).default;
	  }
	});

	var _FormTextArea = __webpack_require__(553);

	Object.defineProperty(exports, 'FormTextArea', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FormTextArea).default;
	  }
	});

	var _Grid = __webpack_require__(554);

	Object.defineProperty(exports, 'Grid', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Grid).default;
	  }
	});

	var _GridColumn = __webpack_require__(556);

	Object.defineProperty(exports, 'GridColumn', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_GridColumn).default;
	  }
	});

	var _GridRow = __webpack_require__(557);

	Object.defineProperty(exports, 'GridRow', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_GridRow).default;
	  }
	});

	var _Menu = __webpack_require__(558);

	Object.defineProperty(exports, 'Menu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Menu).default;
	  }
	});

	var _MenuHeader = __webpack_require__(560);

	Object.defineProperty(exports, 'MenuHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MenuHeader).default;
	  }
	});

	var _MenuItem = __webpack_require__(561);

	Object.defineProperty(exports, 'MenuItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MenuItem).default;
	  }
	});

	var _MenuMenu = __webpack_require__(573);

	Object.defineProperty(exports, 'MenuMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MenuMenu).default;
	  }
	});

	var _Message = __webpack_require__(574);

	Object.defineProperty(exports, 'Message', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Message).default;
	  }
	});

	var _MessageContent = __webpack_require__(576);

	Object.defineProperty(exports, 'MessageContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MessageContent).default;
	  }
	});

	var _MessageHeader = __webpack_require__(577);

	Object.defineProperty(exports, 'MessageHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MessageHeader).default;
	  }
	});

	var _MessageItem = __webpack_require__(579);

	Object.defineProperty(exports, 'MessageItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MessageItem).default;
	  }
	});

	var _MessageList = __webpack_require__(578);

	Object.defineProperty(exports, 'MessageList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_MessageList).default;
	  }
	});

	var _Table = __webpack_require__(580);

	Object.defineProperty(exports, 'Table', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Table).default;
	  }
	});

	var _TableBody = __webpack_require__(582);

	Object.defineProperty(exports, 'TableBody', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableBody).default;
	  }
	});

	var _TableCell = __webpack_require__(583);

	Object.defineProperty(exports, 'TableCell', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableCell).default;
	  }
	});

	var _TableFooter = __webpack_require__(584);

	Object.defineProperty(exports, 'TableFooter', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableFooter).default;
	  }
	});

	var _TableHeader = __webpack_require__(585);

	Object.defineProperty(exports, 'TableHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableHeader).default;
	  }
	});

	var _TableHeaderCell = __webpack_require__(586);

	Object.defineProperty(exports, 'TableHeaderCell', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableHeaderCell).default;
	  }
	});

	var _TableRow = __webpack_require__(587);

	Object.defineProperty(exports, 'TableRow', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_TableRow).default;
	  }
	});

	var _Button = __webpack_require__(465);

	Object.defineProperty(exports, 'Button', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Button).default;
	  }
	});

	var _ButtonContent = __webpack_require__(479);

	Object.defineProperty(exports, 'ButtonContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ButtonContent).default;
	  }
	});

	var _ButtonGroup = __webpack_require__(480);

	Object.defineProperty(exports, 'ButtonGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ButtonGroup).default;
	  }
	});

	var _ButtonOr = __webpack_require__(481);

	Object.defineProperty(exports, 'ButtonOr', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ButtonOr).default;
	  }
	});

	var _Container = __webpack_require__(588);

	Object.defineProperty(exports, 'Container', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Container).default;
	  }
	});

	var _Divider = __webpack_require__(590);

	Object.defineProperty(exports, 'Divider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Divider).default;
	  }
	});

	var _Flag = __webpack_require__(521);

	Object.defineProperty(exports, 'Flag', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Flag).default;
	  }
	});

	var _Header = __webpack_require__(592);

	Object.defineProperty(exports, 'Header', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Header).default;
	  }
	});

	var _HeaderContent = __webpack_require__(595);

	Object.defineProperty(exports, 'HeaderContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HeaderContent).default;
	  }
	});

	var _HeaderSubheader = __webpack_require__(594);

	Object.defineProperty(exports, 'HeaderSubheader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_HeaderSubheader).default;
	  }
	});

	var _Icon = __webpack_require__(487);

	Object.defineProperty(exports, 'Icon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Icon).default;
	  }
	});

	var _IconGroup = __webpack_require__(468);

	Object.defineProperty(exports, 'IconGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_IconGroup).default;
	  }
	});

	var _Image = __webpack_require__(523);

	Object.defineProperty(exports, 'Image', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Image).default;
	  }
	});

	var _ImageGroup = __webpack_require__(476);

	Object.defineProperty(exports, 'ImageGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ImageGroup).default;
	  }
	});

	var _Input = __webpack_require__(542);

	Object.defineProperty(exports, 'Input', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Input).default;
	  }
	});

	var _Label = __webpack_require__(518);

	Object.defineProperty(exports, 'Label', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Label).default;
	  }
	});

	var _LabelDetail = __webpack_require__(477);

	Object.defineProperty(exports, 'LabelDetail', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LabelDetail).default;
	  }
	});

	var _LabelGroup = __webpack_require__(478);

	Object.defineProperty(exports, 'LabelGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_LabelGroup).default;
	  }
	});

	var _List = __webpack_require__(596);

	Object.defineProperty(exports, 'List', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_List).default;
	  }
	});

	var _ListContent = __webpack_require__(598);

	Object.defineProperty(exports, 'ListContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListContent).default;
	  }
	});

	var _ListDescription = __webpack_require__(599);

	Object.defineProperty(exports, 'ListDescription', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListDescription).default;
	  }
	});

	var _ListHeader = __webpack_require__(600);

	Object.defineProperty(exports, 'ListHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListHeader).default;
	  }
	});

	var _ListIcon = __webpack_require__(601);

	Object.defineProperty(exports, 'ListIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListIcon).default;
	  }
	});

	var _ListItem = __webpack_require__(602);

	Object.defineProperty(exports, 'ListItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListItem).default;
	  }
	});

	var _ListList = __webpack_require__(603);

	Object.defineProperty(exports, 'ListList', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ListList).default;
	  }
	});

	var _Loader = __webpack_require__(604);

	Object.defineProperty(exports, 'Loader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Loader).default;
	  }
	});

	var _Rail = __webpack_require__(606);

	Object.defineProperty(exports, 'Rail', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Rail).default;
	  }
	});

	var _Reveal = __webpack_require__(608);

	Object.defineProperty(exports, 'Reveal', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Reveal).default;
	  }
	});

	var _RevealContent = __webpack_require__(610);

	Object.defineProperty(exports, 'RevealContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RevealContent).default;
	  }
	});

	var _Segment = __webpack_require__(611);

	Object.defineProperty(exports, 'Segment', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Segment).default;
	  }
	});

	var _SegmentGroup = __webpack_require__(613);

	Object.defineProperty(exports, 'SegmentGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SegmentGroup).default;
	  }
	});

	var _Step = __webpack_require__(614);

	Object.defineProperty(exports, 'Step', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Step).default;
	  }
	});

	var _StepContent = __webpack_require__(616);

	Object.defineProperty(exports, 'StepContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StepContent).default;
	  }
	});

	var _StepDescription = __webpack_require__(617);

	Object.defineProperty(exports, 'StepDescription', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StepDescription).default;
	  }
	});

	var _StepGroup = __webpack_require__(619);

	Object.defineProperty(exports, 'StepGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StepGroup).default;
	  }
	});

	var _StepTitle = __webpack_require__(618);

	Object.defineProperty(exports, 'StepTitle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StepTitle).default;
	  }
	});

	var _Accordion = __webpack_require__(620);

	Object.defineProperty(exports, 'Accordion', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Accordion).default;
	  }
	});

	var _AccordionContent = __webpack_require__(621);

	Object.defineProperty(exports, 'AccordionContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AccordionContent).default;
	  }
	});

	var _AccordionTitle = __webpack_require__(622);

	Object.defineProperty(exports, 'AccordionTitle', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AccordionTitle).default;
	  }
	});

	var _Checkbox = __webpack_require__(494);

	Object.defineProperty(exports, 'Checkbox', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Checkbox).default;
	  }
	});

	var _Dimmer = __webpack_require__(471);

	Object.defineProperty(exports, 'Dimmer', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dimmer).default;
	  }
	});

	var _DimmerDimmable = __webpack_require__(475);

	Object.defineProperty(exports, 'DimmerDimmable', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DimmerDimmable).default;
	  }
	});

	var _Dropdown = __webpack_require__(499);

	Object.defineProperty(exports, 'Dropdown', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Dropdown).default;
	  }
	});

	var _DropdownDivider = __webpack_require__(519);

	Object.defineProperty(exports, 'DropdownDivider', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DropdownDivider).default;
	  }
	});

	var _DropdownHeader = __webpack_require__(524);

	Object.defineProperty(exports, 'DropdownHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DropdownHeader).default;
	  }
	});

	var _DropdownItem = __webpack_require__(520);

	Object.defineProperty(exports, 'DropdownItem', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DropdownItem).default;
	  }
	});

	var _DropdownMenu = __webpack_require__(525);

	Object.defineProperty(exports, 'DropdownMenu', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_DropdownMenu).default;
	  }
	});

	var _Embed = __webpack_require__(623);

	Object.defineProperty(exports, 'Embed', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Embed).default;
	  }
	});

	var _Modal = __webpack_require__(482);

	Object.defineProperty(exports, 'Modal', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Modal).default;
	  }
	});

	var _ModalActions = __webpack_require__(490);

	Object.defineProperty(exports, 'ModalActions', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ModalActions).default;
	  }
	});

	var _ModalContent = __webpack_require__(489);

	Object.defineProperty(exports, 'ModalContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ModalContent).default;
	  }
	});

	var _ModalDescription = __webpack_require__(491);

	Object.defineProperty(exports, 'ModalDescription', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ModalDescription).default;
	  }
	});

	var _ModalHeader = __webpack_require__(488);

	Object.defineProperty(exports, 'ModalHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ModalHeader).default;
	  }
	});

	var _Popup = __webpack_require__(625);

	Object.defineProperty(exports, 'Popup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Popup).default;
	  }
	});

	var _PopupContent = __webpack_require__(630);

	Object.defineProperty(exports, 'PopupContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PopupContent).default;
	  }
	});

	var _PopupHeader = __webpack_require__(631);

	Object.defineProperty(exports, 'PopupHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_PopupHeader).default;
	  }
	});

	var _Progress = __webpack_require__(632);

	Object.defineProperty(exports, 'Progress', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Progress).default;
	  }
	});

	var _Rating = __webpack_require__(637);

	Object.defineProperty(exports, 'Rating', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Rating).default;
	  }
	});

	var _RatingIcon = __webpack_require__(639);

	Object.defineProperty(exports, 'RatingIcon', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_RatingIcon).default;
	  }
	});

	var _Search = __webpack_require__(640);

	Object.defineProperty(exports, 'Search', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Search).default;
	  }
	});

	var _SearchCategory = __webpack_require__(646);

	Object.defineProperty(exports, 'SearchCategory', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SearchCategory).default;
	  }
	});

	var _SearchResult = __webpack_require__(647);

	Object.defineProperty(exports, 'SearchResult', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SearchResult).default;
	  }
	});

	var _SearchResults = __webpack_require__(648);

	Object.defineProperty(exports, 'SearchResults', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SearchResults).default;
	  }
	});

	var _Sidebar = __webpack_require__(649);

	Object.defineProperty(exports, 'Sidebar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Sidebar).default;
	  }
	});

	var _SidebarPushable = __webpack_require__(651);

	Object.defineProperty(exports, 'SidebarPushable', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SidebarPushable).default;
	  }
	});

	var _SidebarPusher = __webpack_require__(652);

	Object.defineProperty(exports, 'SidebarPusher', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_SidebarPusher).default;
	  }
	});

	var _Advertisement = __webpack_require__(653);

	Object.defineProperty(exports, 'Advertisement', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Advertisement).default;
	  }
	});

	var _Card = __webpack_require__(655);

	Object.defineProperty(exports, 'Card', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Card).default;
	  }
	});

	var _CardContent = __webpack_require__(656);

	Object.defineProperty(exports, 'CardContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardContent).default;
	  }
	});

	var _CardDescription = __webpack_require__(657);

	Object.defineProperty(exports, 'CardDescription', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardDescription).default;
	  }
	});

	var _CardGroup = __webpack_require__(660);

	Object.defineProperty(exports, 'CardGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardGroup).default;
	  }
	});

	var _CardHeader = __webpack_require__(658);

	Object.defineProperty(exports, 'CardHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardHeader).default;
	  }
	});

	var _CardMeta = __webpack_require__(659);

	Object.defineProperty(exports, 'CardMeta', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CardMeta).default;
	  }
	});

	var _Comment = __webpack_require__(661);

	Object.defineProperty(exports, 'Comment', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Comment).default;
	  }
	});

	var _CommentAction = __webpack_require__(663);

	Object.defineProperty(exports, 'CommentAction', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentAction).default;
	  }
	});

	var _CommentActions = __webpack_require__(664);

	Object.defineProperty(exports, 'CommentActions', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentActions).default;
	  }
	});

	var _CommentAuthor = __webpack_require__(665);

	Object.defineProperty(exports, 'CommentAuthor', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentAuthor).default;
	  }
	});

	var _CommentAvatar = __webpack_require__(666);

	Object.defineProperty(exports, 'CommentAvatar', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentAvatar).default;
	  }
	});

	var _CommentContent = __webpack_require__(667);

	Object.defineProperty(exports, 'CommentContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentContent).default;
	  }
	});

	var _CommentGroup = __webpack_require__(668);

	Object.defineProperty(exports, 'CommentGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentGroup).default;
	  }
	});

	var _CommentMetadata = __webpack_require__(669);

	Object.defineProperty(exports, 'CommentMetadata', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentMetadata).default;
	  }
	});

	var _CommentText = __webpack_require__(670);

	Object.defineProperty(exports, 'CommentText', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_CommentText).default;
	  }
	});

	var _Feed = __webpack_require__(671);

	Object.defineProperty(exports, 'Feed', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Feed).default;
	  }
	});

	var _FeedContent = __webpack_require__(673);

	Object.defineProperty(exports, 'FeedContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedContent).default;
	  }
	});

	var _FeedDate = __webpack_require__(674);

	Object.defineProperty(exports, 'FeedDate', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedDate).default;
	  }
	});

	var _FeedEvent = __webpack_require__(680);

	Object.defineProperty(exports, 'FeedEvent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedEvent).default;
	  }
	});

	var _FeedExtra = __webpack_require__(675);

	Object.defineProperty(exports, 'FeedExtra', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedExtra).default;
	  }
	});

	var _FeedLabel = __webpack_require__(681);

	Object.defineProperty(exports, 'FeedLabel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedLabel).default;
	  }
	});

	var _FeedLike = __webpack_require__(677);

	Object.defineProperty(exports, 'FeedLike', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedLike).default;
	  }
	});

	var _FeedMeta = __webpack_require__(676);

	Object.defineProperty(exports, 'FeedMeta', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedMeta).default;
	  }
	});

	var _FeedSummary = __webpack_require__(678);

	Object.defineProperty(exports, 'FeedSummary', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedSummary).default;
	  }
	});

	var _FeedUser = __webpack_require__(679);

	Object.defineProperty(exports, 'FeedUser', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_FeedUser).default;
	  }
	});

	var _Item = __webpack_require__(682);

	Object.defineProperty(exports, 'Item', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Item).default;
	  }
	});

	var _ItemContent = __webpack_require__(684);

	Object.defineProperty(exports, 'ItemContent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemContent).default;
	  }
	});

	var _ItemDescription = __webpack_require__(686);

	Object.defineProperty(exports, 'ItemDescription', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemDescription).default;
	  }
	});

	var _ItemExtra = __webpack_require__(687);

	Object.defineProperty(exports, 'ItemExtra', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemExtra).default;
	  }
	});

	var _ItemGroup = __webpack_require__(689);

	Object.defineProperty(exports, 'ItemGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemGroup).default;
	  }
	});

	var _ItemHeader = __webpack_require__(685);

	Object.defineProperty(exports, 'ItemHeader', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemHeader).default;
	  }
	});

	var _ItemImage = __webpack_require__(690);

	Object.defineProperty(exports, 'ItemImage', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemImage).default;
	  }
	});

	var _ItemMeta = __webpack_require__(688);

	Object.defineProperty(exports, 'ItemMeta', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_ItemMeta).default;
	  }
	});

	var _Statistic = __webpack_require__(691);

	Object.defineProperty(exports, 'Statistic', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_Statistic).default;
	  }
	});

	var _StatisticGroup = __webpack_require__(693);

	Object.defineProperty(exports, 'StatisticGroup', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StatisticGroup).default;
	  }
	});

	var _StatisticLabel = __webpack_require__(694);

	Object.defineProperty(exports, 'StatisticLabel', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StatisticLabel).default;
	  }
	});

	var _StatisticValue = __webpack_require__(695);

	Object.defineProperty(exports, 'StatisticValue', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_StatisticValue).default;
	  }
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Confirm = __webpack_require__(33);

	var _Confirm2 = _interopRequireDefault(_Confirm);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Confirm2.default;

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _has2 = __webpack_require__(120);

	var _has3 = _interopRequireDefault(_has2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Button = __webpack_require__(464);

	var _Button2 = _interopRequireDefault(_Button);

	var _Modal = __webpack_require__(482);

	var _Modal2 = _interopRequireDefault(_Modal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A Confirm modal gives the user a choice to confirm or cancel an action/
	 * @see Modal
	 */
	var Confirm = function (_Component) {
	  (0, _inherits3.default)(Confirm, _Component);

	  function Confirm() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Confirm);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Confirm.__proto__ || Object.getPrototypeOf(Confirm)).call.apply(_ref, [this].concat(args))), _this), _this.handleCancel = function (e) {
	      (0, _invoke3.default)(_this.props, 'onCancel', e, _this.props);
	    }, _this.handleCancelOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e, buttonProps) {
	          (0, _invoke3.default)(predefinedProps, 'onClick', e, buttonProps);
	          _this.handleCancel(e);
	        }
	      };
	    }, _this.handleConfirmOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e, buttonProps) {
	          (0, _invoke3.default)(predefinedProps, 'onClick', e, buttonProps);
	          (0, _invoke3.default)(_this.props, 'onConfirm', e, _this.props);
	        }
	      };
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Confirm, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          cancelButton = _props.cancelButton,
	          confirmButton = _props.confirmButton,
	          content = _props.content,
	          header = _props.header,
	          open = _props.open;

	      var rest = (0, _lib.getUnhandledProps)(Confirm, this.props);

	      // `open` is auto controlled by the Modal
	      // It cannot be present (even undefined) with `defaultOpen`
	      // only apply it if the user provided an open prop
	      var openProp = {};
	      if ((0, _has3.default)(this.props, 'open')) openProp.open = open;

	      return _react2.default.createElement(
	        _Modal2.default,
	        (0, _extends3.default)({}, rest, openProp, { size: 'small', onClose: this.handleCancel }),
	        _Modal2.default.Header.create(header),
	        _Modal2.default.Content.create(content),
	        _react2.default.createElement(
	          _Modal2.default.Actions,
	          null,
	          _Button2.default.create(cancelButton, { overrideProps: this.handleCancelOverrides }),
	          _Button2.default.create(confirmButton, {
	            defaultProps: { primary: true },
	            overrideProps: this.handleConfirmOverrides
	          })
	        )
	      );
	    }
	  }]);
	  return Confirm;
	}(_react.Component);

	Confirm.defaultProps = {
	  cancelButton: 'Cancel',
	  confirmButton: 'OK',
	  content: 'Are you sure?'
	};
	Confirm._meta = {
	  name: 'Confirm',
	  type: _lib.META.TYPES.ADDON
	};
	Confirm.handledProps = ['cancelButton', 'confirmButton', 'content', 'header', 'onCancel', 'onConfirm', 'open'];
	process.env.NODE_ENV !== "production" ? Confirm.propTypes = {
	  /** The cancel button text. */
	  cancelButton: _lib.customPropTypes.itemShorthand,

	  /** The OK button text. */
	  confirmButton: _lib.customPropTypes.itemShorthand,

	  /** The ModalContent text. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** The ModalHeader text. */
	  header: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called when the Modal is closed without clicking confirm.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onCancel: _propTypes2.default.func,

	  /**
	   * Called when the OK button is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onConfirm: _propTypes2.default.func,

	  /** Whether or not the modal is visible. */
	  open: _propTypes2.default.bool
	} : void 0;
	exports.default = Confirm;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _assign = __webpack_require__(35);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(36), __esModule: true };

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(37);
	module.exports = __webpack_require__(40).Object.assign;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(38);

	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(54) });


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(39);
	var core = __webpack_require__(40);
	var ctx = __webpack_require__(41);
	var hide = __webpack_require__(43);
	var has = __webpack_require__(53);
	var PROTOTYPE = 'prototype';

	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F;
	  var IS_GLOBAL = type & $export.G;
	  var IS_STATIC = type & $export.S;
	  var IS_PROTO = type & $export.P;
	  var IS_BIND = type & $export.B;
	  var IS_WRAP = type & $export.W;
	  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
	  var expProto = exports[PROTOTYPE];
	  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
	  var key, own, out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && has(exports, key)) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0: return new C();
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library`
	module.exports = $export;


/***/ }),
/* 39 */
/***/ (function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self
	  // eslint-disable-next-line no-new-func
	  : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 40 */
/***/ (function(module, exports) {

	var core = module.exports = { version: '2.5.7' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(42);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1: return function (a) {
	      return fn.call(that, a);
	    };
	    case 2: return function (a, b) {
	      return fn.call(that, a, b);
	    };
	    case 3: return function (a, b, c) {
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};


/***/ }),
/* 42 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(44);
	var createDesc = __webpack_require__(52);
	module.exports = __webpack_require__(48) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(45);
	var IE8_DOM_DEFINE = __webpack_require__(47);
	var toPrimitive = __webpack_require__(51);
	var dP = Object.defineProperty;

	exports.f = __webpack_require__(48) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(46);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};


/***/ }),
/* 46 */
/***/ (function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(48) && !__webpack_require__(49)(function () {
	  return Object.defineProperty(__webpack_require__(50)('div'), 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(49)(function () {
	  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
	});


/***/ }),
/* 49 */
/***/ (function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(46);
	var document = __webpack_require__(39).document;
	// typeof document.createElement is 'object' in old IE
	var is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(46);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};


/***/ }),
/* 52 */
/***/ (function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};


/***/ }),
/* 53 */
/***/ (function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys = __webpack_require__(55);
	var gOPS = __webpack_require__(70);
	var pIE = __webpack_require__(71);
	var toObject = __webpack_require__(72);
	var IObject = __webpack_require__(58);
	var $assign = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(49)(function () {
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line no-undef
	  var S = Symbol();
	  var K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) { B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
	  var T = toObject(target);
	  var aLen = arguments.length;
	  var index = 1;
	  var getSymbols = gOPS.f;
	  var isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]);
	    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  } return T;
	} : $assign;


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(56);
	var enumBugKeys = __webpack_require__(69);

	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

	var has = __webpack_require__(53);
	var toIObject = __webpack_require__(57);
	var arrayIndexOf = __webpack_require__(61)(false);
	var IE_PROTO = __webpack_require__(65)('IE_PROTO');

	module.exports = function (object, names) {
	  var O = toIObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(58);
	var defined = __webpack_require__(60);
	module.exports = function (it) {
	  return IObject(defined(it));
	};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(59);
	// eslint-disable-next-line no-prototype-builtins
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};


/***/ }),
/* 59 */
/***/ (function(module, exports) {

	var toString = {}.toString;

	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};


/***/ }),
/* 60 */
/***/ (function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(57);
	var toLength = __webpack_require__(62);
	var toAbsoluteIndex = __webpack_require__(64);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this);
	    var length = toLength(O.length);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(63);
	var min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};


/***/ }),
/* 63 */
/***/ (function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil;
	var floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(63);
	var max = Math.max;
	var min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(66)('keys');
	var uid = __webpack_require__(68);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

	var core = __webpack_require__(40);
	var global = __webpack_require__(39);
	var SHARED = '__core-js_shared__';
	var store = global[SHARED] || (global[SHARED] = {});

	(module.exports = function (key, value) {
	  return store[key] || (store[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: core.version,
	  mode: __webpack_require__(67) ? 'pure' : 'global',
	  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
	});


/***/ }),
/* 67 */
/***/ (function(module, exports) {

	module.exports = true;


/***/ }),
/* 68 */
/***/ (function(module, exports) {

	var id = 0;
	var px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};


/***/ }),
/* 69 */
/***/ (function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');


/***/ }),
/* 70 */
/***/ (function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 71 */
/***/ (function(module, exports) {

	exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(60);
	module.exports = function (it) {
	  return Object(defined(it));
	};


/***/ }),
/* 73 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _defineProperty = __webpack_require__(75);

	var _defineProperty2 = _interopRequireDefault(_defineProperty);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(76), __esModule: true };

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(77);
	var $Object = __webpack_require__(40).Object;
	module.exports = function defineProperty(it, key, desc) {
	  return $Object.defineProperty(it, key, desc);
	};


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(38);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(48), 'Object', { defineProperty: __webpack_require__(44).f });


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _typeof2 = __webpack_require__(79);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
	};

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _iterator = __webpack_require__(80);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(99);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(81), __esModule: true };

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(82);
	__webpack_require__(94);
	module.exports = __webpack_require__(98).f('iterator');


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $at = __webpack_require__(83)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(84)(String, 'String', function (iterated) {
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var index = this._i;
	  var point;
	  if (index >= O.length) return { value: undefined, done: true };
	  point = $at(O, index);
	  this._i += point.length;
	  return { value: point, done: false };
	});


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(63);
	var defined = __webpack_require__(60);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function (TO_STRING) {
	  return function (that, pos) {
	    var s = String(defined(that));
	    var i = toInteger(pos);
	    var l = s.length;
	    var a, b;
	    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY = __webpack_require__(67);
	var $export = __webpack_require__(38);
	var redefine = __webpack_require__(85);
	var hide = __webpack_require__(43);
	var Iterators = __webpack_require__(86);
	var $iterCreate = __webpack_require__(87);
	var setToStringTag = __webpack_require__(91);
	var getPrototypeOf = __webpack_require__(93);
	var ITERATOR = __webpack_require__(92)('iterator');
	var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
	var FF_ITERATOR = '@@iterator';
	var KEYS = 'keys';
	var VALUES = 'values';

	var returnThis = function () { return this; };

	module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function (kind) {
	    if (!BUGGY && kind in proto) return proto[kind];
	    switch (kind) {
	      case KEYS: return function keys() { return new Constructor(this, kind); };
	      case VALUES: return function values() { return new Constructor(this, kind); };
	    } return function entries() { return new Constructor(this, kind); };
	  };
	  var TAG = NAME + ' Iterator';
	  var DEF_VALUES = DEFAULT == VALUES;
	  var VALUES_BUG = false;
	  var proto = Base.prototype;
	  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
	  var $default = $native || getMethod(DEFAULT);
	  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
	  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
	  var methods, key, IteratorPrototype;
	  // Fix native
	  if ($anyNative) {
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
	    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if (DEF_VALUES && $native && $native.name !== VALUES) {
	    VALUES_BUG = true;
	    $default = function values() { return $native.call(this); };
	  }
	  // Define iterator
	  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG] = returnThis;
	  if (DEFAULT) {
	    methods = {
	      values: DEF_VALUES ? $default : getMethod(VALUES),
	      keys: IS_SET ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if (FORCED) for (key in methods) {
	      if (!(key in proto)) redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(43);


/***/ }),
/* 86 */
/***/ (function(module, exports) {

	module.exports = {};


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var create = __webpack_require__(88);
	var descriptor = __webpack_require__(52);
	var setToStringTag = __webpack_require__(91);
	var IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(43)(IteratorPrototype, __webpack_require__(92)('iterator'), function () { return this; });

	module.exports = function (Constructor, NAME, next) {
	  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
	  setToStringTag(Constructor, NAME + ' Iterator');
	};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject = __webpack_require__(45);
	var dPs = __webpack_require__(89);
	var enumBugKeys = __webpack_require__(69);
	var IE_PROTO = __webpack_require__(65)('IE_PROTO');
	var Empty = function () { /* empty */ };
	var PROTOTYPE = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(50)('iframe');
	  var i = enumBugKeys.length;
	  var lt = '<';
	  var gt = '>';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(90).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty();
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(44);
	var anObject = __webpack_require__(45);
	var getKeys = __webpack_require__(55);

	module.exports = __webpack_require__(48) ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var keys = getKeys(Properties);
	  var length = keys.length;
	  var i = 0;
	  var P;
	  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

	var document = __webpack_require__(39).document;
	module.exports = document && document.documentElement;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

	var def = __webpack_require__(44).f;
	var has = __webpack_require__(53);
	var TAG = __webpack_require__(92)('toStringTag');

	module.exports = function (it, tag, stat) {
	  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
	};


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

	var store = __webpack_require__(66)('wks');
	var uid = __webpack_require__(68);
	var Symbol = __webpack_require__(39).Symbol;
	var USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function (name) {
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has = __webpack_require__(53);
	var toObject = __webpack_require__(72);
	var IE_PROTO = __webpack_require__(65)('IE_PROTO');
	var ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function (O) {
	  O = toObject(O);
	  if (has(O, IE_PROTO)) return O[IE_PROTO];
	  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(95);
	var global = __webpack_require__(39);
	var hide = __webpack_require__(43);
	var Iterators = __webpack_require__(86);
	var TO_STRING_TAG = __webpack_require__(92)('toStringTag');

	var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
	  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
	  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
	  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
	  'TextTrackList,TouchList').split(',');

	for (var i = 0; i < DOMIterables.length; i++) {
	  var NAME = DOMIterables[i];
	  var Collection = global[NAME];
	  var proto = Collection && Collection.prototype;
	  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(96);
	var step = __webpack_require__(97);
	var Iterators = __webpack_require__(86);
	var toIObject = __webpack_require__(57);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(84)(Array, 'Array', function (iterated, kind) {
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function () {
	  var O = this._t;
	  var kind = this._k;
	  var index = this._i++;
	  if (!O || index >= O.length) {
	    this._t = undefined;
	    return step(1);
	  }
	  if (kind == 'keys') return step(0, index);
	  if (kind == 'values') return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');


/***/ }),
/* 96 */
/***/ (function(module, exports) {

	module.exports = function () { /* empty */ };


/***/ }),
/* 97 */
/***/ (function(module, exports) {

	module.exports = function (done, value) {
	  return { value: value, done: !!done };
	};


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(92);


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(100), __esModule: true };

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(101);
	__webpack_require__(109);
	__webpack_require__(110);
	__webpack_require__(111);
	module.exports = __webpack_require__(40).Symbol;


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global = __webpack_require__(39);
	var has = __webpack_require__(53);
	var DESCRIPTORS = __webpack_require__(48);
	var $export = __webpack_require__(38);
	var redefine = __webpack_require__(85);
	var META = __webpack_require__(102).KEY;
	var $fails = __webpack_require__(49);
	var shared = __webpack_require__(66);
	var setToStringTag = __webpack_require__(91);
	var uid = __webpack_require__(68);
	var wks = __webpack_require__(92);
	var wksExt = __webpack_require__(98);
	var wksDefine = __webpack_require__(103);
	var enumKeys = __webpack_require__(104);
	var isArray = __webpack_require__(105);
	var anObject = __webpack_require__(45);
	var isObject = __webpack_require__(46);
	var toIObject = __webpack_require__(57);
	var toPrimitive = __webpack_require__(51);
	var createDesc = __webpack_require__(52);
	var _create = __webpack_require__(88);
	var gOPNExt = __webpack_require__(106);
	var $GOPD = __webpack_require__(108);
	var $DP = __webpack_require__(44);
	var $keys = __webpack_require__(55);
	var gOPD = $GOPD.f;
	var dP = $DP.f;
	var gOPN = gOPNExt.f;
	var $Symbol = global.Symbol;
	var $JSON = global.JSON;
	var _stringify = $JSON && $JSON.stringify;
	var PROTOTYPE = 'prototype';
	var HIDDEN = wks('_hidden');
	var TO_PRIMITIVE = wks('toPrimitive');
	var isEnum = {}.propertyIsEnumerable;
	var SymbolRegistry = shared('symbol-registry');
	var AllSymbols = shared('symbols');
	var OPSymbols = shared('op-symbols');
	var ObjectProto = Object[PROTOTYPE];
	var USE_NATIVE = typeof $Symbol == 'function';
	var QObject = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function () {
	  return _create(dP({}, 'a', {
	    get: function () { return dP(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (it, key, D) {
	  var protoDesc = gOPD(ObjectProto, key);
	  if (protoDesc) delete ObjectProto[key];
	  dP(it, key, D);
	  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function (tag) {
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D) {
	  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if (has(AllSymbols, key)) {
	    if (!D.enumerable) {
	      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
	      D = _create(D, { enumerable: createDesc(0, false) });
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P) {
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P));
	  var i = 0;
	  var l = keys.length;
	  var key;
	  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P) {
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key) {
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
	  it = toIObject(it);
	  key = toPrimitive(key, true);
	  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
	  var D = gOPD(it, key);
	  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it) {
	  var names = gOPN(toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
	  var IS_OP = it === ObjectProto;
	  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
	  var result = [];
	  var i = 0;
	  var key;
	  while (names.length > i) {
	    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if (!USE_NATIVE) {
	  $Symbol = function Symbol() {
	    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function (value) {
	      if (this === ObjectProto) $set.call(OPSymbols, value);
	      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f = $defineProperty;
	  __webpack_require__(107).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(71).f = $propertyIsEnumerable;
	  __webpack_require__(70).f = $getOwnPropertySymbols;

	  if (DESCRIPTORS && !__webpack_require__(67)) {
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function (name) {
	    return wrap(wks(name));
	  };
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

	for (var es6Symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

	for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function (key) {
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
	    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
	  },
	  useSetter: function () { setter = true; },
	  useSimple: function () { setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it) {
	    var args = [it];
	    var i = 1;
	    var replacer, $replacer;
	    while (arguments.length > i) args.push(arguments[i++]);
	    $replacer = replacer = args[1];
	    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	    if (!isArray(replacer)) replacer = function (key, value) {
	      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
	      if (!isSymbol(value)) return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(43)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

	var META = __webpack_require__(68)('meta');
	var isObject = __webpack_require__(46);
	var has = __webpack_require__(53);
	var setDesc = __webpack_require__(44).f;
	var id = 0;
	var isExtensible = Object.isExtensible || function () {
	  return true;
	};
	var FREEZE = !__webpack_require__(49)(function () {
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function (it) {
	  setDesc(it, META, { value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  } });
	};
	var fastKey = function (it, create) {
	  // return primitive with prefix
	  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function (it, create) {
	  if (!has(it, META)) {
	    // can't set metadata to uncaught frozen object
	    if (!isExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY: META,
	  NEED: false,
	  fastKey: fastKey,
	  getWeak: getWeak,
	  onFreeze: onFreeze
	};


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

	var global = __webpack_require__(39);
	var core = __webpack_require__(40);
	var LIBRARY = __webpack_require__(67);
	var wksExt = __webpack_require__(98);
	var defineProperty = __webpack_require__(44).f;
	module.exports = function (name) {
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
	};


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(55);
	var gOPS = __webpack_require__(70);
	var pIE = __webpack_require__(71);
	module.exports = function (it) {
	  var result = getKeys(it);
	  var getSymbols = gOPS.f;
	  if (getSymbols) {
	    var symbols = getSymbols(it);
	    var isEnum = pIE.f;
	    var i = 0;
	    var key;
	    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
	  } return result;
	};


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(59);
	module.exports = Array.isArray || function isArray(arg) {
	  return cof(arg) == 'Array';
	};


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(57);
	var gOPN = __webpack_require__(107).f;
	var toString = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function (it) {
	  try {
	    return gOPN(it);
	  } catch (e) {
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it) {
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys = __webpack_require__(56);
	var hiddenKeys = __webpack_require__(69).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return $keys(O, hiddenKeys);
	};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

	var pIE = __webpack_require__(71);
	var createDesc = __webpack_require__(52);
	var toIObject = __webpack_require__(57);
	var toPrimitive = __webpack_require__(51);
	var has = __webpack_require__(53);
	var IE8_DOM_DEFINE = __webpack_require__(47);
	var gOPD = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(48) ? gOPD : function getOwnPropertyDescriptor(O, P) {
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if (IE8_DOM_DEFINE) try {
	    return gOPD(O, P);
	  } catch (e) { /* empty */ }
	  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
	};


/***/ }),
/* 109 */
/***/ (function(module, exports) {

	

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(103)('asyncIterator');


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(103)('observable');


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _setPrototypeOf = __webpack_require__(113);

	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

	var _create = __webpack_require__(117);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(79);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(114), __esModule: true };

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(115);
	module.exports = __webpack_require__(40).Object.setPrototypeOf;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(38);
	$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(116).set });


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(46);
	var anObject = __webpack_require__(45);
	var check = function (O, proto) {
	  anObject(O);
	  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function (test, buggy, set) {
	      try {
	        set = __webpack_require__(41)(Function.call, __webpack_require__(108).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch (e) { buggy = true; }
	      return function setPrototypeOf(O, proto) {
	        check(O, proto);
	        if (buggy) O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(118), __esModule: true };

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(119);
	var $Object = __webpack_require__(40).Object;
	module.exports = function create(P, D) {
	  return $Object.create(P, D);
	};


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(38);
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', { create: __webpack_require__(88) });


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHas = __webpack_require__(121),
	    hasPath = __webpack_require__(122);

	/**
	 * Checks if `path` is a direct property of `object`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = { 'a': { 'b': 2 } };
	 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.has(object, 'a');
	 * // => true
	 *
	 * _.has(object, 'a.b');
	 * // => true
	 *
	 * _.has(object, ['a', 'b']);
	 * // => true
	 *
	 * _.has(other, 'a');
	 * // => false
	 */
	function has(object, path) {
	  return object != null && hasPath(object, path, baseHas);
	}

	module.exports = has;


/***/ }),
/* 121 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.has` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHas(object, key) {
	  return object != null && hasOwnProperty.call(object, key);
	}

	module.exports = baseHas;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(123),
	    isArguments = __webpack_require__(172),
	    isArray = __webpack_require__(124),
	    isIndex = __webpack_require__(174),
	    isLength = __webpack_require__(175),
	    toKey = __webpack_require__(176);

	/**
	 * Checks if `path` exists on `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @param {Function} hasFunc The function to check properties.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 */
	function hasPath(object, path, hasFunc) {
	  path = castPath(path, object);

	  var index = -1,
	      length = path.length,
	      result = false;

	  while (++index < length) {
	    var key = toKey(path[index]);
	    if (!(result = object != null && hasFunc(object, key))) {
	      break;
	    }
	    object = object[key];
	  }
	  if (result || ++index != length) {
	    return result;
	  }
	  length = object == null ? 0 : object.length;
	  return !!length && isLength(length) && isIndex(key, length) &&
	    (isArray(object) || isArguments(object));
	}

	module.exports = hasPath;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(124),
	    isKey = __webpack_require__(125),
	    stringToPath = __webpack_require__(134),
	    toString = __webpack_require__(169);

	/**
	 * Casts `value` to a path array if it's not one.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {Array} Returns the cast property path array.
	 */
	function castPath(value, object) {
	  if (isArray(value)) {
	    return value;
	  }
	  return isKey(value, object) ? [value] : stringToPath(toString(value));
	}

	module.exports = castPath;


/***/ }),
/* 124 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is classified as an `Array` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
	 * @example
	 *
	 * _.isArray([1, 2, 3]);
	 * // => true
	 *
	 * _.isArray(document.body.children);
	 * // => false
	 *
	 * _.isArray('abc');
	 * // => false
	 *
	 * _.isArray(_.noop);
	 * // => false
	 */
	var isArray = Array.isArray;

	module.exports = isArray;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(124),
	    isSymbol = __webpack_require__(126);

	/** Used to match property names within property paths. */
	var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
	    reIsPlainProp = /^\w*$/;

	/**
	 * Checks if `value` is a property name and not a property path.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {Object} [object] The object to query keys on.
	 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
	 */
	function isKey(value, object) {
	  if (isArray(value)) {
	    return false;
	  }
	  var type = typeof value;
	  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
	      value == null || isSymbol(value)) {
	    return true;
	  }
	  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
	    (object != null && value in Object(object));
	}

	module.exports = isKey;


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var symbolTag = '[object Symbol]';

	/**
	 * Checks if `value` is classified as a `Symbol` primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
	 * @example
	 *
	 * _.isSymbol(Symbol.iterator);
	 * // => true
	 *
	 * _.isSymbol('abc');
	 * // => false
	 */
	function isSymbol(value) {
	  return typeof value == 'symbol' ||
	    (isObjectLike(value) && baseGetTag(value) == symbolTag);
	}

	module.exports = isSymbol;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(128),
	    getRawTag = __webpack_require__(131),
	    objectToString = __webpack_require__(132);

	/** `Object#toString` result references. */
	var nullTag = '[object Null]',
	    undefinedTag = '[object Undefined]';

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * The base implementation of `getTag` without fallbacks for buggy environments.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	function baseGetTag(value) {
	  if (value == null) {
	    return value === undefined ? undefinedTag : nullTag;
	  }
	  return (symToStringTag && symToStringTag in Object(value))
	    ? getRawTag(value)
	    : objectToString(value);
	}

	module.exports = baseGetTag;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(129);

	/** Built-in value references. */
	var Symbol = root.Symbol;

	module.exports = Symbol;


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

	var freeGlobal = __webpack_require__(130);

	/** Detect free variable `self`. */
	var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

	/** Used as a reference to the global object. */
	var root = freeGlobal || freeSelf || Function('return this')();

	module.exports = root;


/***/ }),
/* 130 */
/***/ (function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
	var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

	module.exports = freeGlobal;

	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(128);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/** Built-in value references. */
	var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

	/**
	 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the raw `toStringTag`.
	 */
	function getRawTag(value) {
	  var isOwn = hasOwnProperty.call(value, symToStringTag),
	      tag = value[symToStringTag];

	  try {
	    value[symToStringTag] = undefined;
	    var unmasked = true;
	  } catch (e) {}

	  var result = nativeObjectToString.call(value);
	  if (unmasked) {
	    if (isOwn) {
	      value[symToStringTag] = tag;
	    } else {
	      delete value[symToStringTag];
	    }
	  }
	  return result;
	}

	module.exports = getRawTag;


/***/ }),
/* 132 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Used to resolve the
	 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var nativeObjectToString = objectProto.toString;

	/**
	 * Converts `value` to a string using `Object.prototype.toString`.
	 *
	 * @private
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 */
	function objectToString(value) {
	  return nativeObjectToString.call(value);
	}

	module.exports = objectToString;


/***/ }),
/* 133 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return value != null && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

	var memoizeCapped = __webpack_require__(135);

	/** Used to match property names within property paths. */
	var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

	/** Used to match backslashes in property paths. */
	var reEscapeChar = /\\(\\)?/g;

	/**
	 * Converts `string` to a property path array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the property path array.
	 */
	var stringToPath = memoizeCapped(function(string) {
	  var result = [];
	  if (string.charCodeAt(0) === 46 /* . */) {
	    result.push('');
	  }
	  string.replace(rePropName, function(match, number, quote, subString) {
	    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
	  });
	  return result;
	});

	module.exports = stringToPath;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

	var memoize = __webpack_require__(136);

	/** Used as the maximum memoize cache size. */
	var MAX_MEMOIZE_SIZE = 500;

	/**
	 * A specialized version of `_.memoize` which clears the memoized function's
	 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
	 *
	 * @private
	 * @param {Function} func The function to have its output memoized.
	 * @returns {Function} Returns the new memoized function.
	 */
	function memoizeCapped(func) {
	  var result = memoize(func, function(key) {
	    if (cache.size === MAX_MEMOIZE_SIZE) {
	      cache.clear();
	    }
	    return key;
	  });

	  var cache = result.cache;
	  return result;
	}

	module.exports = memoizeCapped;


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(137);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/**
	 * Creates a function that memoizes the result of `func`. If `resolver` is
	 * provided, it determines the cache key for storing the result based on the
	 * arguments provided to the memoized function. By default, the first argument
	 * provided to the memoized function is used as the map cache key. The `func`
	 * is invoked with the `this` binding of the memoized function.
	 *
	 * **Note:** The cache is exposed as the `cache` property on the memoized
	 * function. Its creation may be customized by replacing the `_.memoize.Cache`
	 * constructor with one whose instances implement the
	 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
	 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Function
	 * @param {Function} func The function to have its output memoized.
	 * @param {Function} [resolver] The function to resolve the cache key.
	 * @returns {Function} Returns the new memoized function.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': 2 };
	 * var other = { 'c': 3, 'd': 4 };
	 *
	 * var values = _.memoize(_.values);
	 * values(object);
	 * // => [1, 2]
	 *
	 * values(other);
	 * // => [3, 4]
	 *
	 * object.a = 2;
	 * values(object);
	 * // => [1, 2]
	 *
	 * // Modify the result cache.
	 * values.cache.set(object, ['a', 'b']);
	 * values(object);
	 * // => ['a', 'b']
	 *
	 * // Replace `_.memoize.Cache`.
	 * _.memoize.Cache = WeakMap;
	 */
	function memoize(func, resolver) {
	  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var memoized = function() {
	    var args = arguments,
	        key = resolver ? resolver.apply(this, args) : args[0],
	        cache = memoized.cache;

	    if (cache.has(key)) {
	      return cache.get(key);
	    }
	    var result = func.apply(this, args);
	    memoized.cache = cache.set(key, result) || cache;
	    return result;
	  };
	  memoized.cache = new (memoize.Cache || MapCache);
	  return memoized;
	}

	// Expose `MapCache`.
	memoize.Cache = MapCache;

	module.exports = memoize;


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

	var mapCacheClear = __webpack_require__(138),
	    mapCacheDelete = __webpack_require__(163),
	    mapCacheGet = __webpack_require__(166),
	    mapCacheHas = __webpack_require__(167),
	    mapCacheSet = __webpack_require__(168);

	/**
	 * Creates a map cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function MapCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `MapCache`.
	MapCache.prototype.clear = mapCacheClear;
	MapCache.prototype['delete'] = mapCacheDelete;
	MapCache.prototype.get = mapCacheGet;
	MapCache.prototype.has = mapCacheHas;
	MapCache.prototype.set = mapCacheSet;

	module.exports = MapCache;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

	var Hash = __webpack_require__(139),
	    ListCache = __webpack_require__(154),
	    Map = __webpack_require__(162);

	/**
	 * Removes all key-value entries from the map.
	 *
	 * @private
	 * @name clear
	 * @memberOf MapCache
	 */
	function mapCacheClear() {
	  this.size = 0;
	  this.__data__ = {
	    'hash': new Hash,
	    'map': new (Map || ListCache),
	    'string': new Hash
	  };
	}

	module.exports = mapCacheClear;


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

	var hashClear = __webpack_require__(140),
	    hashDelete = __webpack_require__(150),
	    hashGet = __webpack_require__(151),
	    hashHas = __webpack_require__(152),
	    hashSet = __webpack_require__(153);

	/**
	 * Creates a hash object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Hash(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `Hash`.
	Hash.prototype.clear = hashClear;
	Hash.prototype['delete'] = hashDelete;
	Hash.prototype.get = hashGet;
	Hash.prototype.has = hashHas;
	Hash.prototype.set = hashSet;

	module.exports = Hash;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(141);

	/**
	 * Removes all key-value entries from the hash.
	 *
	 * @private
	 * @name clear
	 * @memberOf Hash
	 */
	function hashClear() {
	  this.__data__ = nativeCreate ? nativeCreate(null) : {};
	  this.size = 0;
	}

	module.exports = hashClear;


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142);

	/* Built-in method references that are verified to be native. */
	var nativeCreate = getNative(Object, 'create');

	module.exports = nativeCreate;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsNative = __webpack_require__(143),
	    getValue = __webpack_require__(149);

	/**
	 * Gets the native function at `key` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {string} key The key of the method to get.
	 * @returns {*} Returns the function if it's native, else `undefined`.
	 */
	function getNative(object, key) {
	  var value = getValue(object, key);
	  return baseIsNative(value) ? value : undefined;
	}

	module.exports = getNative;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(144),
	    isMasked = __webpack_require__(146),
	    isObject = __webpack_require__(145),
	    toSource = __webpack_require__(148);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

	/** Used to detect host constructors (Safari). */
	var reIsHostCtor = /^\[object .+?Constructor\]$/;

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to detect if a method is native. */
	var reIsNative = RegExp('^' +
	  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
	  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
	);

	/**
	 * The base implementation of `_.isNative` without bad shim checks.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a native function,
	 *  else `false`.
	 */
	function baseIsNative(value) {
	  if (!isObject(value) || isMasked(value)) {
	    return false;
	  }
	  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
	  return pattern.test(toSource(value));
	}

	module.exports = baseIsNative;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isObject = __webpack_require__(145);

	/** `Object#toString` result references. */
	var asyncTag = '[object AsyncFunction]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    proxyTag = '[object Proxy]';

	/**
	 * Checks if `value` is classified as a `Function` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
	 * @example
	 *
	 * _.isFunction(_);
	 * // => true
	 *
	 * _.isFunction(/abc/);
	 * // => false
	 */
	function isFunction(value) {
	  if (!isObject(value)) {
	    return false;
	  }
	  // The use of `Object#toString` avoids issues with the `typeof` operator
	  // in Safari 9 which returns 'object' for typed arrays and other constructors.
	  var tag = baseGetTag(value);
	  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
	}

	module.exports = isFunction;


/***/ }),
/* 145 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is the
	 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
	 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
	 * @example
	 *
	 * _.isObject({});
	 * // => true
	 *
	 * _.isObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isObject(_.noop);
	 * // => true
	 *
	 * _.isObject(null);
	 * // => false
	 */
	function isObject(value) {
	  var type = typeof value;
	  return value != null && (type == 'object' || type == 'function');
	}

	module.exports = isObject;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

	var coreJsData = __webpack_require__(147);

	/** Used to detect methods masquerading as native. */
	var maskSrcKey = (function() {
	  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
	  return uid ? ('Symbol(src)_1.' + uid) : '';
	}());

	/**
	 * Checks if `func` has its source masked.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
	 */
	function isMasked(func) {
	  return !!maskSrcKey && (maskSrcKey in func);
	}

	module.exports = isMasked;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(129);

	/** Used to detect overreaching core-js shims. */
	var coreJsData = root['__core-js_shared__'];

	module.exports = coreJsData;


/***/ }),
/* 148 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var funcProto = Function.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/**
	 * Converts `func` to its source code.
	 *
	 * @private
	 * @param {Function} func The function to convert.
	 * @returns {string} Returns the source code.
	 */
	function toSource(func) {
	  if (func != null) {
	    try {
	      return funcToString.call(func);
	    } catch (e) {}
	    try {
	      return (func + '');
	    } catch (e) {}
	  }
	  return '';
	}

	module.exports = toSource;


/***/ }),
/* 149 */
/***/ (function(module, exports) {

	/**
	 * Gets the value at `key` of `object`.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {string} key The key of the property to get.
	 * @returns {*} Returns the property value.
	 */
	function getValue(object, key) {
	  return object == null ? undefined : object[key];
	}

	module.exports = getValue;


/***/ }),
/* 150 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the hash.
	 *
	 * @private
	 * @name delete
	 * @memberOf Hash
	 * @param {Object} hash The hash to modify.
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function hashDelete(key) {
	  var result = this.has(key) && delete this.__data__[key];
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = hashDelete;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(141);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the hash value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Hash
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function hashGet(key) {
	  var data = this.__data__;
	  if (nativeCreate) {
	    var result = data[key];
	    return result === HASH_UNDEFINED ? undefined : result;
	  }
	  return hasOwnProperty.call(data, key) ? data[key] : undefined;
	}

	module.exports = hashGet;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(141);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if a hash value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Hash
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function hashHas(key) {
	  var data = this.__data__;
	  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
	}

	module.exports = hashHas;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

	var nativeCreate = __webpack_require__(141);

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Sets the hash `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Hash
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the hash instance.
	 */
	function hashSet(key, value) {
	  var data = this.__data__;
	  this.size += this.has(key) ? 0 : 1;
	  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
	  return this;
	}

	module.exports = hashSet;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

	var listCacheClear = __webpack_require__(155),
	    listCacheDelete = __webpack_require__(156),
	    listCacheGet = __webpack_require__(159),
	    listCacheHas = __webpack_require__(160),
	    listCacheSet = __webpack_require__(161);

	/**
	 * Creates an list cache object.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function ListCache(entries) {
	  var index = -1,
	      length = entries == null ? 0 : entries.length;

	  this.clear();
	  while (++index < length) {
	    var entry = entries[index];
	    this.set(entry[0], entry[1]);
	  }
	}

	// Add methods to `ListCache`.
	ListCache.prototype.clear = listCacheClear;
	ListCache.prototype['delete'] = listCacheDelete;
	ListCache.prototype.get = listCacheGet;
	ListCache.prototype.has = listCacheHas;
	ListCache.prototype.set = listCacheSet;

	module.exports = ListCache;


/***/ }),
/* 155 */
/***/ (function(module, exports) {

	/**
	 * Removes all key-value entries from the list cache.
	 *
	 * @private
	 * @name clear
	 * @memberOf ListCache
	 */
	function listCacheClear() {
	  this.__data__ = [];
	  this.size = 0;
	}

	module.exports = listCacheClear;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(157);

	/** Used for built-in method references. */
	var arrayProto = Array.prototype;

	/** Built-in value references. */
	var splice = arrayProto.splice;

	/**
	 * Removes `key` and its value from the list cache.
	 *
	 * @private
	 * @name delete
	 * @memberOf ListCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function listCacheDelete(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    return false;
	  }
	  var lastIndex = data.length - 1;
	  if (index == lastIndex) {
	    data.pop();
	  } else {
	    splice.call(data, index, 1);
	  }
	  --this.size;
	  return true;
	}

	module.exports = listCacheDelete;


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(158);

	/**
	 * Gets the index at which the `key` is found in `array` of key-value pairs.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} key The key to search for.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function assocIndexOf(array, key) {
	  var length = array.length;
	  while (length--) {
	    if (eq(array[length][0], key)) {
	      return length;
	    }
	  }
	  return -1;
	}

	module.exports = assocIndexOf;


/***/ }),
/* 158 */
/***/ (function(module, exports) {

	/**
	 * Performs a
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * comparison between two values to determine if they are equivalent.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.eq(object, object);
	 * // => true
	 *
	 * _.eq(object, other);
	 * // => false
	 *
	 * _.eq('a', 'a');
	 * // => true
	 *
	 * _.eq('a', Object('a'));
	 * // => false
	 *
	 * _.eq(NaN, NaN);
	 * // => true
	 */
	function eq(value, other) {
	  return value === other || (value !== value && other !== other);
	}

	module.exports = eq;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(157);

	/**
	 * Gets the list cache value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf ListCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function listCacheGet(key) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  return index < 0 ? undefined : data[index][1];
	}

	module.exports = listCacheGet;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(157);

	/**
	 * Checks if a list cache value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf ListCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function listCacheHas(key) {
	  return assocIndexOf(this.__data__, key) > -1;
	}

	module.exports = listCacheHas;


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

	var assocIndexOf = __webpack_require__(157);

	/**
	 * Sets the list cache `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf ListCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the list cache instance.
	 */
	function listCacheSet(key, value) {
	  var data = this.__data__,
	      index = assocIndexOf(data, key);

	  if (index < 0) {
	    ++this.size;
	    data.push([key, value]);
	  } else {
	    data[index][1] = value;
	  }
	  return this;
	}

	module.exports = listCacheSet;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142),
	    root = __webpack_require__(129);

	/* Built-in method references that are verified to be native. */
	var Map = getNative(root, 'Map');

	module.exports = Map;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(164);

	/**
	 * Removes `key` and its value from the map.
	 *
	 * @private
	 * @name delete
	 * @memberOf MapCache
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function mapCacheDelete(key) {
	  var result = getMapData(this, key)['delete'](key);
	  this.size -= result ? 1 : 0;
	  return result;
	}

	module.exports = mapCacheDelete;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

	var isKeyable = __webpack_require__(165);

	/**
	 * Gets the data for `map`.
	 *
	 * @private
	 * @param {Object} map The map to query.
	 * @param {string} key The reference key.
	 * @returns {*} Returns the map data.
	 */
	function getMapData(map, key) {
	  var data = map.__data__;
	  return isKeyable(key)
	    ? data[typeof key == 'string' ? 'string' : 'hash']
	    : data.map;
	}

	module.exports = getMapData;


/***/ }),
/* 165 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is suitable for use as unique object key.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
	 */
	function isKeyable(value) {
	  var type = typeof value;
	  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
	    ? (value !== '__proto__')
	    : (value === null);
	}

	module.exports = isKeyable;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(164);

	/**
	 * Gets the map value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf MapCache
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function mapCacheGet(key) {
	  return getMapData(this, key).get(key);
	}

	module.exports = mapCacheGet;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(164);

	/**
	 * Checks if a map value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf MapCache
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function mapCacheHas(key) {
	  return getMapData(this, key).has(key);
	}

	module.exports = mapCacheHas;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

	var getMapData = __webpack_require__(164);

	/**
	 * Sets the map `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf MapCache
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the map cache instance.
	 */
	function mapCacheSet(key, value) {
	  var data = getMapData(this, key),
	      size = data.size;

	  data.set(key, value);
	  this.size += data.size == size ? 0 : 1;
	  return this;
	}

	module.exports = mapCacheSet;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(170);

	/**
	 * Converts `value` to a string. An empty string is returned for `null`
	 * and `undefined` values. The sign of `-0` is preserved.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.toString(null);
	 * // => ''
	 *
	 * _.toString(-0);
	 * // => '-0'
	 *
	 * _.toString([1, 2, 3]);
	 * // => '1,2,3'
	 */
	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	module.exports = toString;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(128),
	    arrayMap = __webpack_require__(171),
	    isArray = __webpack_require__(124),
	    isSymbol = __webpack_require__(126);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolToString = symbolProto ? symbolProto.toString : undefined;

	/**
	 * The base implementation of `_.toString` which doesn't convert nullish
	 * values to empty strings.
	 *
	 * @private
	 * @param {*} value The value to process.
	 * @returns {string} Returns the string.
	 */
	function baseToString(value) {
	  // Exit early for strings to avoid a performance hit in some environments.
	  if (typeof value == 'string') {
	    return value;
	  }
	  if (isArray(value)) {
	    // Recursively convert values (susceptible to call stack limits).
	    return arrayMap(value, baseToString) + '';
	  }
	  if (isSymbol(value)) {
	    return symbolToString ? symbolToString.call(value) : '';
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = baseToString;


/***/ }),
/* 171 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.map` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function arrayMap(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      result = Array(length);

	  while (++index < length) {
	    result[index] = iteratee(array[index], index, array);
	  }
	  return result;
	}

	module.exports = arrayMap;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsArguments = __webpack_require__(173),
	    isObjectLike = __webpack_require__(133);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/**
	 * Checks if `value` is likely an `arguments` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArguments(function() { return arguments; }());
	 * // => true
	 *
	 * _.isArguments([1, 2, 3]);
	 * // => false
	 */
	var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
	  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
	    !propertyIsEnumerable.call(value, 'callee');
	};

	module.exports = isArguments;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]';

	/**
	 * The base implementation of `_.isArguments`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
	 */
	function baseIsArguments(value) {
	  return isObjectLike(value) && baseGetTag(value) == argsTag;
	}

	module.exports = baseIsArguments;


/***/ }),
/* 174 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used to detect unsigned integer values. */
	var reIsUint = /^(?:0|[1-9]\d*)$/;

	/**
	 * Checks if `value` is a valid array-like index.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
	 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
	 */
	function isIndex(value, length) {
	  var type = typeof value;
	  length = length == null ? MAX_SAFE_INTEGER : length;

	  return !!length &&
	    (type == 'number' ||
	      (type != 'symbol' && reIsUint.test(value))) &&
	        (value > -1 && value % 1 == 0 && value < length);
	}

	module.exports = isIndex;


/***/ }),
/* 175 */
/***/ (function(module, exports) {

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/**
	 * Checks if `value` is a valid array-like length.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
	 * @example
	 *
	 * _.isLength(3);
	 * // => true
	 *
	 * _.isLength(Number.MIN_VALUE);
	 * // => false
	 *
	 * _.isLength(Infinity);
	 * // => false
	 *
	 * _.isLength('3');
	 * // => false
	 */
	function isLength(value) {
	  return typeof value == 'number' &&
	    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
	}

	module.exports = isLength;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(126);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Converts `value` to a string key if it's not a string or symbol.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {string|symbol} Returns the key.
	 */
	function toKey(value) {
	  if (typeof value == 'string' || isSymbol(value)) {
	    return value;
	  }
	  var result = (value + '');
	  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
	}

	module.exports = toKey;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

	var baseInvoke = __webpack_require__(178),
	    baseRest = __webpack_require__(184);

	/**
	 * Invokes the method at `path` of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the method to invoke.
	 * @param {...*} [args] The arguments to invoke the method with.
	 * @returns {*} Returns the result of the invoked method.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
	 *
	 * _.invoke(object, 'a[0].b.c.slice', 1, 3);
	 * // => [2, 3]
	 */
	var invoke = baseRest(baseInvoke);

	module.exports = invoke;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(179),
	    castPath = __webpack_require__(123),
	    last = __webpack_require__(180),
	    parent = __webpack_require__(181),
	    toKey = __webpack_require__(176);

	/**
	 * The base implementation of `_.invoke` without support for individual
	 * method arguments.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the method to invoke.
	 * @param {Array} args The arguments to invoke the method with.
	 * @returns {*} Returns the result of the invoked method.
	 */
	function baseInvoke(object, path, args) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  var func = object == null ? object : object[toKey(last(path))];
	  return func == null ? undefined : apply(func, object, args);
	}

	module.exports = baseInvoke;


/***/ }),
/* 179 */
/***/ (function(module, exports) {

	/**
	 * A faster alternative to `Function#apply`, this function invokes `func`
	 * with the `this` binding of `thisArg` and the arguments of `args`.
	 *
	 * @private
	 * @param {Function} func The function to invoke.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} args The arguments to invoke `func` with.
	 * @returns {*} Returns the result of `func`.
	 */
	function apply(func, thisArg, args) {
	  switch (args.length) {
	    case 0: return func.call(thisArg);
	    case 1: return func.call(thisArg, args[0]);
	    case 2: return func.call(thisArg, args[0], args[1]);
	    case 3: return func.call(thisArg, args[0], args[1], args[2]);
	  }
	  return func.apply(thisArg, args);
	}

	module.exports = apply;


/***/ }),
/* 180 */
/***/ (function(module, exports) {

	/**
	 * Gets the last element of `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @returns {*} Returns the last element of `array`.
	 * @example
	 *
	 * _.last([1, 2, 3]);
	 * // => 3
	 */
	function last(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? array[length - 1] : undefined;
	}

	module.exports = last;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(182),
	    baseSlice = __webpack_require__(183);

	/**
	 * Gets the parent value at `path` of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} path The path to get the parent value of.
	 * @returns {*} Returns the parent value.
	 */
	function parent(object, path) {
	  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
	}

	module.exports = parent;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(123),
	    toKey = __webpack_require__(176);

	/**
	 * The base implementation of `_.get` without support for default values.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @returns {*} Returns the resolved value.
	 */
	function baseGet(object, path) {
	  path = castPath(path, object);

	  var index = 0,
	      length = path.length;

	  while (object != null && index < length) {
	    object = object[toKey(path[index++])];
	  }
	  return (index && index == length) ? object : undefined;
	}

	module.exports = baseGet;


/***/ }),
/* 183 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.slice` without an iteratee call guard.
	 *
	 * @private
	 * @param {Array} array The array to slice.
	 * @param {number} [start=0] The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the slice of `array`.
	 */
	function baseSlice(array, start, end) {
	  var index = -1,
	      length = array.length;

	  if (start < 0) {
	    start = -start > length ? 0 : (length + start);
	  }
	  end = end > length ? length : end;
	  if (end < 0) {
	    end += length;
	  }
	  length = start > end ? 0 : ((end - start) >>> 0);
	  start >>>= 0;

	  var result = Array(length);
	  while (++index < length) {
	    result[index] = array[index + start];
	  }
	  return result;
	}

	module.exports = baseSlice;


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(185),
	    overRest = __webpack_require__(186),
	    setToString = __webpack_require__(187);

	/**
	 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @returns {Function} Returns the new function.
	 */
	function baseRest(func, start) {
	  return setToString(overRest(func, start, identity), func + '');
	}

	module.exports = baseRest;


/***/ }),
/* 185 */
/***/ (function(module, exports) {

	/**
	 * This method returns the first argument it receives.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {*} value Any value.
	 * @returns {*} Returns `value`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 *
	 * console.log(_.identity(object) === object);
	 * // => true
	 */
	function identity(value) {
	  return value;
	}

	module.exports = identity;


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(179);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * A specialized version of `baseRest` which transforms the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @param {number} [start=func.length-1] The start position of the rest parameter.
	 * @param {Function} transform The rest array transform.
	 * @returns {Function} Returns the new function.
	 */
	function overRest(func, start, transform) {
	  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
	  return function() {
	    var args = arguments,
	        index = -1,
	        length = nativeMax(args.length - start, 0),
	        array = Array(length);

	    while (++index < length) {
	      array[index] = args[start + index];
	    }
	    index = -1;
	    var otherArgs = Array(start + 1);
	    while (++index < start) {
	      otherArgs[index] = args[index];
	    }
	    otherArgs[start] = transform(array);
	    return apply(func, this, otherArgs);
	  };
	}

	module.exports = overRest;


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetToString = __webpack_require__(188),
	    shortOut = __webpack_require__(191);

	/**
	 * Sets the `toString` method of `func` to return `string`.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var setToString = shortOut(baseSetToString);

	module.exports = setToString;


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

	var constant = __webpack_require__(189),
	    defineProperty = __webpack_require__(190),
	    identity = __webpack_require__(185);

	/**
	 * The base implementation of `setToString` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to modify.
	 * @param {Function} string The `toString` result.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetToString = !defineProperty ? identity : function(func, string) {
	  return defineProperty(func, 'toString', {
	    'configurable': true,
	    'enumerable': false,
	    'value': constant(string),
	    'writable': true
	  });
	};

	module.exports = baseSetToString;


/***/ }),
/* 189 */
/***/ (function(module, exports) {

	/**
	 * Creates a function that returns `value`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {*} value The value to return from the new function.
	 * @returns {Function} Returns the new constant function.
	 * @example
	 *
	 * var objects = _.times(2, _.constant({ 'a': 1 }));
	 *
	 * console.log(objects);
	 * // => [{ 'a': 1 }, { 'a': 1 }]
	 *
	 * console.log(objects[0] === objects[1]);
	 * // => true
	 */
	function constant(value) {
	  return function() {
	    return value;
	  };
	}

	module.exports = constant;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142);

	var defineProperty = (function() {
	  try {
	    var func = getNative(Object, 'defineProperty');
	    func({}, '', {});
	    return func;
	  } catch (e) {}
	}());

	module.exports = defineProperty;


/***/ }),
/* 191 */
/***/ (function(module, exports) {

	/** Used to detect hot functions by number of calls within a span of milliseconds. */
	var HOT_COUNT = 800,
	    HOT_SPAN = 16;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeNow = Date.now;

	/**
	 * Creates a function that'll short out and invoke `identity` instead
	 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
	 * milliseconds.
	 *
	 * @private
	 * @param {Function} func The function to restrict.
	 * @returns {Function} Returns the new shortable function.
	 */
	function shortOut(func) {
	  var count = 0,
	      lastCalled = 0;

	  return function() {
	    var stamp = nativeNow(),
	        remaining = HOT_SPAN - (stamp - lastCalled);

	    lastCalled = stamp;
	    if (remaining > 0) {
	      if (++count >= HOT_COUNT) {
	        return arguments[0];
	      }
	    } else {
	      count = 0;
	    }
	    return func.apply(undefined, arguments);
	  };
	}

	module.exports = shortOut;


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	if (process.env.NODE_ENV !== 'production') {
	  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
	    Symbol.for &&
	    Symbol.for('react.element')) ||
	    0xeac7;

	  var isValidElement = function(object) {
	    return typeof object === 'object' &&
	      object !== null &&
	      object.$$typeof === REACT_ELEMENT_TYPE;
	  };

	  // By explicitly using `prop-types` you are opting into new development behavior.
	  // http://fb.me/prop-types-in-prod
	  var throwOnDirectAccess = true;
	  module.exports = __webpack_require__(193)(isValidElement, throwOnDirectAccess);
	} else {
	  // By explicitly using `prop-types` you are opting into new production behavior.
	  // http://fb.me/prop-types-in-prod
	  module.exports = __webpack_require__(196)();
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(8);
	var invariant = __webpack_require__(6);
	var warning = __webpack_require__(10);

	var ReactPropTypesSecret = __webpack_require__(194);
	var checkPropTypes = __webpack_require__(195);

	module.exports = function(isValidElement, throwOnDirectAccess) {
	  /* global Symbol */
	  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	  /**
	   * Returns the iterator method function contained on the iterable object.
	   *
	   * Be sure to invoke the function with the iterable as context:
	   *
	   *     var iteratorFn = getIteratorFn(myIterable);
	   *     if (iteratorFn) {
	   *       var iterator = iteratorFn.call(myIterable);
	   *       ...
	   *     }
	   *
	   * @param {?object} maybeIterable
	   * @return {?function}
	   */
	  function getIteratorFn(maybeIterable) {
	    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	    if (typeof iteratorFn === 'function') {
	      return iteratorFn;
	    }
	  }

	  /**
	   * Collection of methods that allow declaration and validation of props that are
	   * supplied to React components. Example usage:
	   *
	   *   var Props = require('ReactPropTypes');
	   *   var MyArticle = React.createClass({
	   *     propTypes: {
	   *       // An optional string prop named "description".
	   *       description: Props.string,
	   *
	   *       // A required enum prop named "category".
	   *       category: Props.oneOf(['News','Photos']).isRequired,
	   *
	   *       // A prop named "dialog" that requires an instance of Dialog.
	   *       dialog: Props.instanceOf(Dialog).isRequired
	   *     },
	   *     render: function() { ... }
	   *   });
	   *
	   * A more formal specification of how these methods are used:
	   *
	   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	   *   decl := ReactPropTypes.{type}(.isRequired)?
	   *
	   * Each and every declaration produces a function with the same signature. This
	   * allows the creation of custom validation functions. For example:
	   *
	   *  var MyLink = React.createClass({
	   *    propTypes: {
	   *      // An optional string or URI prop named "href".
	   *      href: function(props, propName, componentName) {
	   *        var propValue = props[propName];
	   *        if (propValue != null && typeof propValue !== 'string' &&
	   *            !(propValue instanceof URI)) {
	   *          return new Error(
	   *            'Expected a string or an URI for ' + propName + ' in ' +
	   *            componentName
	   *          );
	   *        }
	   *      }
	   *    },
	   *    render: function() {...}
	   *  });
	   *
	   * @internal
	   */

	  var ANONYMOUS = '<<anonymous>>';

	  // Important!
	  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
	  var ReactPropTypes = {
	    array: createPrimitiveTypeChecker('array'),
	    bool: createPrimitiveTypeChecker('boolean'),
	    func: createPrimitiveTypeChecker('function'),
	    number: createPrimitiveTypeChecker('number'),
	    object: createPrimitiveTypeChecker('object'),
	    string: createPrimitiveTypeChecker('string'),
	    symbol: createPrimitiveTypeChecker('symbol'),

	    any: createAnyTypeChecker(),
	    arrayOf: createArrayOfTypeChecker,
	    element: createElementTypeChecker(),
	    instanceOf: createInstanceTypeChecker,
	    node: createNodeChecker(),
	    objectOf: createObjectOfTypeChecker,
	    oneOf: createEnumTypeChecker,
	    oneOfType: createUnionTypeChecker,
	    shape: createShapeTypeChecker
	  };

	  /**
	   * inlined Object.is polyfill to avoid requiring consumers ship their own
	   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	   */
	  /*eslint-disable no-self-compare*/
	  function is(x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  }
	  /*eslint-enable no-self-compare*/

	  /**
	   * We use an Error-like object for backward compatibility as people may call
	   * PropTypes directly and inspect their output. However, we don't use real
	   * Errors anymore. We don't inspect their stack anyway, and creating them
	   * is prohibitively expensive if they are created too often, such as what
	   * happens in oneOfType() for any type before the one that matched.
	   */
	  function PropTypeError(message) {
	    this.message = message;
	    this.stack = '';
	  }
	  // Make `instanceof Error` still work for returned errors.
	  PropTypeError.prototype = Error.prototype;

	  function createChainableTypeChecker(validate) {
	    if (process.env.NODE_ENV !== 'production') {
	      var manualPropTypeCallCache = {};
	      var manualPropTypeWarningCount = 0;
	    }
	    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
	      componentName = componentName || ANONYMOUS;
	      propFullName = propFullName || propName;

	      if (secret !== ReactPropTypesSecret) {
	        if (throwOnDirectAccess) {
	          // New behavior only for users of `prop-types` package
	          invariant(
	            false,
	            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	            'Use `PropTypes.checkPropTypes()` to call them. ' +
	            'Read more at http://fb.me/use-check-prop-types'
	          );
	        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
	          // Old behavior for people using React.PropTypes
	          var cacheKey = componentName + ':' + propName;
	          if (
	            !manualPropTypeCallCache[cacheKey] &&
	            // Avoid spamming the console because they are often not actionable except for lib authors
	            manualPropTypeWarningCount < 3
	          ) {
	            warning(
	              false,
	              'You are manually calling a React.PropTypes validation ' +
	              'function for the `%s` prop on `%s`. This is deprecated ' +
	              'and will throw in the standalone `prop-types` package. ' +
	              'You may be seeing this warning due to a third-party PropTypes ' +
	              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
	              propFullName,
	              componentName
	            );
	            manualPropTypeCallCache[cacheKey] = true;
	            manualPropTypeWarningCount++;
	          }
	        }
	      }
	      if (props[propName] == null) {
	        if (isRequired) {
	          if (props[propName] === null) {
	            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
	          }
	          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
	        }
	        return null;
	      } else {
	        return validate(props, propName, componentName, location, propFullName);
	      }
	    }

	    var chainedCheckType = checkType.bind(null, false);
	    chainedCheckType.isRequired = checkType.bind(null, true);

	    return chainedCheckType;
	  }

	  function createPrimitiveTypeChecker(expectedType) {
	    function validate(props, propName, componentName, location, propFullName, secret) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== expectedType) {
	        // `propValue` being instance of, say, date/regexp, pass the 'object'
	        // check, but we can offer a more precise error message here rather than
	        // 'of type `object`'.
	        var preciseType = getPreciseType(propValue);

	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createAnyTypeChecker() {
	    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
	  }

	  function createArrayOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	      }
	      var propValue = props[propName];
	      if (!Array.isArray(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	      }
	      for (var i = 0; i < propValue.length; i++) {
	        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createElementTypeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      if (!isValidElement(propValue)) {
	        var propType = getPropType(propValue);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createInstanceTypeChecker(expectedClass) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!(props[propName] instanceof expectedClass)) {
	        var expectedClassName = expectedClass.name || ANONYMOUS;
	        var actualClassName = getClassName(props[propName]);
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createEnumTypeChecker(expectedValues) {
	    if (!Array.isArray(expectedValues)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      for (var i = 0; i < expectedValues.length; i++) {
	        if (is(propValue, expectedValues[i])) {
	          return null;
	        }
	      }

	      var valuesString = JSON.stringify(expectedValues);
	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createObjectOfTypeChecker(typeChecker) {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (typeof typeChecker !== 'function') {
	        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	      }
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	      }
	      for (var key in propValue) {
	        if (propValue.hasOwnProperty(key)) {
	          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	          if (error instanceof Error) {
	            return error;
	          }
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createUnionTypeChecker(arrayOfTypeCheckers) {
	    if (!Array.isArray(arrayOfTypeCheckers)) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
	      return emptyFunction.thatReturnsNull;
	    }

	    function validate(props, propName, componentName, location, propFullName) {
	      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	        var checker = arrayOfTypeCheckers[i];
	        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
	          return null;
	        }
	      }

	      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createNodeChecker() {
	    function validate(props, propName, componentName, location, propFullName) {
	      if (!isNode(props[propName])) {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function createShapeTypeChecker(shapeTypes) {
	    function validate(props, propName, componentName, location, propFullName) {
	      var propValue = props[propName];
	      var propType = getPropType(propValue);
	      if (propType !== 'object') {
	        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	      }
	      for (var key in shapeTypes) {
	        var checker = shapeTypes[key];
	        if (!checker) {
	          continue;
	        }
	        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
	        if (error) {
	          return error;
	        }
	      }
	      return null;
	    }
	    return createChainableTypeChecker(validate);
	  }

	  function isNode(propValue) {
	    switch (typeof propValue) {
	      case 'number':
	      case 'string':
	      case 'undefined':
	        return true;
	      case 'boolean':
	        return !propValue;
	      case 'object':
	        if (Array.isArray(propValue)) {
	          return propValue.every(isNode);
	        }
	        if (propValue === null || isValidElement(propValue)) {
	          return true;
	        }

	        var iteratorFn = getIteratorFn(propValue);
	        if (iteratorFn) {
	          var iterator = iteratorFn.call(propValue);
	          var step;
	          if (iteratorFn !== propValue.entries) {
	            while (!(step = iterator.next()).done) {
	              if (!isNode(step.value)) {
	                return false;
	              }
	            }
	          } else {
	            // Iterator will provide entry [k,v] tuples rather than values.
	            while (!(step = iterator.next()).done) {
	              var entry = step.value;
	              if (entry) {
	                if (!isNode(entry[1])) {
	                  return false;
	                }
	              }
	            }
	          }
	        } else {
	          return false;
	        }

	        return true;
	      default:
	        return false;
	    }
	  }

	  function isSymbol(propType, propValue) {
	    // Native Symbol.
	    if (propType === 'symbol') {
	      return true;
	    }

	    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	    if (propValue['@@toStringTag'] === 'Symbol') {
	      return true;
	    }

	    // Fallback for non-spec compliant Symbols which are polyfilled.
	    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	      return true;
	    }

	    return false;
	  }

	  // Equivalent of `typeof` but with special handling for array and regexp.
	  function getPropType(propValue) {
	    var propType = typeof propValue;
	    if (Array.isArray(propValue)) {
	      return 'array';
	    }
	    if (propValue instanceof RegExp) {
	      // Old webkits (at least until Android 4.0) return 'function' rather than
	      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	      // passes PropTypes.object.
	      return 'object';
	    }
	    if (isSymbol(propType, propValue)) {
	      return 'symbol';
	    }
	    return propType;
	  }

	  // This handles more types than `getPropType`. Only used for error messages.
	  // See `createPrimitiveTypeChecker`.
	  function getPreciseType(propValue) {
	    var propType = getPropType(propValue);
	    if (propType === 'object') {
	      if (propValue instanceof Date) {
	        return 'date';
	      } else if (propValue instanceof RegExp) {
	        return 'regexp';
	      }
	    }
	    return propType;
	  }

	  // Returns class name of the object, if any.
	  function getClassName(propValue) {
	    if (!propValue.constructor || !propValue.constructor.name) {
	      return ANONYMOUS;
	    }
	    return propValue.constructor.name;
	  }

	  ReactPropTypes.checkPropTypes = checkPropTypes;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 194 */
/***/ (function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

	module.exports = ReactPropTypesSecret;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	if (process.env.NODE_ENV !== 'production') {
	  var invariant = __webpack_require__(6);
	  var warning = __webpack_require__(10);
	  var ReactPropTypesSecret = __webpack_require__(194);
	  var loggedTypeFailures = {};
	}

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?Function} getStack Returns the component stack.
	 * @private
	 */
	function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
	  if (process.env.NODE_ENV !== 'production') {
	    for (var typeSpecName in typeSpecs) {
	      if (typeSpecs.hasOwnProperty(typeSpecName)) {
	        var error;
	        // Prop type validation may throw. In case they do, we don't want to
	        // fail the render phase where it didn't fail before. So we log it.
	        // After these have been cleaned up, we'll let them throw.
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
	          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
	        } catch (ex) {
	          error = ex;
	        }
	        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
	        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	          // Only monitor this failure once because there tends to be a lot of the
	          // same error.
	          loggedTypeFailures[error.message] = true;

	          var stack = getStack ? getStack() : '';

	          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
	        }
	      }
	    }
	  }
	}

	module.exports = checkPropTypes;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	var emptyFunction = __webpack_require__(8);
	var invariant = __webpack_require__(6);

	module.exports = function() {
	  // Important!
	  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
	  function shim() {
	    invariant(
	      false,
	      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
	      'Use PropTypes.checkPropTypes() to call them. ' +
	      'Read more at http://fb.me/use-check-prop-types'
	    );
	  };
	  shim.isRequired = shim;
	  function getShim() {
	    return shim;
	  };
	  var ReactPropTypes = {
	    array: shim,
	    bool: shim,
	    func: shim,
	    number: shim,
	    object: shim,
	    string: shim,
	    symbol: shim,

	    any: shim,
	    arrayOf: getShim,
	    element: shim,
	    instanceOf: getShim,
	    node: shim,
	    objectOf: getShim,
	    oneOf: getShim,
	    oneOfType: getShim,
	    shape: getShim
	  };

	  ReactPropTypes.checkPropTypes = emptyFunction;
	  ReactPropTypes.PropTypes = ReactPropTypes;

	  return ReactPropTypes;
	};


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.objectDiff = exports.numberToWord = exports.numberToWordMap = exports.keyboardKey = exports.SUI = exports.META = exports.leven = exports.isBrowser = exports.partitionHTMLInputProps = exports.htmlInputProps = exports.htmlInputEvents = exports.htmlInputAttrs = exports.getElementType = exports.getUnhandledProps = exports.makeDebugger = exports.debug = exports.customPropTypes = exports.useWidthProp = exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useOnlyProp = exports.useValueAndKey = exports.useKeyOrValueAndKey = exports.useKeyOnly = exports.childrenUtils = exports.AutoControlledComponent = undefined;

	var _AutoControlledComponent = __webpack_require__(198);

	Object.defineProperty(exports, 'AutoControlledComponent', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_AutoControlledComponent).default;
	  }
	});

	var _classNameBuilders = __webpack_require__(289);

	Object.defineProperty(exports, 'useKeyOnly', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useKeyOnly;
	  }
	});
	Object.defineProperty(exports, 'useKeyOrValueAndKey', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useKeyOrValueAndKey;
	  }
	});
	Object.defineProperty(exports, 'useValueAndKey', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useValueAndKey;
	  }
	});
	Object.defineProperty(exports, 'useOnlyProp', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useOnlyProp;
	  }
	});
	Object.defineProperty(exports, 'useTextAlignProp', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useTextAlignProp;
	  }
	});
	Object.defineProperty(exports, 'useVerticalAlignProp', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useVerticalAlignProp;
	  }
	});
	Object.defineProperty(exports, 'useWidthProp', {
	  enumerable: true,
	  get: function get() {
	    return _classNameBuilders.useWidthProp;
	  }
	});

	var _debug = __webpack_require__(291);

	Object.defineProperty(exports, 'debug', {
	  enumerable: true,
	  get: function get() {
	    return _debug.debug;
	  }
	});
	Object.defineProperty(exports, 'makeDebugger', {
	  enumerable: true,
	  get: function get() {
	    return _debug.makeDebugger;
	  }
	});

	var _factories = __webpack_require__(296);

	Object.keys(_factories).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _factories[key];
	    }
	  });
	});

	var _getUnhandledProps = __webpack_require__(308);

	Object.defineProperty(exports, 'getUnhandledProps', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getUnhandledProps).default;
	  }
	});

	var _getElementType = __webpack_require__(309);

	Object.defineProperty(exports, 'getElementType', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_getElementType).default;
	  }
	});

	var _htmlInputPropsUtils = __webpack_require__(310);

	Object.defineProperty(exports, 'htmlInputAttrs', {
	  enumerable: true,
	  get: function get() {
	    return _htmlInputPropsUtils.htmlInputAttrs;
	  }
	});
	Object.defineProperty(exports, 'htmlInputEvents', {
	  enumerable: true,
	  get: function get() {
	    return _htmlInputPropsUtils.htmlInputEvents;
	  }
	});
	Object.defineProperty(exports, 'htmlInputProps', {
	  enumerable: true,
	  get: function get() {
	    return _htmlInputPropsUtils.htmlInputProps;
	  }
	});
	Object.defineProperty(exports, 'partitionHTMLInputProps', {
	  enumerable: true,
	  get: function get() {
	    return _htmlInputPropsUtils.partitionHTMLInputProps;
	  }
	});

	var _isBrowser = __webpack_require__(292);

	Object.defineProperty(exports, 'isBrowser', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_isBrowser).default;
	  }
	});

	var _leven = __webpack_require__(314);

	Object.defineProperty(exports, 'leven', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_leven).default;
	  }
	});

	var _keyboardKey = __webpack_require__(315);

	Object.defineProperty(exports, 'keyboardKey', {
	  enumerable: true,
	  get: function get() {
	    return _interopRequireDefault(_keyboardKey).default;
	  }
	});

	var _numberToWord = __webpack_require__(290);

	Object.defineProperty(exports, 'numberToWordMap', {
	  enumerable: true,
	  get: function get() {
	    return _numberToWord.numberToWordMap;
	  }
	});
	Object.defineProperty(exports, 'numberToWord', {
	  enumerable: true,
	  get: function get() {
	    return _numberToWord.numberToWord;
	  }
	});

	var _objectDiff = __webpack_require__(317);

	Object.defineProperty(exports, 'objectDiff', {
	  enumerable: true,
	  get: function get() {
	    return _objectDiff.objectDiff;
	  }
	});

	var _childrenUtils2 = __webpack_require__(321);

	var _childrenUtils = _interopRequireWildcard(_childrenUtils2);

	var _customPropTypes2 = __webpack_require__(328);

	var _customPropTypes = _interopRequireWildcard(_customPropTypes2);

	var _META2 = __webpack_require__(456);

	var _META = _interopRequireWildcard(_META2);

	var _SUI2 = __webpack_require__(463);

	var _SUI = _interopRequireWildcard(_SUI2);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.childrenUtils = _childrenUtils;
	exports.customPropTypes = _customPropTypes;
	exports.META = _META;
	exports.SUI = _SUI;

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getAutoControlledStateValue = undefined;

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _difference2 = __webpack_require__(199);

	var _difference3 = _interopRequireDefault(_difference2);

	var _isUndefined2 = __webpack_require__(217);

	var _isUndefined3 = _interopRequireDefault(_isUndefined2);

	var _startsWith2 = __webpack_require__(218);

	var _startsWith3 = _interopRequireDefault(_startsWith2);

	var _filter2 = __webpack_require__(223);

	var _filter3 = _interopRequireDefault(_filter2);

	var _isEmpty2 = __webpack_require__(281);

	var _isEmpty3 = _interopRequireDefault(_isEmpty2);

	var _keys2 = __webpack_require__(230);

	var _keys3 = _interopRequireDefault(_keys2);

	var _intersection2 = __webpack_require__(282);

	var _intersection3 = _interopRequireDefault(_intersection2);

	var _has2 = __webpack_require__(120);

	var _has3 = _interopRequireDefault(_has2);

	var _each2 = __webpack_require__(285);

	var _each3 = _interopRequireDefault(_each2);

	var _react = __webpack_require__(2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var getDefaultPropName = function getDefaultPropName(prop) {
	  return 'default' + (prop[0].toUpperCase() + prop.slice(1));
	};

	/**
	 * Return the auto controlled state value for a give prop. The initial value is chosen in this order:
	 *  - regular props
	 *  - then, default props
	 *  - then, initial state
	 *  - then, `checked` defaults to false
	 *  - then, `value` defaults to '' or [] if props.multiple
	 *  - else, undefined
	 *
	 *  @param {string} propName A prop name
	 *  @param {object} [props] A props object
	 *  @param {object} [state] A state object
	 *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state
	 */
	/* eslint-disable no-console */
	/**
	 * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.
	 * In short, we need identical functionality to setState(), unless there is a prop defined
	 * for the state key.  Also:
	 *
	 * 1. Single Renders
	 *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()
	 *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.
	 *    See www.react.run/4kJFdKoxb/27 for an example of this issue.
	 *
	 * 2. Simple Testing
	 *    Using a HOC means you must either test the undecorated component or test through the decorator.
	 *    Testing the undecorated component means you must mock the decorator functionality.
	 *    Testing through the HOC means you can not simply shallow render your component.
	 *
	 * 3. Statics
	 *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more
	 *    looping over properties and storing references.  We rely heavily on statics for testing and sub
	 *    components.
	 *
	 * 4. Instance Methods
	 *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless
	 *    hoisted and exposed by the HOC.
	 */
	var getAutoControlledStateValue = exports.getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {
	  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;

	  // regular props
	  var propValue = props[propName];
	  if (propValue !== undefined) return propValue;

	  if (includeDefaults) {
	    // defaultProps
	    var defaultProp = props[getDefaultPropName(propName)];
	    if (defaultProp !== undefined) return defaultProp;

	    // initial state - state may be null or undefined
	    if (state) {
	      var initialState = state[propName];
	      if (initialState !== undefined) return initialState;
	    }
	  }

	  // React doesn't allow changing from uncontrolled to controlled components,
	  // default checked/value if they were not present.
	  if (propName === 'checked') return false;
	  if (propName === 'value') return props.multiple ? [] : '';

	  // otherwise, undefined
	};

	var AutoControlledComponent = function (_Component) {
	  (0, _inherits3.default)(AutoControlledComponent, _Component);

	  function AutoControlledComponent() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, AutoControlledComponent);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args))), _this), _this.trySetState = function (maybeState, state) {
	      var autoControlledProps = _this.constructor.autoControlledProps;

	      if (process.env.NODE_ENV !== 'production') {
	        var name = _this.constructor.name;
	        // warn about failed attempts to setState for keys not listed in autoControlledProps

	        var illegalKeys = (0, _difference3.default)((0, _keys3.default)(maybeState), autoControlledProps);
	        if (!(0, _isEmpty3.default)(illegalKeys)) {
	          console.error([name + ' called trySetState() with controlled props: "' + illegalKeys + '".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));
	        }
	      }

	      var newState = Object.keys(maybeState).reduce(function (acc, prop) {
	        // ignore props defined by the parent
	        if (_this.props[prop] !== undefined) return acc;

	        // ignore props not listed in auto controlled props
	        if (autoControlledProps.indexOf(prop) === -1) return acc;

	        acc[prop] = maybeState[prop];
	        return acc;
	      }, {});

	      if (state) newState = (0, _extends3.default)({}, newState, state);

	      if (Object.keys(newState).length > 0) _this.setState(newState);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(AutoControlledComponent, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this2 = this;

	      var autoControlledProps = this.constructor.autoControlledProps;


	      if (process.env.NODE_ENV !== 'production') {
	        var _constructor = this.constructor,
	            defaultProps = _constructor.defaultProps,
	            name = _constructor.name,
	            propTypes = _constructor.propTypes;
	        // require static autoControlledProps

	        if (!autoControlledProps) {
	          console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');
	        }

	        // require propTypes
	        (0, _each3.default)(autoControlledProps, function (prop) {
	          var defaultProp = getDefaultPropName(prop);
	          // regular prop
	          if (!(0, _has3.default)(propTypes, defaultProp)) {
	            console.error(name + ' is missing "' + defaultProp + '" propTypes validation for auto controlled prop "' + prop + '".');
	          }
	          // its default prop
	          if (!(0, _has3.default)(propTypes, prop)) {
	            console.error(name + ' is missing propTypes validation for auto controlled prop "' + prop + '".');
	          }
	        });

	        // prevent autoControlledProps in defaultProps
	        //
	        // When setting state, auto controlled props values always win (so the parent can manage them).
	        // It is not reasonable to decipher the difference between props from the parent and defaultProps.
	        // Allowing defaultProps results in trySetState always deferring to the defaultProp value.
	        // Auto controlled props also listed in defaultProps can never be updated.
	        //
	        // To set defaults for an AutoControlled prop, you can set the initial state in the
	        // constructor or by using an ES7 property initializer:
	        // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers
	        var illegalDefaults = (0, _intersection3.default)(autoControlledProps, (0, _keys3.default)(defaultProps));
	        if (!(0, _isEmpty3.default)(illegalDefaults)) {
	          console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: "' + illegalDefaults + '".'].join(' '));
	        }

	        // prevent listing defaultProps in autoControlledProps
	        //
	        // Default props are automatically handled.
	        // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.
	        var illegalAutoControlled = (0, _filter3.default)(autoControlledProps, function (prop) {
	          return (0, _startsWith3.default)(prop, 'default');
	        });
	        if (!(0, _isEmpty3.default)(illegalAutoControlled)) {
	          console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: "' + illegalAutoControlled + '".'].join(' '));
	        }
	      }

	      // Auto controlled props are copied to state.
	      // Set initial state by copying auto controlled props to state.
	      // Also look for the default prop for any auto controlled props (foo => defaultFoo)
	      // so we can set initial values from defaults.
	      var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {
	        acc[prop] = getAutoControlledStateValue(prop, _this2.props, _this2.state, true);

	        if (process.env.NODE_ENV !== 'production') {
	          var defaultPropName = getDefaultPropName(prop);
	          var _name = _this2.constructor.name;
	          // prevent defaultFoo={} along side foo={}

	          if (!(0, _isUndefined3.default)(_this2.props[defaultPropName]) && !(0, _isUndefined3.default)(_this2.props[prop])) {
	            console.error(_name + ' prop "' + prop + '" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');
	          }
	        }

	        return acc;
	      }, {});

	      this.state = (0, _extends3.default)({}, this.state, initialAutoControlledState);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      var _this3 = this;

	      var autoControlledProps = this.constructor.autoControlledProps;

	      // Solve the next state for autoControlledProps

	      var newState = autoControlledProps.reduce(function (acc, prop) {
	        var isNextUndefined = (0, _isUndefined3.default)(nextProps[prop]);
	        var propWasRemoved = !(0, _isUndefined3.default)(_this3.props[prop]) && isNextUndefined;

	        // if next is defined then use its value
	        if (!isNextUndefined) acc[prop] = nextProps[prop];

	        // reinitialize state for props just removed / set undefined
	        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);

	        return acc;
	      }, {});

	      if (Object.keys(newState).length > 0) this.setState(newState);
	    }

	    /**
	     * Safely attempt to set state for props that might be controlled by the user.
	     * Second argument is a state object that is always passed to setState.
	     * @param {object} maybeState State that corresponds to controlled props.
	     * @param {object} [state] Actual state, useful when you also need to setState.
	     */

	  }]);
	  return AutoControlledComponent;
	}(_react.Component);

	exports.default = AutoControlledComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(200),
	    baseFlatten = __webpack_require__(212),
	    baseRest = __webpack_require__(184),
	    isArrayLikeObject = __webpack_require__(215);

	/**
	 * Creates an array of `array` values not included in the other given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * **Note:** Unlike `_.pullAll`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...Array} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.without, _.xor
	 * @example
	 *
	 * _.difference([2, 1], [2, 3]);
	 * // => [1]
	 */
	var difference = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
	    : [];
	});

	module.exports = difference;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(201),
	    arrayIncludes = __webpack_require__(204),
	    arrayIncludesWith = __webpack_require__(209),
	    arrayMap = __webpack_require__(171),
	    baseUnary = __webpack_require__(210),
	    cacheHas = __webpack_require__(211);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of methods like `_.difference` without support
	 * for excluding multiple arrays or iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Array} values The values to exclude.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of filtered values.
	 */
	function baseDifference(array, values, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      isCommon = true,
	      length = array.length,
	      result = [],
	      valuesLength = values.length;

	  if (!length) {
	    return result;
	  }
	  if (iteratee) {
	    values = arrayMap(values, baseUnary(iteratee));
	  }
	  if (comparator) {
	    includes = arrayIncludesWith;
	    isCommon = false;
	  }
	  else if (values.length >= LARGE_ARRAY_SIZE) {
	    includes = cacheHas;
	    isCommon = false;
	    values = new SetCache(values);
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee == null ? value : iteratee(value);

	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var valuesIndex = valuesLength;
	      while (valuesIndex--) {
	        if (values[valuesIndex] === computed) {
	          continue outer;
	        }
	      }
	      result.push(value);
	    }
	    else if (!includes(values, computed, comparator)) {
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseDifference;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

	var MapCache = __webpack_require__(137),
	    setCacheAdd = __webpack_require__(202),
	    setCacheHas = __webpack_require__(203);

	/**
	 *
	 * Creates an array cache object to store unique values.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [values] The values to cache.
	 */
	function SetCache(values) {
	  var index = -1,
	      length = values == null ? 0 : values.length;

	  this.__data__ = new MapCache;
	  while (++index < length) {
	    this.add(values[index]);
	  }
	}

	// Add methods to `SetCache`.
	SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
	SetCache.prototype.has = setCacheHas;

	module.exports = SetCache;


/***/ }),
/* 202 */
/***/ (function(module, exports) {

	/** Used to stand-in for `undefined` hash values. */
	var HASH_UNDEFINED = '__lodash_hash_undefined__';

	/**
	 * Adds `value` to the array cache.
	 *
	 * @private
	 * @name add
	 * @memberOf SetCache
	 * @alias push
	 * @param {*} value The value to cache.
	 * @returns {Object} Returns the cache instance.
	 */
	function setCacheAdd(value) {
	  this.__data__.set(value, HASH_UNDEFINED);
	  return this;
	}

	module.exports = setCacheAdd;


/***/ }),
/* 203 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is in the array cache.
	 *
	 * @private
	 * @name has
	 * @memberOf SetCache
	 * @param {*} value The value to search for.
	 * @returns {number} Returns `true` if `value` is found, else `false`.
	 */
	function setCacheHas(value) {
	  return this.__data__.has(value);
	}

	module.exports = setCacheHas;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(205);

	/**
	 * A specialized version of `_.includes` for arrays without support for
	 * specifying an index to search from.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludes(array, value) {
	  var length = array == null ? 0 : array.length;
	  return !!length && baseIndexOf(array, value, 0) > -1;
	}

	module.exports = arrayIncludes;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(206),
	    baseIsNaN = __webpack_require__(207),
	    strictIndexOf = __webpack_require__(208);

	/**
	 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseIndexOf(array, value, fromIndex) {
	  return value === value
	    ? strictIndexOf(array, value, fromIndex)
	    : baseFindIndex(array, baseIsNaN, fromIndex);
	}

	module.exports = baseIndexOf;


/***/ }),
/* 206 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.findIndex` and `_.findLastIndex` without
	 * support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} predicate The function invoked per iteration.
	 * @param {number} fromIndex The index to search from.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function baseFindIndex(array, predicate, fromIndex, fromRight) {
	  var length = array.length,
	      index = fromIndex + (fromRight ? 1 : -1);

	  while ((fromRight ? index-- : ++index < length)) {
	    if (predicate(array[index], index, array)) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = baseFindIndex;


/***/ }),
/* 207 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.isNaN` without support for number objects.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
	 */
	function baseIsNaN(value) {
	  return value !== value;
	}

	module.exports = baseIsNaN;


/***/ }),
/* 208 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.indexOf` which performs strict equality
	 * comparisons of values, i.e. `===`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} fromIndex The index to search from.
	 * @returns {number} Returns the index of the matched value, else `-1`.
	 */
	function strictIndexOf(array, value, fromIndex) {
	  var index = fromIndex - 1,
	      length = array.length;

	  while (++index < length) {
	    if (array[index] === value) {
	      return index;
	    }
	  }
	  return -1;
	}

	module.exports = strictIndexOf;


/***/ }),
/* 209 */
/***/ (function(module, exports) {

	/**
	 * This function is like `arrayIncludes` except that it accepts a comparator.
	 *
	 * @private
	 * @param {Array} [array] The array to inspect.
	 * @param {*} target The value to search for.
	 * @param {Function} comparator The comparator invoked per element.
	 * @returns {boolean} Returns `true` if `target` is found, else `false`.
	 */
	function arrayIncludesWith(array, value, comparator) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  while (++index < length) {
	    if (comparator(value, array[index])) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arrayIncludesWith;


/***/ }),
/* 210 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.unary` without support for storing metadata.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @returns {Function} Returns the new capped function.
	 */
	function baseUnary(func) {
	  return function(value) {
	    return func(value);
	  };
	}

	module.exports = baseUnary;


/***/ }),
/* 211 */
/***/ (function(module, exports) {

	/**
	 * Checks if a `cache` value for `key` exists.
	 *
	 * @private
	 * @param {Object} cache The cache to query.
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function cacheHas(cache, key) {
	  return cache.has(key);
	}

	module.exports = cacheHas;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(213),
	    isFlattenable = __webpack_require__(214);

	/**
	 * The base implementation of `_.flatten` with support for restricting flattening.
	 *
	 * @private
	 * @param {Array} array The array to flatten.
	 * @param {number} depth The maximum recursion depth.
	 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
	 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
	 * @param {Array} [result=[]] The initial result value.
	 * @returns {Array} Returns the new flattened array.
	 */
	function baseFlatten(array, depth, predicate, isStrict, result) {
	  var index = -1,
	      length = array.length;

	  predicate || (predicate = isFlattenable);
	  result || (result = []);

	  while (++index < length) {
	    var value = array[index];
	    if (depth > 0 && predicate(value)) {
	      if (depth > 1) {
	        // Recursively flatten arrays (susceptible to call stack limits).
	        baseFlatten(value, depth - 1, predicate, isStrict, result);
	      } else {
	        arrayPush(result, value);
	      }
	    } else if (!isStrict) {
	      result[result.length] = value;
	    }
	  }
	  return result;
	}

	module.exports = baseFlatten;


/***/ }),
/* 213 */
/***/ (function(module, exports) {

	/**
	 * Appends the elements of `values` to `array`.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {Array} values The values to append.
	 * @returns {Array} Returns `array`.
	 */
	function arrayPush(array, values) {
	  var index = -1,
	      length = values.length,
	      offset = array.length;

	  while (++index < length) {
	    array[offset + index] = values[index];
	  }
	  return array;
	}

	module.exports = arrayPush;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(128),
	    isArguments = __webpack_require__(172),
	    isArray = __webpack_require__(124);

	/** Built-in value references. */
	var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

	/**
	 * Checks if `value` is a flattenable `arguments` object or array.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
	 */
	function isFlattenable(value) {
	  return isArray(value) || isArguments(value) ||
	    !!(spreadableSymbol && value && value[spreadableSymbol]);
	}

	module.exports = isFlattenable;


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(216),
	    isObjectLike = __webpack_require__(133);

	/**
	 * This method is like `_.isArrayLike` except that it also checks if `value`
	 * is an object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an array-like object,
	 *  else `false`.
	 * @example
	 *
	 * _.isArrayLikeObject([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLikeObject(document.body.children);
	 * // => true
	 *
	 * _.isArrayLikeObject('abc');
	 * // => false
	 *
	 * _.isArrayLikeObject(_.noop);
	 * // => false
	 */
	function isArrayLikeObject(value) {
	  return isObjectLike(value) && isArrayLike(value);
	}

	module.exports = isArrayLikeObject;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

	var isFunction = __webpack_require__(144),
	    isLength = __webpack_require__(175);

	/**
	 * Checks if `value` is array-like. A value is considered array-like if it's
	 * not a function and has a `value.length` that's an integer greater than or
	 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
	 * @example
	 *
	 * _.isArrayLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isArrayLike(document.body.children);
	 * // => true
	 *
	 * _.isArrayLike('abc');
	 * // => true
	 *
	 * _.isArrayLike(_.noop);
	 * // => false
	 */
	function isArrayLike(value) {
	  return value != null && isLength(value.length) && !isFunction(value);
	}

	module.exports = isArrayLike;


/***/ }),
/* 217 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `undefined`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
	 * @example
	 *
	 * _.isUndefined(void 0);
	 * // => true
	 *
	 * _.isUndefined(null);
	 * // => false
	 */
	function isUndefined(value) {
	  return value === undefined;
	}

	module.exports = isUndefined;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(219),
	    baseToString = __webpack_require__(170),
	    toInteger = __webpack_require__(220),
	    toString = __webpack_require__(169);

	/**
	 * Checks if `string` starts with the given target string.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {string} [target] The string to search for.
	 * @param {number} [position=0] The position to search from.
	 * @returns {boolean} Returns `true` if `string` starts with `target`,
	 *  else `false`.
	 * @example
	 *
	 * _.startsWith('abc', 'a');
	 * // => true
	 *
	 * _.startsWith('abc', 'b');
	 * // => false
	 *
	 * _.startsWith('abc', 'b', 1);
	 * // => true
	 */
	function startsWith(string, target, position) {
	  string = toString(string);
	  position = position == null
	    ? 0
	    : baseClamp(toInteger(position), 0, string.length);

	  target = baseToString(target);
	  return string.slice(position, position + target.length) == target;
	}

	module.exports = startsWith;


/***/ }),
/* 219 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.clamp` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {number} number The number to clamp.
	 * @param {number} [lower] The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the clamped number.
	 */
	function baseClamp(number, lower, upper) {
	  if (number === number) {
	    if (upper !== undefined) {
	      number = number <= upper ? number : upper;
	    }
	    if (lower !== undefined) {
	      number = number >= lower ? number : lower;
	    }
	  }
	  return number;
	}

	module.exports = baseClamp;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

	var toFinite = __webpack_require__(221);

	/**
	 * Converts `value` to an integer.
	 *
	 * **Note:** This method is loosely based on
	 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted integer.
	 * @example
	 *
	 * _.toInteger(3.2);
	 * // => 3
	 *
	 * _.toInteger(Number.MIN_VALUE);
	 * // => 0
	 *
	 * _.toInteger(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toInteger('3.2');
	 * // => 3
	 */
	function toInteger(value) {
	  var result = toFinite(value),
	      remainder = result % 1;

	  return result === result ? (remainder ? result - remainder : result) : 0;
	}

	module.exports = toInteger;


/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

	var toNumber = __webpack_require__(222);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0,
	    MAX_INTEGER = 1.7976931348623157e+308;

	/**
	 * Converts `value` to a finite number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.12.0
	 * @category Lang
	 * @param {*} value The value to convert.
	 * @returns {number} Returns the converted number.
	 * @example
	 *
	 * _.toFinite(3.2);
	 * // => 3.2
	 *
	 * _.toFinite(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toFinite(Infinity);
	 * // => 1.7976931348623157e+308
	 *
	 * _.toFinite('3.2');
	 * // => 3.2
	 */
	function toFinite(value) {
	  if (!value) {
	    return value === 0 ? value : 0;
	  }
	  value = toNumber(value);
	  if (value === INFINITY || value === -INFINITY) {
	    var sign = (value < 0 ? -1 : 1);
	    return sign * MAX_INTEGER;
	  }
	  return value === value ? value : 0;
	}

	module.exports = toFinite;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(145),
	    isSymbol = __webpack_require__(126);

	/** Used as references for various `Number` constants. */
	var NAN = 0 / 0;

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/** Used to detect bad signed hexadecimal string values. */
	var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

	/** Used to detect binary string values. */
	var reIsBinary = /^0b[01]+$/i;

	/** Used to detect octal string values. */
	var reIsOctal = /^0o[0-7]+$/i;

	/** Built-in method references without a dependency on `root`. */
	var freeParseInt = parseInt;

	/**
	 * Converts `value` to a number.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to process.
	 * @returns {number} Returns the number.
	 * @example
	 *
	 * _.toNumber(3.2);
	 * // => 3.2
	 *
	 * _.toNumber(Number.MIN_VALUE);
	 * // => 5e-324
	 *
	 * _.toNumber(Infinity);
	 * // => Infinity
	 *
	 * _.toNumber('3.2');
	 * // => 3.2
	 */
	function toNumber(value) {
	  if (typeof value == 'number') {
	    return value;
	  }
	  if (isSymbol(value)) {
	    return NAN;
	  }
	  if (isObject(value)) {
	    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
	    value = isObject(other) ? (other + '') : other;
	  }
	  if (typeof value != 'string') {
	    return value === 0 ? value : +value;
	  }
	  value = value.replace(reTrim, '');
	  var isBinary = reIsBinary.test(value);
	  return (isBinary || reIsOctal.test(value))
	    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
	    : (reIsBadHex.test(value) ? NAN : +value);
	}

	module.exports = toNumber;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(224),
	    baseFilter = __webpack_require__(225),
	    baseIteratee = __webpack_require__(244),
	    isArray = __webpack_require__(124);

	/**
	 * Iterates over elements of `collection`, returning an array of all elements
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * **Note:** Unlike `_.remove`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 * @see _.reject
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * _.filter(users, function(o) { return !o.active; });
	 * // => objects for ['fred']
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, { 'age': 36, 'active': true });
	 * // => objects for ['barney']
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, ['active', false]);
	 * // => objects for ['fred']
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.filter(users, 'active');
	 * // => objects for ['barney']
	 */
	function filter(collection, predicate) {
	  var func = isArray(collection) ? arrayFilter : baseFilter;
	  return func(collection, baseIteratee(predicate, 3));
	}

	module.exports = filter;


/***/ }),
/* 224 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.filter` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function arrayFilter(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];

	  while (++index < length) {
	    var value = array[index];
	    if (predicate(value, index, array)) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}

	module.exports = arrayFilter;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(226);

	/**
	 * The base implementation of `_.filter` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {Array} Returns the new filtered array.
	 */
	function baseFilter(collection, predicate) {
	  var result = [];
	  baseEach(collection, function(value, index, collection) {
	    if (predicate(value, index, collection)) {
	      result.push(value);
	    }
	  });
	  return result;
	}

	module.exports = baseFilter;


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

	var baseForOwn = __webpack_require__(227),
	    createBaseEach = __webpack_require__(243);

	/**
	 * The base implementation of `_.forEach` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 */
	var baseEach = createBaseEach(baseForOwn);

	module.exports = baseEach;


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFor = __webpack_require__(228),
	    keys = __webpack_require__(230);

	/**
	 * The base implementation of `_.forOwn` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Object} Returns `object`.
	 */
	function baseForOwn(object, iteratee) {
	  return object && baseFor(object, iteratee, keys);
	}

	module.exports = baseForOwn;


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

	var createBaseFor = __webpack_require__(229);

	/**
	 * The base implementation of `baseForOwn` which iterates over `object`
	 * properties returned by `keysFunc` and invokes `iteratee` for each property.
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @private
	 * @param {Object} object The object to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @returns {Object} Returns `object`.
	 */
	var baseFor = createBaseFor();

	module.exports = baseFor;


/***/ }),
/* 229 */
/***/ (function(module, exports) {

	/**
	 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseFor(fromRight) {
	  return function(object, iteratee, keysFunc) {
	    var index = -1,
	        iterable = Object(object),
	        props = keysFunc(object),
	        length = props.length;

	    while (length--) {
	      var key = props[fromRight ? length : ++index];
	      if (iteratee(iterable[key], key, iterable) === false) {
	        break;
	      }
	    }
	    return object;
	  };
	}

	module.exports = createBaseFor;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(231),
	    baseKeys = __webpack_require__(239),
	    isArrayLike = __webpack_require__(216);

	/**
	 * Creates an array of the own enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects. See the
	 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * for more details.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keys(new Foo);
	 * // => ['a', 'b'] (iteration order is not guaranteed)
	 *
	 * _.keys('hi');
	 * // => ['0', '1']
	 */
	function keys(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
	}

	module.exports = keys;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(232),
	    isArguments = __webpack_require__(172),
	    isArray = __webpack_require__(124),
	    isBuffer = __webpack_require__(233),
	    isIndex = __webpack_require__(174),
	    isTypedArray = __webpack_require__(236);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates an array of the enumerable property names of the array-like `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @param {boolean} inherited Specify returning inherited property names.
	 * @returns {Array} Returns the array of property names.
	 */
	function arrayLikeKeys(value, inherited) {
	  var isArr = isArray(value),
	      isArg = !isArr && isArguments(value),
	      isBuff = !isArr && !isArg && isBuffer(value),
	      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
	      skipIndexes = isArr || isArg || isBuff || isType,
	      result = skipIndexes ? baseTimes(value.length, String) : [],
	      length = result.length;

	  for (var key in value) {
	    if ((inherited || hasOwnProperty.call(value, key)) &&
	        !(skipIndexes && (
	           // Safari 9 has enumerable `arguments.length` in strict mode.
	           key == 'length' ||
	           // Node.js 0.10 has enumerable non-index properties on buffers.
	           (isBuff && (key == 'offset' || key == 'parent')) ||
	           // PhantomJS 2 has enumerable non-index properties on typed arrays.
	           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
	           // Skip index properties.
	           isIndex(key, length)
	        ))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = arrayLikeKeys;


/***/ }),
/* 232 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.times` without support for iteratee shorthands
	 * or max array length checks.
	 *
	 * @private
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 */
	function baseTimes(n, iteratee) {
	  var index = -1,
	      result = Array(n);

	  while (++index < n) {
	    result[index] = iteratee(index);
	  }
	  return result;
	}

	module.exports = baseTimes;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(129),
	    stubFalse = __webpack_require__(235);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

	/**
	 * Checks if `value` is a buffer.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
	 * @example
	 *
	 * _.isBuffer(new Buffer(2));
	 * // => true
	 *
	 * _.isBuffer(new Uint8Array(2));
	 * // => false
	 */
	var isBuffer = nativeIsBuffer || stubFalse;

	module.exports = isBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(234)(module)))

/***/ }),
/* 234 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 235 */
/***/ (function(module, exports) {

	/**
	 * This method returns `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {boolean} Returns `false`.
	 * @example
	 *
	 * _.times(2, _.stubFalse);
	 * // => [false, false]
	 */
	function stubFalse() {
	  return false;
	}

	module.exports = stubFalse;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsTypedArray = __webpack_require__(237),
	    baseUnary = __webpack_require__(210),
	    nodeUtil = __webpack_require__(238);

	/* Node.js helper references. */
	var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

	/**
	 * Checks if `value` is classified as a typed array.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 * @example
	 *
	 * _.isTypedArray(new Uint8Array);
	 * // => true
	 *
	 * _.isTypedArray([]);
	 * // => false
	 */
	var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

	module.exports = isTypedArray;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isLength = __webpack_require__(175),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values of typed arrays. */
	var typedArrayTags = {};
	typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
	typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
	typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
	typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
	typedArrayTags[uint32Tag] = true;
	typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
	typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
	typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
	typedArrayTags[errorTag] = typedArrayTags[funcTag] =
	typedArrayTags[mapTag] = typedArrayTags[numberTag] =
	typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
	typedArrayTags[setTag] = typedArrayTags[stringTag] =
	typedArrayTags[weakMapTag] = false;

	/**
	 * The base implementation of `_.isTypedArray` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
	 */
	function baseIsTypedArray(value) {
	  return isObjectLike(value) &&
	    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
	}

	module.exports = baseIsTypedArray;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(130);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Detect free variable `process` from Node.js. */
	var freeProcess = moduleExports && freeGlobal.process;

	/** Used to access faster Node.js helpers. */
	var nodeUtil = (function() {
	  try {
	    // Use `util.types` for Node.js 10+.
	    var types = freeModule && freeModule.require && freeModule.require('util').types;

	    if (types) {
	      return types;
	    }

	    // Legacy `process.binding('util')` for Node.js < 10.
	    return freeProcess && freeProcess.binding && freeProcess.binding('util');
	  } catch (e) {}
	}());

	module.exports = nodeUtil;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(234)(module)))

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

	var isPrototype = __webpack_require__(240),
	    nativeKeys = __webpack_require__(241);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeys(object) {
	  if (!isPrototype(object)) {
	    return nativeKeys(object);
	  }
	  var result = [];
	  for (var key in Object(object)) {
	    if (hasOwnProperty.call(object, key) && key != 'constructor') {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeys;


/***/ }),
/* 240 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/**
	 * Checks if `value` is likely a prototype object.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
	 */
	function isPrototype(value) {
	  var Ctor = value && value.constructor,
	      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

	  return value === proto;
	}

	module.exports = isPrototype;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(242);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeKeys = overArg(Object.keys, Object);

	module.exports = nativeKeys;


/***/ }),
/* 242 */
/***/ (function(module, exports) {

	/**
	 * Creates a unary function that invokes `func` with its argument transformed.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} transform The argument transform.
	 * @returns {Function} Returns the new function.
	 */
	function overArg(func, transform) {
	  return function(arg) {
	    return func(transform(arg));
	  };
	}

	module.exports = overArg;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLike = __webpack_require__(216);

	/**
	 * Creates a `baseEach` or `baseEachRight` function.
	 *
	 * @private
	 * @param {Function} eachFunc The function to iterate over a collection.
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new base function.
	 */
	function createBaseEach(eachFunc, fromRight) {
	  return function(collection, iteratee) {
	    if (collection == null) {
	      return collection;
	    }
	    if (!isArrayLike(collection)) {
	      return eachFunc(collection, iteratee);
	    }
	    var length = collection.length,
	        index = fromRight ? length : -1,
	        iterable = Object(collection);

	    while ((fromRight ? index-- : ++index < length)) {
	      if (iteratee(iterable[index], index, iterable) === false) {
	        break;
	      }
	    }
	    return collection;
	  };
	}

	module.exports = createBaseEach;


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

	var baseMatches = __webpack_require__(245),
	    baseMatchesProperty = __webpack_require__(274),
	    identity = __webpack_require__(185),
	    isArray = __webpack_require__(124),
	    property = __webpack_require__(278);

	/**
	 * The base implementation of `_.iteratee`.
	 *
	 * @private
	 * @param {*} [value=_.identity] The value to convert to an iteratee.
	 * @returns {Function} Returns the iteratee.
	 */
	function baseIteratee(value) {
	  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
	  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
	  if (typeof value == 'function') {
	    return value;
	  }
	  if (value == null) {
	    return identity;
	  }
	  if (typeof value == 'object') {
	    return isArray(value)
	      ? baseMatchesProperty(value[0], value[1])
	      : baseMatches(value);
	  }
	  return property(value);
	}

	module.exports = baseIteratee;


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMatch = __webpack_require__(246),
	    getMatchData = __webpack_require__(271),
	    matchesStrictComparable = __webpack_require__(273);

	/**
	 * The base implementation of `_.matches` which doesn't clone `source`.
	 *
	 * @private
	 * @param {Object} source The object of property values to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatches(source) {
	  var matchData = getMatchData(source);
	  if (matchData.length == 1 && matchData[0][2]) {
	    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
	  }
	  return function(object) {
	    return object === source || baseIsMatch(object, source, matchData);
	  };
	}

	module.exports = baseMatches;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(247),
	    baseIsEqual = __webpack_require__(253);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * The base implementation of `_.isMatch` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The object to inspect.
	 * @param {Object} source The object of property values to match.
	 * @param {Array} matchData The property names, values, and compare flags to match.
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
	 */
	function baseIsMatch(object, source, matchData, customizer) {
	  var index = matchData.length,
	      length = index,
	      noCustomizer = !customizer;

	  if (object == null) {
	    return !length;
	  }
	  object = Object(object);
	  while (index--) {
	    var data = matchData[index];
	    if ((noCustomizer && data[2])
	          ? data[1] !== object[data[0]]
	          : !(data[0] in object)
	        ) {
	      return false;
	    }
	  }
	  while (++index < length) {
	    data = matchData[index];
	    var key = data[0],
	        objValue = object[key],
	        srcValue = data[1];

	    if (noCustomizer && data[2]) {
	      if (objValue === undefined && !(key in object)) {
	        return false;
	      }
	    } else {
	      var stack = new Stack;
	      if (customizer) {
	        var result = customizer(objValue, srcValue, key, object, source, stack);
	      }
	      if (!(result === undefined
	            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
	            : result
	          )) {
	        return false;
	      }
	    }
	  }
	  return true;
	}

	module.exports = baseIsMatch;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(154),
	    stackClear = __webpack_require__(248),
	    stackDelete = __webpack_require__(249),
	    stackGet = __webpack_require__(250),
	    stackHas = __webpack_require__(251),
	    stackSet = __webpack_require__(252);

	/**
	 * Creates a stack cache object to store key-value pairs.
	 *
	 * @private
	 * @constructor
	 * @param {Array} [entries] The key-value pairs to cache.
	 */
	function Stack(entries) {
	  var data = this.__data__ = new ListCache(entries);
	  this.size = data.size;
	}

	// Add methods to `Stack`.
	Stack.prototype.clear = stackClear;
	Stack.prototype['delete'] = stackDelete;
	Stack.prototype.get = stackGet;
	Stack.prototype.has = stackHas;
	Stack.prototype.set = stackSet;

	module.exports = Stack;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(154);

	/**
	 * Removes all key-value entries from the stack.
	 *
	 * @private
	 * @name clear
	 * @memberOf Stack
	 */
	function stackClear() {
	  this.__data__ = new ListCache;
	  this.size = 0;
	}

	module.exports = stackClear;


/***/ }),
/* 249 */
/***/ (function(module, exports) {

	/**
	 * Removes `key` and its value from the stack.
	 *
	 * @private
	 * @name delete
	 * @memberOf Stack
	 * @param {string} key The key of the value to remove.
	 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
	 */
	function stackDelete(key) {
	  var data = this.__data__,
	      result = data['delete'](key);

	  this.size = data.size;
	  return result;
	}

	module.exports = stackDelete;


/***/ }),
/* 250 */
/***/ (function(module, exports) {

	/**
	 * Gets the stack value for `key`.
	 *
	 * @private
	 * @name get
	 * @memberOf Stack
	 * @param {string} key The key of the value to get.
	 * @returns {*} Returns the entry value.
	 */
	function stackGet(key) {
	  return this.__data__.get(key);
	}

	module.exports = stackGet;


/***/ }),
/* 251 */
/***/ (function(module, exports) {

	/**
	 * Checks if a stack value for `key` exists.
	 *
	 * @private
	 * @name has
	 * @memberOf Stack
	 * @param {string} key The key of the entry to check.
	 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
	 */
	function stackHas(key) {
	  return this.__data__.has(key);
	}

	module.exports = stackHas;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

	var ListCache = __webpack_require__(154),
	    Map = __webpack_require__(162),
	    MapCache = __webpack_require__(137);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * Sets the stack `key` to `value`.
	 *
	 * @private
	 * @name set
	 * @memberOf Stack
	 * @param {string} key The key of the value to set.
	 * @param {*} value The value to set.
	 * @returns {Object} Returns the stack cache instance.
	 */
	function stackSet(key, value) {
	  var data = this.__data__;
	  if (data instanceof ListCache) {
	    var pairs = data.__data__;
	    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
	      pairs.push([key, value]);
	      this.size = ++data.size;
	      return this;
	    }
	    data = this.__data__ = new MapCache(pairs);
	  }
	  data.set(key, value);
	  this.size = data.size;
	  return this;
	}

	module.exports = stackSet;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqualDeep = __webpack_require__(254),
	    isObjectLike = __webpack_require__(133);

	/**
	 * The base implementation of `_.isEqual` which supports partial comparisons
	 * and tracks traversed objects.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Unordered comparison
	 *  2 - Partial comparison
	 * @param {Function} [customizer] The function to customize comparisons.
	 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 */
	function baseIsEqual(value, other, bitmask, customizer, stack) {
	  if (value === other) {
	    return true;
	  }
	  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
	    return value !== value && other !== other;
	  }
	  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
	}

	module.exports = baseIsEqual;


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(247),
	    equalArrays = __webpack_require__(255),
	    equalByTag = __webpack_require__(257),
	    equalObjects = __webpack_require__(261),
	    getTag = __webpack_require__(266),
	    isArray = __webpack_require__(124),
	    isBuffer = __webpack_require__(233),
	    isTypedArray = __webpack_require__(236);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqual` for arrays and objects which performs
	 * deep comparisons and tracks traversed objects enabling objects with circular
	 * references to be compared.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
	  var objIsArr = isArray(object),
	      othIsArr = isArray(other),
	      objTag = objIsArr ? arrayTag : getTag(object),
	      othTag = othIsArr ? arrayTag : getTag(other);

	  objTag = objTag == argsTag ? objectTag : objTag;
	  othTag = othTag == argsTag ? objectTag : othTag;

	  var objIsObj = objTag == objectTag,
	      othIsObj = othTag == objectTag,
	      isSameTag = objTag == othTag;

	  if (isSameTag && isBuffer(object)) {
	    if (!isBuffer(other)) {
	      return false;
	    }
	    objIsArr = true;
	    objIsObj = false;
	  }
	  if (isSameTag && !objIsObj) {
	    stack || (stack = new Stack);
	    return (objIsArr || isTypedArray(object))
	      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
	      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
	  }
	  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
	    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
	        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

	    if (objIsWrapped || othIsWrapped) {
	      var objUnwrapped = objIsWrapped ? object.value() : object,
	          othUnwrapped = othIsWrapped ? other.value() : other;

	      stack || (stack = new Stack);
	      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
	    }
	  }
	  if (!isSameTag) {
	    return false;
	  }
	  stack || (stack = new Stack);
	  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
	}

	module.exports = baseIsEqualDeep;


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(201),
	    arraySome = __webpack_require__(256),
	    cacheHas = __webpack_require__(211);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * A specialized version of `baseIsEqualDeep` for arrays with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Array} array The array to compare.
	 * @param {Array} other The other array to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `array` and `other` objects.
	 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
	 */
	function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      arrLength = array.length,
	      othLength = other.length;

	  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
	    return false;
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(array);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var index = -1,
	      result = true,
	      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

	  stack.set(array, other);
	  stack.set(other, array);

	  // Ignore non-index properties.
	  while (++index < arrLength) {
	    var arrValue = array[index],
	        othValue = other[index];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, arrValue, index, other, array, stack)
	        : customizer(arrValue, othValue, index, array, other, stack);
	    }
	    if (compared !== undefined) {
	      if (compared) {
	        continue;
	      }
	      result = false;
	      break;
	    }
	    // Recursively compare arrays (susceptible to call stack limits).
	    if (seen) {
	      if (!arraySome(other, function(othValue, othIndex) {
	            if (!cacheHas(seen, othIndex) &&
	                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
	              return seen.push(othIndex);
	            }
	          })) {
	        result = false;
	        break;
	      }
	    } else if (!(
	          arrValue === othValue ||
	            equalFunc(arrValue, othValue, bitmask, customizer, stack)
	        )) {
	      result = false;
	      break;
	    }
	  }
	  stack['delete'](array);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalArrays;


/***/ }),
/* 256 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.some` for arrays without support for iteratee
	 * shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function arraySome(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  while (++index < length) {
	    if (predicate(array[index], index, array)) {
	      return true;
	    }
	  }
	  return false;
	}

	module.exports = arraySome;


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(128),
	    Uint8Array = __webpack_require__(258),
	    eq = __webpack_require__(158),
	    equalArrays = __webpack_require__(255),
	    mapToArray = __webpack_require__(259),
	    setToArray = __webpack_require__(260);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]';

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * A specialized version of `baseIsEqualDeep` for comparing objects of
	 * the same `toStringTag`.
	 *
	 * **Note:** This function only supports comparing values with tags of
	 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {string} tag The `toStringTag` of the objects to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
	  switch (tag) {
	    case dataViewTag:
	      if ((object.byteLength != other.byteLength) ||
	          (object.byteOffset != other.byteOffset)) {
	        return false;
	      }
	      object = object.buffer;
	      other = other.buffer;

	    case arrayBufferTag:
	      if ((object.byteLength != other.byteLength) ||
	          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
	        return false;
	      }
	      return true;

	    case boolTag:
	    case dateTag:
	    case numberTag:
	      // Coerce booleans to `1` or `0` and dates to milliseconds.
	      // Invalid dates are coerced to `NaN`.
	      return eq(+object, +other);

	    case errorTag:
	      return object.name == other.name && object.message == other.message;

	    case regexpTag:
	    case stringTag:
	      // Coerce regexes to strings and treat strings, primitives and objects,
	      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
	      // for more details.
	      return object == (other + '');

	    case mapTag:
	      var convert = mapToArray;

	    case setTag:
	      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
	      convert || (convert = setToArray);

	      if (object.size != other.size && !isPartial) {
	        return false;
	      }
	      // Assume cyclic values are equal.
	      var stacked = stack.get(object);
	      if (stacked) {
	        return stacked == other;
	      }
	      bitmask |= COMPARE_UNORDERED_FLAG;

	      // Recursively compare objects (susceptible to call stack limits).
	      stack.set(object, other);
	      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
	      stack['delete'](object);
	      return result;

	    case symbolTag:
	      if (symbolValueOf) {
	        return symbolValueOf.call(object) == symbolValueOf.call(other);
	      }
	  }
	  return false;
	}

	module.exports = equalByTag;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

	var root = __webpack_require__(129);

	/** Built-in value references. */
	var Uint8Array = root.Uint8Array;

	module.exports = Uint8Array;


/***/ }),
/* 259 */
/***/ (function(module, exports) {

	/**
	 * Converts `map` to its key-value pairs.
	 *
	 * @private
	 * @param {Object} map The map to convert.
	 * @returns {Array} Returns the key-value pairs.
	 */
	function mapToArray(map) {
	  var index = -1,
	      result = Array(map.size);

	  map.forEach(function(value, key) {
	    result[++index] = [key, value];
	  });
	  return result;
	}

	module.exports = mapToArray;


/***/ }),
/* 260 */
/***/ (function(module, exports) {

	/**
	 * Converts `set` to an array of its values.
	 *
	 * @private
	 * @param {Object} set The set to convert.
	 * @returns {Array} Returns the values.
	 */
	function setToArray(set) {
	  var index = -1,
	      result = Array(set.size);

	  set.forEach(function(value) {
	    result[++index] = value;
	  });
	  return result;
	}

	module.exports = setToArray;


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

	var getAllKeys = __webpack_require__(262);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1;

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * A specialized version of `baseIsEqualDeep` for objects with support for
	 * partial deep comparisons.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
	 * @param {Function} customizer The function to customize comparisons.
	 * @param {Function} equalFunc The function to determine equivalents of values.
	 * @param {Object} stack Tracks traversed `object` and `other` objects.
	 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
	 */
	function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
	  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
	      objProps = getAllKeys(object),
	      objLength = objProps.length,
	      othProps = getAllKeys(other),
	      othLength = othProps.length;

	  if (objLength != othLength && !isPartial) {
	    return false;
	  }
	  var index = objLength;
	  while (index--) {
	    var key = objProps[index];
	    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
	      return false;
	    }
	  }
	  // Assume cyclic values are equal.
	  var stacked = stack.get(object);
	  if (stacked && stack.get(other)) {
	    return stacked == other;
	  }
	  var result = true;
	  stack.set(object, other);
	  stack.set(other, object);

	  var skipCtor = isPartial;
	  while (++index < objLength) {
	    key = objProps[index];
	    var objValue = object[key],
	        othValue = other[key];

	    if (customizer) {
	      var compared = isPartial
	        ? customizer(othValue, objValue, key, other, object, stack)
	        : customizer(objValue, othValue, key, object, other, stack);
	    }
	    // Recursively compare objects (susceptible to call stack limits).
	    if (!(compared === undefined
	          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
	          : compared
	        )) {
	      result = false;
	      break;
	    }
	    skipCtor || (skipCtor = key == 'constructor');
	  }
	  if (result && !skipCtor) {
	    var objCtor = object.constructor,
	        othCtor = other.constructor;

	    // Non `Object` object instances with different constructors are not equal.
	    if (objCtor != othCtor &&
	        ('constructor' in object && 'constructor' in other) &&
	        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
	          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
	      result = false;
	    }
	  }
	  stack['delete'](object);
	  stack['delete'](other);
	  return result;
	}

	module.exports = equalObjects;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(263),
	    getSymbols = __webpack_require__(264),
	    keys = __webpack_require__(230);

	/**
	 * Creates an array of own enumerable property names and symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeys(object) {
	  return baseGetAllKeys(object, keys, getSymbols);
	}

	module.exports = getAllKeys;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(213),
	    isArray = __webpack_require__(124);

	/**
	 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
	 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Function} keysFunc The function to get the keys of `object`.
	 * @param {Function} symbolsFunc The function to get the symbols of `object`.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function baseGetAllKeys(object, keysFunc, symbolsFunc) {
	  var result = keysFunc(object);
	  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
	}

	module.exports = baseGetAllKeys;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayFilter = __webpack_require__(224),
	    stubArray = __webpack_require__(265);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Built-in value references. */
	var propertyIsEnumerable = objectProto.propertyIsEnumerable;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
	  if (object == null) {
	    return [];
	  }
	  object = Object(object);
	  return arrayFilter(nativeGetSymbols(object), function(symbol) {
	    return propertyIsEnumerable.call(object, symbol);
	  });
	};

	module.exports = getSymbols;


/***/ }),
/* 265 */
/***/ (function(module, exports) {

	/**
	 * This method returns a new empty array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.13.0
	 * @category Util
	 * @returns {Array} Returns the new empty array.
	 * @example
	 *
	 * var arrays = _.times(2, _.stubArray);
	 *
	 * console.log(arrays);
	 * // => [[], []]
	 *
	 * console.log(arrays[0] === arrays[1]);
	 * // => false
	 */
	function stubArray() {
	  return [];
	}

	module.exports = stubArray;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

	var DataView = __webpack_require__(267),
	    Map = __webpack_require__(162),
	    Promise = __webpack_require__(268),
	    Set = __webpack_require__(269),
	    WeakMap = __webpack_require__(270),
	    baseGetTag = __webpack_require__(127),
	    toSource = __webpack_require__(148);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    objectTag = '[object Object]',
	    promiseTag = '[object Promise]',
	    setTag = '[object Set]',
	    weakMapTag = '[object WeakMap]';

	var dataViewTag = '[object DataView]';

	/** Used to detect maps, sets, and weakmaps. */
	var dataViewCtorString = toSource(DataView),
	    mapCtorString = toSource(Map),
	    promiseCtorString = toSource(Promise),
	    setCtorString = toSource(Set),
	    weakMapCtorString = toSource(WeakMap);

	/**
	 * Gets the `toStringTag` of `value`.
	 *
	 * @private
	 * @param {*} value The value to query.
	 * @returns {string} Returns the `toStringTag`.
	 */
	var getTag = baseGetTag;

	// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
	if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
	    (Map && getTag(new Map) != mapTag) ||
	    (Promise && getTag(Promise.resolve()) != promiseTag) ||
	    (Set && getTag(new Set) != setTag) ||
	    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
	  getTag = function(value) {
	    var result = baseGetTag(value),
	        Ctor = result == objectTag ? value.constructor : undefined,
	        ctorString = Ctor ? toSource(Ctor) : '';

	    if (ctorString) {
	      switch (ctorString) {
	        case dataViewCtorString: return dataViewTag;
	        case mapCtorString: return mapTag;
	        case promiseCtorString: return promiseTag;
	        case setCtorString: return setTag;
	        case weakMapCtorString: return weakMapTag;
	      }
	    }
	    return result;
	  };
	}

	module.exports = getTag;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142),
	    root = __webpack_require__(129);

	/* Built-in method references that are verified to be native. */
	var DataView = getNative(root, 'DataView');

	module.exports = DataView;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142),
	    root = __webpack_require__(129);

	/* Built-in method references that are verified to be native. */
	var Promise = getNative(root, 'Promise');

	module.exports = Promise;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142),
	    root = __webpack_require__(129);

	/* Built-in method references that are verified to be native. */
	var Set = getNative(root, 'Set');

	module.exports = Set;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

	var getNative = __webpack_require__(142),
	    root = __webpack_require__(129);

	/* Built-in method references that are verified to be native. */
	var WeakMap = getNative(root, 'WeakMap');

	module.exports = WeakMap;


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

	var isStrictComparable = __webpack_require__(272),
	    keys = __webpack_require__(230);

	/**
	 * Gets the property names, values, and compare flags of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the match data of `object`.
	 */
	function getMatchData(object) {
	  var result = keys(object),
	      length = result.length;

	  while (length--) {
	    var key = result[length],
	        value = object[key];

	    result[length] = [key, value, isStrictComparable(value)];
	  }
	  return result;
	}

	module.exports = getMatchData;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(145);

	/**
	 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` if suitable for strict
	 *  equality comparisons, else `false`.
	 */
	function isStrictComparable(value) {
	  return value === value && !isObject(value);
	}

	module.exports = isStrictComparable;


/***/ }),
/* 273 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `matchesProperty` for source values suitable
	 * for strict equality comparisons, i.e. `===`.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function matchesStrictComparable(key, srcValue) {
	  return function(object) {
	    if (object == null) {
	      return false;
	    }
	    return object[key] === srcValue &&
	      (srcValue !== undefined || (key in Object(object)));
	  };
	}

	module.exports = matchesStrictComparable;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(253),
	    get = __webpack_require__(275),
	    hasIn = __webpack_require__(276),
	    isKey = __webpack_require__(125),
	    isStrictComparable = __webpack_require__(272),
	    matchesStrictComparable = __webpack_require__(273),
	    toKey = __webpack_require__(176);

	/** Used to compose bitmasks for value comparisons. */
	var COMPARE_PARTIAL_FLAG = 1,
	    COMPARE_UNORDERED_FLAG = 2;

	/**
	 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
	 *
	 * @private
	 * @param {string} path The path of the property to get.
	 * @param {*} srcValue The value to match.
	 * @returns {Function} Returns the new spec function.
	 */
	function baseMatchesProperty(path, srcValue) {
	  if (isKey(path) && isStrictComparable(srcValue)) {
	    return matchesStrictComparable(toKey(path), srcValue);
	  }
	  return function(object) {
	    var objValue = get(object, path);
	    return (objValue === undefined && objValue === srcValue)
	      ? hasIn(object, path)
	      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
	  };
	}

	module.exports = baseMatchesProperty;


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(182);

	/**
	 * Gets the value at `path` of `object`. If the resolved value is
	 * `undefined`, the `defaultValue` is returned in its place.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.7.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path of the property to get.
	 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
	 * @returns {*} Returns the resolved value.
	 * @example
	 *
	 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
	 *
	 * _.get(object, 'a[0].b.c');
	 * // => 3
	 *
	 * _.get(object, ['a', '0', 'b', 'c']);
	 * // => 3
	 *
	 * _.get(object, 'a.b.c', 'default');
	 * // => 'default'
	 */
	function get(object, path, defaultValue) {
	  var result = object == null ? undefined : baseGet(object, path);
	  return result === undefined ? defaultValue : result;
	}

	module.exports = get;


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

	var baseHasIn = __webpack_require__(277),
	    hasPath = __webpack_require__(122);

	/**
	 * Checks if `path` is a direct or inherited property of `object`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @param {Array|string} path The path to check.
	 * @returns {boolean} Returns `true` if `path` exists, else `false`.
	 * @example
	 *
	 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
	 *
	 * _.hasIn(object, 'a');
	 * // => true
	 *
	 * _.hasIn(object, 'a.b');
	 * // => true
	 *
	 * _.hasIn(object, ['a', 'b']);
	 * // => true
	 *
	 * _.hasIn(object, 'b');
	 * // => false
	 */
	function hasIn(object, path) {
	  return object != null && hasPath(object, path, baseHasIn);
	}

	module.exports = hasIn;


/***/ }),
/* 277 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.hasIn` without support for deep paths.
	 *
	 * @private
	 * @param {Object} [object] The object to query.
	 * @param {Array|string} key The key to check.
	 * @returns {boolean} Returns `true` if `key` exists, else `false`.
	 */
	function baseHasIn(object, key) {
	  return object != null && key in Object(object);
	}

	module.exports = baseHasIn;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

	var baseProperty = __webpack_require__(279),
	    basePropertyDeep = __webpack_require__(280),
	    isKey = __webpack_require__(125),
	    toKey = __webpack_require__(176);

	/**
	 * Creates a function that returns the value at `path` of a given object.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Util
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 * @example
	 *
	 * var objects = [
	 *   { 'a': { 'b': 2 } },
	 *   { 'a': { 'b': 1 } }
	 * ];
	 *
	 * _.map(objects, _.property('a.b'));
	 * // => [2, 1]
	 *
	 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
	 * // => [1, 2]
	 */
	function property(path) {
	  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
	}

	module.exports = property;


/***/ }),
/* 279 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.property` without support for deep paths.
	 *
	 * @private
	 * @param {string} key The key of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function baseProperty(key) {
	  return function(object) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = baseProperty;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(182);

	/**
	 * A specialized version of `baseProperty` which supports deep paths.
	 *
	 * @private
	 * @param {Array|string} path The path of the property to get.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyDeep(path) {
	  return function(object) {
	    return baseGet(object, path);
	  };
	}

	module.exports = basePropertyDeep;


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

	var baseKeys = __webpack_require__(239),
	    getTag = __webpack_require__(266),
	    isArguments = __webpack_require__(172),
	    isArray = __webpack_require__(124),
	    isArrayLike = __webpack_require__(216),
	    isBuffer = __webpack_require__(233),
	    isPrototype = __webpack_require__(240),
	    isTypedArray = __webpack_require__(236);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]',
	    setTag = '[object Set]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Checks if `value` is an empty object, collection, map, or set.
	 *
	 * Objects are considered empty if they have no own enumerable string keyed
	 * properties.
	 *
	 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
	 * jQuery-like collections are considered empty if they have a `length` of `0`.
	 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
	 * @example
	 *
	 * _.isEmpty(null);
	 * // => true
	 *
	 * _.isEmpty(true);
	 * // => true
	 *
	 * _.isEmpty(1);
	 * // => true
	 *
	 * _.isEmpty([1, 2, 3]);
	 * // => false
	 *
	 * _.isEmpty({ 'a': 1 });
	 * // => false
	 */
	function isEmpty(value) {
	  if (value == null) {
	    return true;
	  }
	  if (isArrayLike(value) &&
	      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
	        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
	    return !value.length;
	  }
	  var tag = getTag(value);
	  if (tag == mapTag || tag == setTag) {
	    return !value.size;
	  }
	  if (isPrototype(value)) {
	    return !baseKeys(value).length;
	  }
	  for (var key in value) {
	    if (hasOwnProperty.call(value, key)) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = isEmpty;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(171),
	    baseIntersection = __webpack_require__(283),
	    baseRest = __webpack_require__(184),
	    castArrayLikeObject = __webpack_require__(284);

	/**
	 * Creates an array of unique values that are included in all given arrays
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons. The order and references of result values are
	 * determined by the first array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of intersecting values.
	 * @example
	 *
	 * _.intersection([2, 1], [2, 3]);
	 * // => [2]
	 */
	var intersection = baseRest(function(arrays) {
	  var mapped = arrayMap(arrays, castArrayLikeObject);
	  return (mapped.length && mapped[0] === arrays[0])
	    ? baseIntersection(mapped)
	    : [];
	});

	module.exports = intersection;


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(201),
	    arrayIncludes = __webpack_require__(204),
	    arrayIncludesWith = __webpack_require__(209),
	    arrayMap = __webpack_require__(171),
	    baseUnary = __webpack_require__(210),
	    cacheHas = __webpack_require__(211);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;

	/**
	 * The base implementation of methods like `_.intersection`, without support
	 * for iteratee shorthands, that accepts an array of arrays to inspect.
	 *
	 * @private
	 * @param {Array} arrays The arrays to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new array of shared values.
	 */
	function baseIntersection(arrays, iteratee, comparator) {
	  var includes = comparator ? arrayIncludesWith : arrayIncludes,
	      length = arrays[0].length,
	      othLength = arrays.length,
	      othIndex = othLength,
	      caches = Array(othLength),
	      maxLength = Infinity,
	      result = [];

	  while (othIndex--) {
	    var array = arrays[othIndex];
	    if (othIndex && iteratee) {
	      array = arrayMap(array, baseUnary(iteratee));
	    }
	    maxLength = nativeMin(array.length, maxLength);
	    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
	      ? new SetCache(othIndex && array)
	      : undefined;
	  }
	  array = arrays[0];

	  var index = -1,
	      seen = caches[0];

	  outer:
	  while (++index < length && result.length < maxLength) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	    value = (comparator || value !== 0) ? value : 0;
	    if (!(seen
	          ? cacheHas(seen, computed)
	          : includes(result, computed, comparator)
	        )) {
	      othIndex = othLength;
	      while (--othIndex) {
	        var cache = caches[othIndex];
	        if (!(cache
	              ? cacheHas(cache, computed)
	              : includes(arrays[othIndex], computed, comparator))
	            ) {
	          continue outer;
	        }
	      }
	      if (seen) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseIntersection;


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

	var isArrayLikeObject = __webpack_require__(215);

	/**
	 * Casts `value` to an empty array if it's not an array like object.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Array|Object} Returns the cast array-like object.
	 */
	function castArrayLikeObject(value) {
	  return isArrayLikeObject(value) ? value : [];
	}

	module.exports = castArrayLikeObject;


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(286);


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(287),
	    baseEach = __webpack_require__(226),
	    castFunction = __webpack_require__(288),
	    isArray = __webpack_require__(124);

	/**
	 * Iterates over elements of `collection` and invokes `iteratee` for each element.
	 * The iteratee is invoked with three arguments: (value, index|key, collection).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * **Note:** As with other "Collections" methods, objects with a "length"
	 * property are iterated like arrays. To avoid this behavior use `_.forIn`
	 * or `_.forOwn` for object iteration.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @alias each
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array|Object} Returns `collection`.
	 * @see _.forEachRight
	 * @example
	 *
	 * _.forEach([1, 2], function(value) {
	 *   console.log(value);
	 * });
	 * // => Logs `1` then `2`.
	 *
	 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
	 *   console.log(key);
	 * });
	 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
	 */
	function forEach(collection, iteratee) {
	  var func = isArray(collection) ? arrayEach : baseEach;
	  return func(collection, castFunction(iteratee));
	}

	module.exports = forEach;


/***/ }),
/* 287 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.forEach` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns `array`.
	 */
	function arrayEach(array, iteratee) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  while (++index < length) {
	    if (iteratee(array[index], index, array) === false) {
	      break;
	    }
	  }
	  return array;
	}

	module.exports = arrayEach;


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(185);

	/**
	 * Casts `value` to `identity` if it's not a function.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @returns {Function} Returns cast function.
	 */
	function castFunction(value) {
	  return typeof value == 'function' ? value : identity;
	}

	module.exports = castFunction;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.useWidthProp = exports.useVerticalAlignProp = exports.useTextAlignProp = exports.useOnlyProp = exports.useKeyOrValueAndKey = exports.useValueAndKey = exports.useKeyOnly = undefined;

	var _typeof2 = __webpack_require__(79);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _numberToWord = __webpack_require__(290);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/*
	 * There are 3 prop patterns used to build up the className for a component.
	 * Each utility here is meant for use in a classnames() argument.
	 *
	 * There is no util for valueOnly() because it would simply return val.
	 * Use the prop value inline instead.
	 *   <Label size='big' />
	 *   <div class="ui big label"></div>
	 */

	/**
	 * Props where only the prop key is used in the className.
	 * @param {*} val A props value
	 * @param {string} key A props key
	 *
	 * @example
	 * <Label tag />
	 * <div class="ui tag label"></div>
	 */
	var useKeyOnly = exports.useKeyOnly = function useKeyOnly(val, key) {
	  return val && key;
	};

	/**
	 * Props that require both a key and value to create a className.
	 * @param {*} val A props value
	 * @param {string} key A props key
	 *
	 * @example
	 * <Label corner='left' />
	 * <div class="ui left corner label"></div>
	 */
	var useValueAndKey = exports.useValueAndKey = function useValueAndKey(val, key) {
	  return val && val !== true && val + ' ' + key;
	};

	/**
	 * Props whose key will be used in className, or value and key.
	 * @param {*} val A props value
	 * @param {string} key A props key
	 *
	 * @example Key Only
	 * <Label pointing />
	 * <div class="ui pointing label"></div>
	 *
	 * @example Key and Value
	 * <Label pointing='left' />
	 * <div class="ui left pointing label"></div>
	 */
	var useKeyOrValueAndKey = exports.useKeyOrValueAndKey = function useKeyOrValueAndKey(val, key) {
	  return val && (val === true ? key : val + ' ' + key);
	};

	//
	// Prop to className exceptions
	//

	/**
	 * The "only" prop implements control of visibility classes for Grid subcomponents.
	 *
	 * @param {*} val The value of the "only" prop
	 *
	 * @example
	 * <Grid.Row only='mobile' />
	 * <Grid.Row only='mobile tablet' />
	 * <div class="mobile only row"></div>
	 * <div class="mobile only tablet only row"></div>
	 */
	var useOnlyProp = exports.useOnlyProp = function useOnlyProp(val) {
	  if (!val || val === true) return null;

	  return val.replace('large screen', 'large-screen').split(' ').map(function (prop) {
	    return prop.replace('-', ' ') + ' only';
	  }).join(' ');
	};

	/**
	 * The "textAlign" prop follows the useValueAndKey except when the value is "justified'.
	 * In this case, only the class "justified" is used, ignoring the "aligned" class.
	 * @param {*} val The value of the "textAlign" prop
	 *
	 * @example
	 * <Container textAlign='justified' />
	 * <div class="ui justified container"></div>
	 *
	 * @example
	 * <Container textAlign='left' />
	 * <div class="ui left aligned container"></div>
	 */
	var useTextAlignProp = exports.useTextAlignProp = function useTextAlignProp(val) {
	  return val === 'justified' ? 'justified' : useValueAndKey(val, 'aligned');
	};

	/**
	 * The "verticalAlign" prop follows the useValueAndKey.
	 *
	 * @param {*} val The value of the "verticalAlign" prop
	 *
	 * @example
	 * <Grid verticalAlign='middle' />
	 * <div class="ui middle aligned grid"></div>
	 */
	var useVerticalAlignProp = exports.useVerticalAlignProp = function useVerticalAlignProp(val) {
	  return useValueAndKey(val, 'aligned');
	};

	/**
	 * Create "X", "X wide" and "equal width" classNames.
	 * "X" is a numberToWord value and "wide" is configurable.
	 * @param {*} val The prop value
	 * @param {string} [widthClass=''] The class
	 * @param {boolean} [canEqual=false] Flag that indicates possibility of "equal" value
	 *
	 * @example
	 * <Grid columns='equal' />
	 * <div class="ui equal width grid"></div>
	 *
	 * <Form widths='equal' />
	 * <div class="ui equal width form"></div>
	 *
	 * <FieldGroup widths='equal' />
	 * <div class="equal width fields"></div>
	 *
	 * @example
	 * <Grid columns={4} />
	 * <div class="ui four column grid"></div>
	 */
	var useWidthProp = exports.useWidthProp = function useWidthProp(val) {
	  var widthClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	  var canEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

	  if (canEqual && val === 'equal') {
	    return 'equal width';
	  }
	  var valType = typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val);
	  if ((valType === 'string' || valType === 'number') && widthClass) {
	    return (0, _numberToWord.numberToWord)(val) + ' ' + widthClass;
	  }
	  return (0, _numberToWord.numberToWord)(val);
	};

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.numberToWordMap = undefined;

	var _typeof2 = __webpack_require__(79);

	var _typeof3 = _interopRequireDefault(_typeof2);

	exports.numberToWord = numberToWord;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var numberToWordMap = exports.numberToWordMap = {
	  1: 'one',
	  2: 'two',
	  3: 'three',
	  4: 'four',
	  5: 'five',
	  6: 'six',
	  7: 'seven',
	  8: 'eight',
	  9: 'nine',
	  10: 'ten',
	  11: 'eleven',
	  12: 'twelve',
	  13: 'thirteen',
	  14: 'fourteen',
	  15: 'fifteen',
	  16: 'sixteen'
	};

	/**
	 * Return the number word for numbers 1-16.
	 * Returns strings or numbers as is if there is no corresponding word.
	 * Returns an empty string if value is not a string or number.
	 * @param {string|number} value The value to convert to a word.
	 * @returns {string}
	 */
	function numberToWord(value) {
	  var type = typeof value === 'undefined' ? 'undefined' : (0, _typeof3.default)(value);
	  if (type === 'string' || type === 'number') {
	    return numberToWordMap[value] || value;
	  }

	  return '';
	}

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.debug = exports.makeDebugger = undefined;

	var _isBrowser = __webpack_require__(292);

	var _isBrowser2 = _interopRequireDefault(_isBrowser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _debug = void 0;
	var noop = function noop() {
	  return undefined;
	};

	if (_isBrowser2.default && process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {
	  // Heads Up!
	  // https://github.com/visionmedia/debug/pull/331
	  //
	  // debug now clears storage on load, grab the debug settings before require('debug').
	  // We try/catch here as Safari throws on localStorage access in private mode or with cookies disabled.
	  var DEBUG = void 0;
	  try {
	    DEBUG = window.localStorage.debug;
	  } catch (e) {
	    /* eslint-disable no-console */
	    console.error('Semantic-UI-React could not enable debug.');
	    console.error(e);
	    /* eslint-enable no-console */
	  }

	  _debug = __webpack_require__(293);

	  // enable what ever settings we got from storage
	  _debug.enable(DEBUG);
	} else {
	  _debug = function _debug() {
	    return noop;
	  };
	}

	/**
	 * Create a namespaced debug function.
	 * @param {String} namespace Usually a component name.
	 * @example
	 * import { makeDebugger } from 'src/lib'
	 * const debug = makeDebugger('namespace')
	 *
	 * debug('Some message')
	 * @returns {Function}
	 */
	var makeDebugger = exports.makeDebugger = function makeDebugger(namespace) {
	  return _debug('semanticUIReact:' + namespace);
	};

	/**
	 * Default debugger, simple log.
	 * @example
	 * import { debug } from 'src/lib'
	 * debug('Some message')
	 */
	var debug = exports.debug = makeDebugger('log');
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _typeof2 = __webpack_require__(79);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var hasDocument = (typeof document === 'undefined' ? 'undefined' : (0, _typeof3.default)(document)) === 'object' && document !== null;
	var hasWindow = (typeof window === 'undefined' ? 'undefined' : (0, _typeof3.default)(window)) === 'object' && window !== null && window.self === window;

	exports.default = hasDocument && hasWindow;

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * This is the web browser implementation of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = __webpack_require__(294);
	exports.log = log;
	exports.formatArgs = formatArgs;
	exports.save = save;
	exports.load = load;
	exports.useColors = useColors;
	exports.storage = 'undefined' != typeof chrome
	               && 'undefined' != typeof chrome.storage
	                  ? chrome.storage.local
	                  : localstorage();

	/**
	 * Colors.
	 */

	exports.colors = [
	  'lightseagreen',
	  'forestgreen',
	  'goldenrod',
	  'dodgerblue',
	  'darkorchid',
	  'crimson'
	];

	/**
	 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
	 * and the Firebug extension (any Firefox version) are known
	 * to support "%c" CSS customizations.
	 *
	 * TODO: add a `localStorage` variable to explicitly enable/disable colors
	 */

	function useColors() {
	  // NB: In an Electron preload script, document will be defined but not fully
	  // initialized. Since we know we're in Chrome, we'll just detect this case
	  // explicitly
	  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {
	    return true;
	  }

	  // is webkit? http://stackoverflow.com/a/16459606/376773
	  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
	    // is firebug? http://stackoverflow.com/a/398120/376773
	    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
	    // is firefox >= v31?
	    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
	    // double check webkit in userAgent just in case we are in a worker
	    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
	}

	/**
	 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
	 */

	exports.formatters.j = function(v) {
	  try {
	    return JSON.stringify(v);
	  } catch (err) {
	    return '[UnexpectedJSONParseError]: ' + err.message;
	  }
	};


	/**
	 * Colorize log arguments if enabled.
	 *
	 * @api public
	 */

	function formatArgs(args) {
	  var useColors = this.useColors;

	  args[0] = (useColors ? '%c' : '')
	    + this.namespace
	    + (useColors ? ' %c' : ' ')
	    + args[0]
	    + (useColors ? '%c ' : ' ')
	    + '+' + exports.humanize(this.diff);

	  if (!useColors) return;

	  var c = 'color: ' + this.color;
	  args.splice(1, 0, c, 'color: inherit')

	  // the final "%c" is somewhat tricky, because there could be other
	  // arguments passed either before or after the %c, so we need to
	  // figure out the correct index to insert the CSS into
	  var index = 0;
	  var lastC = 0;
	  args[0].replace(/%[a-zA-Z%]/g, function(match) {
	    if ('%%' === match) return;
	    index++;
	    if ('%c' === match) {
	      // we only are interested in the *last* %c
	      // (the user may have provided their own)
	      lastC = index;
	    }
	  });

	  args.splice(lastC, 0, c);
	}

	/**
	 * Invokes `console.log()` when available.
	 * No-op when `console.log` is not a "function".
	 *
	 * @api public
	 */

	function log() {
	  // this hackery is required for IE8/9, where
	  // the `console.log` function doesn't have 'apply'
	  return 'object' === typeof console
	    && console.log
	    && Function.prototype.apply.call(console.log, console, arguments);
	}

	/**
	 * Save `namespaces`.
	 *
	 * @param {String} namespaces
	 * @api private
	 */

	function save(namespaces) {
	  try {
	    if (null == namespaces) {
	      exports.storage.removeItem('debug');
	    } else {
	      exports.storage.debug = namespaces;
	    }
	  } catch(e) {}
	}

	/**
	 * Load `namespaces`.
	 *
	 * @return {String} returns the previously persisted debug modes
	 * @api private
	 */

	function load() {
	  var r;
	  try {
	    r = exports.storage.debug;
	  } catch(e) {}

	  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	  if (!r && typeof process !== 'undefined' && 'env' in process) {
	    r = process.env.DEBUG;
	  }

	  return r;
	}

	/**
	 * Enable namespaces listed in `localStorage.debug` initially.
	 */

	exports.enable(load());

	/**
	 * Localstorage attempts to return the localstorage.
	 *
	 * This is necessary because safari throws
	 * when a user disables cookies/localstorage
	 * and you attempt to access it.
	 *
	 * @return {LocalStorage}
	 * @api private
	 */

	function localstorage() {
	  try {
	    return window.localStorage;
	  } catch (e) {}
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

	
	/**
	 * This is the common logic for both the Node.js and web browser
	 * implementations of `debug()`.
	 *
	 * Expose `debug()` as the module.
	 */

	exports = module.exports = createDebug.debug = createDebug['default'] = createDebug;
	exports.coerce = coerce;
	exports.disable = disable;
	exports.enable = enable;
	exports.enabled = enabled;
	exports.humanize = __webpack_require__(295);

	/**
	 * The currently active debug mode names, and names to skip.
	 */

	exports.names = [];
	exports.skips = [];

	/**
	 * Map of special "%n" handling functions, for the debug "format" argument.
	 *
	 * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	 */

	exports.formatters = {};

	/**
	 * Previous log timestamp.
	 */

	var prevTime;

	/**
	 * Select a color.
	 * @param {String} namespace
	 * @return {Number}
	 * @api private
	 */

	function selectColor(namespace) {
	  var hash = 0, i;

	  for (i in namespace) {
	    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);
	    hash |= 0; // Convert to 32bit integer
	  }

	  return exports.colors[Math.abs(hash) % exports.colors.length];
	}

	/**
	 * Create a debugger with the given `namespace`.
	 *
	 * @param {String} namespace
	 * @return {Function}
	 * @api public
	 */

	function createDebug(namespace) {

	  function debug() {
	    // disabled?
	    if (!debug.enabled) return;

	    var self = debug;

	    // set `diff` timestamp
	    var curr = +new Date();
	    var ms = curr - (prevTime || curr);
	    self.diff = ms;
	    self.prev = prevTime;
	    self.curr = curr;
	    prevTime = curr;

	    // turn the `arguments` into a proper Array
	    var args = new Array(arguments.length);
	    for (var i = 0; i < args.length; i++) {
	      args[i] = arguments[i];
	    }

	    args[0] = exports.coerce(args[0]);

	    if ('string' !== typeof args[0]) {
	      // anything else let's inspect with %O
	      args.unshift('%O');
	    }

	    // apply any `formatters` transformations
	    var index = 0;
	    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {
	      // if we encounter an escaped % then don't increase the array index
	      if (match === '%%') return match;
	      index++;
	      var formatter = exports.formatters[format];
	      if ('function' === typeof formatter) {
	        var val = args[index];
	        match = formatter.call(self, val);

	        // now we need to remove `args[index]` since it's inlined in the `format`
	        args.splice(index, 1);
	        index--;
	      }
	      return match;
	    });

	    // apply env-specific formatting (colors, etc.)
	    exports.formatArgs.call(self, args);

	    var logFn = debug.log || exports.log || console.log.bind(console);
	    logFn.apply(self, args);
	  }

	  debug.namespace = namespace;
	  debug.enabled = exports.enabled(namespace);
	  debug.useColors = exports.useColors();
	  debug.color = selectColor(namespace);

	  // env-specific initialization logic for debug instances
	  if ('function' === typeof exports.init) {
	    exports.init(debug);
	  }

	  return debug;
	}

	/**
	 * Enables a debug mode by namespaces. This can include modes
	 * separated by a colon and wildcards.
	 *
	 * @param {String} namespaces
	 * @api public
	 */

	function enable(namespaces) {
	  exports.save(namespaces);

	  exports.names = [];
	  exports.skips = [];

	  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
	  var len = split.length;

	  for (var i = 0; i < len; i++) {
	    if (!split[i]) continue; // ignore empty strings
	    namespaces = split[i].replace(/\*/g, '.*?');
	    if (namespaces[0] === '-') {
	      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
	    } else {
	      exports.names.push(new RegExp('^' + namespaces + '$'));
	    }
	  }
	}

	/**
	 * Disable debug output.
	 *
	 * @api public
	 */

	function disable() {
	  exports.enable('');
	}

	/**
	 * Returns true if the given mode name is enabled, false otherwise.
	 *
	 * @param {String} name
	 * @return {Boolean}
	 * @api public
	 */

	function enabled(name) {
	  var i, len;
	  for (i = 0, len = exports.skips.length; i < len; i++) {
	    if (exports.skips[i].test(name)) {
	      return false;
	    }
	  }
	  for (i = 0, len = exports.names.length; i < len; i++) {
	    if (exports.names[i].test(name)) {
	      return true;
	    }
	  }
	  return false;
	}

	/**
	 * Coerce `val`.
	 *
	 * @param {Mixed} val
	 * @return {Mixed}
	 * @api private
	 */

	function coerce(val) {
	  if (val instanceof Error) return val.stack || val.message;
	  return val;
	}


/***/ }),
/* 295 */
/***/ (function(module, exports) {

	/**
	 * Helpers.
	 */

	var s = 1000;
	var m = s * 60;
	var h = m * 60;
	var d = h * 24;
	var y = d * 365.25;

	/**
	 * Parse or format the given `val`.
	 *
	 * Options:
	 *
	 *  - `long` verbose formatting [false]
	 *
	 * @param {String|Number} val
	 * @param {Object} [options]
	 * @throws {Error} throw an error if val is not a non-empty string or a number
	 * @return {String|Number}
	 * @api public
	 */

	module.exports = function(val, options) {
	  options = options || {};
	  var type = typeof val;
	  if (type === 'string' && val.length > 0) {
	    return parse(val);
	  } else if (type === 'number' && isNaN(val) === false) {
	    return options.long ? fmtLong(val) : fmtShort(val);
	  }
	  throw new Error(
	    'val is not a non-empty string or a valid number. val=' +
	      JSON.stringify(val)
	  );
	};

	/**
	 * Parse the given `str` and return milliseconds.
	 *
	 * @param {String} str
	 * @return {Number}
	 * @api private
	 */

	function parse(str) {
	  str = String(str);
	  if (str.length > 100) {
	    return;
	  }
	  var match = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(
	    str
	  );
	  if (!match) {
	    return;
	  }
	  var n = parseFloat(match[1]);
	  var type = (match[2] || 'ms').toLowerCase();
	  switch (type) {
	    case 'years':
	    case 'year':
	    case 'yrs':
	    case 'yr':
	    case 'y':
	      return n * y;
	    case 'days':
	    case 'day':
	    case 'd':
	      return n * d;
	    case 'hours':
	    case 'hour':
	    case 'hrs':
	    case 'hr':
	    case 'h':
	      return n * h;
	    case 'minutes':
	    case 'minute':
	    case 'mins':
	    case 'min':
	    case 'm':
	      return n * m;
	    case 'seconds':
	    case 'second':
	    case 'secs':
	    case 'sec':
	    case 's':
	      return n * s;
	    case 'milliseconds':
	    case 'millisecond':
	    case 'msecs':
	    case 'msec':
	    case 'ms':
	      return n;
	    default:
	      return undefined;
	  }
	}

	/**
	 * Short format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function fmtShort(ms) {
	  if (ms >= d) {
	    return Math.round(ms / d) + 'd';
	  }
	  if (ms >= h) {
	    return Math.round(ms / h) + 'h';
	  }
	  if (ms >= m) {
	    return Math.round(ms / m) + 'm';
	  }
	  if (ms >= s) {
	    return Math.round(ms / s) + 's';
	  }
	  return ms + 'ms';
	}

	/**
	 * Long format for `ms`.
	 *
	 * @param {Number} ms
	 * @return {String}
	 * @api private
	 */

	function fmtLong(ms) {
	  return plural(ms, d, 'day') ||
	    plural(ms, h, 'hour') ||
	    plural(ms, m, 'minute') ||
	    plural(ms, s, 'second') ||
	    ms + ' ms';
	}

	/**
	 * Pluralization helper.
	 */

	function plural(ms, n, name) {
	  if (ms < n) {
	    return;
	  }
	  if (ms < n * 1.5) {
	    return Math.floor(ms / n) + ' ' + name;
	  }
	  return Math.ceil(ms / n) + ' ' + name + 's';
	}


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.createHTMLParagraph = exports.createHTMLLabel = exports.createHTMLInput = exports.createHTMLImage = exports.createHTMLDivision = undefined;

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _typeof2 = __webpack_require__(79);

	var _typeof3 = _interopRequireDefault(_typeof2);

	var _uniq2 = __webpack_require__(297);

	var _uniq3 = _interopRequireDefault(_uniq2);

	var _isFunction2 = __webpack_require__(144);

	var _isFunction3 = _interopRequireDefault(_isFunction2);

	var _isArray2 = __webpack_require__(124);

	var _isArray3 = _interopRequireDefault(_isArray2);

	var _isPlainObject2 = __webpack_require__(301);

	var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

	var _isNumber2 = __webpack_require__(303);

	var _isNumber3 = _interopRequireDefault(_isNumber2);

	var _isString2 = __webpack_require__(304);

	var _isString3 = _interopRequireDefault(_isString2);

	var _isBoolean2 = __webpack_require__(305);

	var _isBoolean3 = _interopRequireDefault(_isBoolean2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	exports.createShorthand = createShorthand;
	exports.createShorthandFactory = createShorthandFactory;

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// ============================================================
	// Factories
	// ============================================================

	/**
	 * A more robust React.createElement. It can create elements from primitive values.
	 *
	 * @param {function|string} Component A ReactClass or string
	 * @param {function} mapValueToProps A function that maps a primitive value to the Component props
	 * @param {string|object|function} val The value to create a ReactElement from
	 * @param {Object} [options={}]
	 * @param {object} [options.defaultProps={}] Default props object
	 * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)
	 * @returns {object|null}
	 */
	function createShorthand(Component, mapValueToProps, val) {
	  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

	  if (typeof Component !== 'function' && typeof Component !== 'string') {
	    throw new Error('createShorthandFactory() Component must be a string or function.');
	  }
	  // short circuit noop values
	  if ((0, _isNil3.default)(val) || (0, _isBoolean3.default)(val)) return null;

	  var valIsString = (0, _isString3.default)(val);
	  var valIsNumber = (0, _isNumber3.default)(val);

	  var isReactElement = (0, _react.isValidElement)(val);
	  var isPropsObject = (0, _isPlainObject3.default)(val);
	  var isPrimitiveValue = valIsString || valIsNumber || (0, _isArray3.default)(val);

	  // unhandled type return null
	  /* eslint-disable no-console */
	  if (!isReactElement && !isPropsObject && !isPrimitiveValue) {
	    if (process.env.NODE_ENV !== 'production') {
	      console.error(['Shorthand value must be a string|number|array|object|ReactElement.', ' Use null|undefined|boolean for none', ' Received ' + (typeof val === 'undefined' ? 'undefined' : (0, _typeof3.default)(val)) + '.'].join(''));
	    }
	    return null;
	  }
	  /* eslint-enable no-console */

	  // ----------------------------------------
	  // Build up props
	  // ----------------------------------------
	  var _options$defaultProps = options.defaultProps,
	      defaultProps = _options$defaultProps === undefined ? {} : _options$defaultProps;

	  // User's props

	  var usersProps = isReactElement && val.props || isPropsObject && val || isPrimitiveValue && mapValueToProps(val);

	  // Override props
	  var _options$overrideProp = options.overrideProps,
	      overrideProps = _options$overrideProp === undefined ? {} : _options$overrideProp;

	  overrideProps = (0, _isFunction3.default)(overrideProps) ? overrideProps((0, _extends3.default)({}, defaultProps, usersProps)) : overrideProps;

	  // Merge props
	  /* eslint-disable react/prop-types */
	  var props = (0, _extends3.default)({}, defaultProps, usersProps, overrideProps);

	  // Merge className
	  if (defaultProps.className || overrideProps.className || usersProps.className) {
	    var mergedClassesNames = (0, _classnames2.default)(defaultProps.className, overrideProps.className, usersProps.className);
	    props.className = (0, _uniq3.default)(mergedClassesNames.split(' ')).join(' ');
	  }

	  // Merge style
	  if (defaultProps.style || overrideProps.style || usersProps.style) {
	    props.style = (0, _extends3.default)({}, defaultProps.style, usersProps.style, overrideProps.style);
	  }

	  // ----------------------------------------
	  // Get key
	  // ----------------------------------------

	  // Use key, childKey, or generate key
	  if ((0, _isNil3.default)(props.key)) {
	    var childKey = props.childKey;


	    if (!(0, _isNil3.default)(childKey)) {
	      // apply and consume the childKey
	      props.key = typeof childKey === 'function' ? childKey(props) : childKey;
	      delete props.childKey;
	    } else if (valIsString || valIsNumber) {
	      // use string/number shorthand values as the key
	      props.key = val;
	    }
	  }
	  /* eslint-enable react/prop-types */

	  // ----------------------------------------
	  // Create Element
	  // ----------------------------------------

	  // Clone ReactElements
	  if (isReactElement) return (0, _react.cloneElement)(val, props);

	  // Create ReactElements from built up props
	  if (isPrimitiveValue || isPropsObject) return _react2.default.createElement(Component, props);
	}

	// ============================================================
	// Factory Creators
	// ============================================================

	/**
	 * Creates a `createShorthand` function that is waiting for a value and options.
	 *
	 * @param {function|string} Component A ReactClass or string
	 * @param {function} mapValueToProps A function that maps a primitive value to the Component props
	 * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.
	 */
	createShorthand.handledProps = [];
	function createShorthandFactory(Component, mapValueToProps) {
	  if (typeof Component !== 'function' && typeof Component !== 'string') {
	    throw new Error('createShorthandFactory() Component must be a string or function.');
	  }

	  return function (val, options) {
	    return createShorthand(Component, mapValueToProps, val, options);
	  };
	}

	// ============================================================
	// HTML Factories
	// ============================================================
	var createHTMLDivision = exports.createHTMLDivision = createShorthandFactory('div', function (val) {
	  return { children: val };
	});
	var createHTMLImage = exports.createHTMLImage = createShorthandFactory('img', function (val) {
	  return { src: val };
	});
	var createHTMLInput = exports.createHTMLInput = createShorthandFactory('input', function (val) {
	  return { type: val };
	});
	var createHTMLLabel = exports.createHTMLLabel = createShorthandFactory('label', function (val) {
	  return { children: val };
	});
	var createHTMLParagraph = exports.createHTMLParagraph = createShorthandFactory('p', function (val) {
	  return { children: val };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

	var baseUniq = __webpack_require__(298);

	/**
	 * Creates a duplicate-free version of an array, using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons, in which only the first occurrence of each element
	 * is kept. The order of result values is determined by the order they occur
	 * in the array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @returns {Array} Returns the new duplicate free array.
	 * @example
	 *
	 * _.uniq([2, 1, 2]);
	 * // => [2, 1]
	 */
	function uniq(array) {
	  return (array && array.length) ? baseUniq(array) : [];
	}

	module.exports = uniq;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

	var SetCache = __webpack_require__(201),
	    arrayIncludes = __webpack_require__(204),
	    arrayIncludesWith = __webpack_require__(209),
	    cacheHas = __webpack_require__(211),
	    createSet = __webpack_require__(299),
	    setToArray = __webpack_require__(260);

	/** Used as the size to enable large array optimizations. */
	var LARGE_ARRAY_SIZE = 200;

	/**
	 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {Function} [iteratee] The iteratee invoked per element.
	 * @param {Function} [comparator] The comparator invoked per element.
	 * @returns {Array} Returns the new duplicate free array.
	 */
	function baseUniq(array, iteratee, comparator) {
	  var index = -1,
	      includes = arrayIncludes,
	      length = array.length,
	      isCommon = true,
	      result = [],
	      seen = result;

	  if (comparator) {
	    isCommon = false;
	    includes = arrayIncludesWith;
	  }
	  else if (length >= LARGE_ARRAY_SIZE) {
	    var set = iteratee ? null : createSet(array);
	    if (set) {
	      return setToArray(set);
	    }
	    isCommon = false;
	    includes = cacheHas;
	    seen = new SetCache;
	  }
	  else {
	    seen = iteratee ? [] : result;
	  }
	  outer:
	  while (++index < length) {
	    var value = array[index],
	        computed = iteratee ? iteratee(value) : value;

	    value = (comparator || value !== 0) ? value : 0;
	    if (isCommon && computed === computed) {
	      var seenIndex = seen.length;
	      while (seenIndex--) {
	        if (seen[seenIndex] === computed) {
	          continue outer;
	        }
	      }
	      if (iteratee) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	    else if (!includes(seen, computed, comparator)) {
	      if (seen !== result) {
	        seen.push(computed);
	      }
	      result.push(value);
	    }
	  }
	  return result;
	}

	module.exports = baseUniq;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

	var Set = __webpack_require__(269),
	    noop = __webpack_require__(300),
	    setToArray = __webpack_require__(260);

	/** Used as references for various `Number` constants. */
	var INFINITY = 1 / 0;

	/**
	 * Creates a set object of `values`.
	 *
	 * @private
	 * @param {Array} values The values to add to the set.
	 * @returns {Object} Returns the new set.
	 */
	var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
	  return new Set(values);
	};

	module.exports = createSet;


/***/ }),
/* 300 */
/***/ (function(module, exports) {

	/**
	 * This method returns `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.3.0
	 * @category Util
	 * @example
	 *
	 * _.times(2, _.noop);
	 * // => [undefined, undefined]
	 */
	function noop() {
	  // No operation performed.
	}

	module.exports = noop;


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    getPrototype = __webpack_require__(302),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var funcProto = Function.prototype,
	    objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = funcProto.toString;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.8.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
	    return false;
	  }
	  var proto = getPrototype(value);
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
	  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
	    funcToString.call(Ctor) == objectCtorString;
	}

	module.exports = isPlainObject;


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

	var overArg = __webpack_require__(242);

	/** Built-in value references. */
	var getPrototype = overArg(Object.getPrototypeOf, Object);

	module.exports = getPrototype;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var numberTag = '[object Number]';

	/**
	 * Checks if `value` is classified as a `Number` primitive or object.
	 *
	 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
	 * classified as numbers, use the `_.isFinite` method.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
	 * @example
	 *
	 * _.isNumber(3);
	 * // => true
	 *
	 * _.isNumber(Number.MIN_VALUE);
	 * // => true
	 *
	 * _.isNumber(Infinity);
	 * // => true
	 *
	 * _.isNumber('3');
	 * // => false
	 */
	function isNumber(value) {
	  return typeof value == 'number' ||
	    (isObjectLike(value) && baseGetTag(value) == numberTag);
	}

	module.exports = isNumber;


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isArray = __webpack_require__(124),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var stringTag = '[object String]';

	/**
	 * Checks if `value` is classified as a `String` primitive or object.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
	 * @example
	 *
	 * _.isString('abc');
	 * // => true
	 *
	 * _.isString(1);
	 * // => false
	 */
	function isString(value) {
	  return typeof value == 'string' ||
	    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
	}

	module.exports = isString;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]';

	/**
	 * Checks if `value` is classified as a boolean primitive or object.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
	 * @example
	 *
	 * _.isBoolean(false);
	 * // => true
	 *
	 * _.isBoolean(null);
	 * // => false
	 */
	function isBoolean(value) {
	  return value === true || value === false ||
	    (isObjectLike(value) && baseGetTag(value) == boolTag);
	}

	module.exports = isBoolean;


/***/ }),
/* 306 */
/***/ (function(module, exports) {

	/**
	 * Checks if `value` is `null` or `undefined`.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
	 * @example
	 *
	 * _.isNil(null);
	 * // => true
	 *
	 * _.isNil(void 0);
	 * // => true
	 *
	 * _.isNil(NaN);
	 * // => false
	 */
	function isNil(value) {
	  return value == null;
	}

	module.exports = isNil;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2017 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg) && arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			classNames.default = classNames;
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ }),
/* 308 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Returns an object consisting of props beyond the scope of the Component.
	 * Useful for getting and spreading unknown props from the user.
	 * @param {function} Component A function or ReactClass.
	 * @param {object} props A ReactElement props object
	 * @returns {{}} A shallow copy of the prop object
	 */
	var getUnhandledProps = function getUnhandledProps(Component, props) {
	  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`
	  var _Component$handledPro = Component.handledProps,
	      handledProps = _Component$handledPro === undefined ? [] : _Component$handledPro;


	  return Object.keys(props).reduce(function (acc, prop) {
	    if (prop === 'childKey') return acc;
	    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];
	    return acc;
	  }, {});
	};

	exports.default = getUnhandledProps;

/***/ }),
/* 309 */
/***/ (function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Returns a createElement() type based on the props of the Component.
	 * Useful for calculating what type a component should render as.
	 *
	 * @param {function} Component A function or ReactClass.
	 * @param {object} props A ReactElement props object
	 * @param {function} [getDefault] A function that returns a default element type.
	 * @returns {string|function} A ReactElement type
	 */
	function getElementType(Component, props, getDefault) {
	  var _Component$defaultPro = Component.defaultProps,
	      defaultProps = _Component$defaultPro === undefined ? {} : _Component$defaultPro;

	  // ----------------------------------------
	  // user defined "as" element type

	  if (props.as && props.as !== defaultProps.as) return props.as;

	  // ----------------------------------------
	  // computed default element type

	  if (getDefault) {
	    var computedDefault = getDefault();
	    if (computedDefault) return computedDefault;
	  }

	  // ----------------------------------------
	  // infer anchor links

	  if (props.href) return 'a';

	  // ----------------------------------------
	  // use defaultProp or 'div'

	  return defaultProps.as || 'div';
	}

	exports.default = getElementType;

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.partitionHTMLInputProps = exports.htmlInputProps = exports.htmlInputEvents = exports.htmlInputAttrs = undefined;

	var _includes2 = __webpack_require__(311);

	var _includes3 = _interopRequireDefault(_includes2);

	var _forEach2 = __webpack_require__(286);

	var _forEach3 = _interopRequireDefault(_forEach2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var htmlInputAttrs = exports.htmlInputAttrs = [
	// REACT
	'selected', 'defaultValue', 'defaultChecked',

	// LIMITED HTML PROPS
	'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'max', 'maxLength', 'min', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value'];

	var htmlInputEvents = exports.htmlInputEvents = [
	// EVENTS
	// keyboard
	'onKeyDown', 'onKeyPress', 'onKeyUp',

	// focus
	'onFocus', 'onBlur',

	// form
	'onChange', 'onInput',

	// mouse
	'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp',

	// selection
	'onSelect',

	// touch
	'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];

	var htmlInputProps = exports.htmlInputProps = [].concat(htmlInputAttrs, htmlInputEvents);

	/**
	 * Returns an array of objects consisting of: props of html input element and rest.
	 * @param {object} props A ReactElement props object
	 * @param {array} [htmlProps] An array of html input props
	 * @returns {[{}, {}]} An array of objects
	 */
	var partitionHTMLInputProps = exports.partitionHTMLInputProps = function partitionHTMLInputProps(props) {
	  var htmlProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : htmlInputProps;

	  var inputProps = {};
	  var rest = {};

	  (0, _forEach3.default)(props, function (val, prop) {
	    return (0, _includes3.default)(htmlProps, prop) ? inputProps[prop] = val : rest[prop] = val;
	  });

	  return [inputProps, rest];
	};

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(205),
	    isArrayLike = __webpack_require__(216),
	    isString = __webpack_require__(304),
	    toInteger = __webpack_require__(220),
	    values = __webpack_require__(312);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Checks if `value` is in `collection`. If `collection` is a string, it's
	 * checked for a substring of `value`, otherwise
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * is used for equality comparisons. If `fromIndex` is negative, it's used as
	 * the offset from the end of `collection`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object|string} collection The collection to inspect.
	 * @param {*} value The value to search for.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
	 * @returns {boolean} Returns `true` if `value` is found, else `false`.
	 * @example
	 *
	 * _.includes([1, 2, 3], 1);
	 * // => true
	 *
	 * _.includes([1, 2, 3], 1, 2);
	 * // => false
	 *
	 * _.includes({ 'a': 1, 'b': 2 }, 1);
	 * // => true
	 *
	 * _.includes('abcd', 'bc');
	 * // => true
	 */
	function includes(collection, value, fromIndex, guard) {
	  collection = isArrayLike(collection) ? collection : values(collection);
	  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

	  var length = collection.length;
	  if (fromIndex < 0) {
	    fromIndex = nativeMax(length + fromIndex, 0);
	  }
	  return isString(collection)
	    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
	    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
	}

	module.exports = includes;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

	var baseValues = __webpack_require__(313),
	    keys = __webpack_require__(230);

	/**
	 * Creates an array of the own enumerable string keyed property values of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property values.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.values(new Foo);
	 * // => [1, 2] (iteration order is not guaranteed)
	 *
	 * _.values('hi');
	 * // => ['h', 'i']
	 */
	function values(object) {
	  return object == null ? [] : baseValues(object, keys(object));
	}

	module.exports = values;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(171);

	/**
	 * The base implementation of `_.values` and `_.valuesIn` which creates an
	 * array of `object` property values corresponding to the property names
	 * of `props`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @param {Array} props The property names to get values for.
	 * @returns {Object} Returns the array of property values.
	 */
	function baseValues(object, props) {
	  return arrayMap(props, function(key) {
	    return object[key];
	  });
	}

	module.exports = baseValues;


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// Copy of sindre's leven, wrapped in dead code elimination for production
	// https://github.com/sindresorhus/leven/blob/master/index.js

	var leven = function leven() {
	  return 0;
	};

	if (process.env.NODE_ENV !== 'production') {
	  /* eslint-disable complexity, no-nested-ternary */
	  var arr = [];
	  var charCodeCache = [];

	  leven = function leven(a, b) {
	    if (a === b) return 0;

	    var aLen = a.length;
	    var bLen = b.length;

	    if (aLen === 0) return bLen;
	    if (bLen === 0) return aLen;

	    var bCharCode = void 0;
	    var ret = void 0;
	    var tmp = void 0;
	    var tmp2 = void 0;
	    var i = 0;
	    var j = 0;

	    while (i < aLen) {
	      charCodeCache[i] = a.charCodeAt(i);
	      arr[i] = ++i;
	    }

	    while (j < bLen) {
	      bCharCode = b.charCodeAt(j);
	      tmp = j++;
	      ret = j;

	      for (i = 0; i < aLen; i++) {
	        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;
	        tmp = arr[i];
	        ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2;
	      }
	    }

	    return ret;
	  };
	}

	exports.default = leven;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _isObject2 = __webpack_require__(145);

	var _isObject3 = _interopRequireDefault(_isObject2);

	var _times2 = __webpack_require__(316);

	var _times3 = _interopRequireDefault(_times2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * All previous KeyboardEvent key identifying properties are deprecated in favor of `key`.
	 * Unfortunately, `key` is not yet fully supported.
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key
	 */
	var codes = {
	  // ----------------------------------------
	  // By Code
	  // ----------------------------------------
	  3: 'Cancel',
	  6: 'Help',
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  28: 'Convert',
	  29: 'NonConvert',
	  30: 'Accept',
	  31: 'ModeChange',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  41: 'Select',
	  42: 'Print',
	  43: 'Execute',
	  44: 'PrintScreen',
	  45: 'Insert',
	  46: 'Delete',
	  48: ['0', ')'],
	  49: ['1', '!'],
	  50: ['2', '@'],
	  51: ['3', '#'],
	  52: ['4', '$'],
	  53: ['5', '%'],
	  54: ['6', '^'],
	  55: ['7', '&'],
	  56: ['8', '*'],
	  57: ['9', '('],
	  91: 'OS',
	  93: 'ContextMenu',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  181: 'VolumeMute',
	  182: 'VolumeDown',
	  183: 'VolumeUp',
	  186: [';', ':'],
	  187: ['=', '+'],
	  188: [',', '<'],
	  189: ['-', '_'],
	  190: ['.', '>'],
	  191: ['/', '?'],
	  192: ['`', '~'],
	  219: ['[', '{'],
	  220: ['\\', '|'],
	  221: [']', '}'],
	  222: ["'", '"'],
	  224: 'Meta',
	  225: 'AltGraph',
	  246: 'Attn',
	  247: 'CrSel',
	  248: 'ExSel',
	  249: 'EraseEof',
	  250: 'Play',
	  251: 'ZoomOut'
	};

	// Function Keys (F1-24)
	(0, _times3.default)(24, function (i) {
	  return codes[112 + i] = 'F' + (i + 1);
	});

	// Alphabet (a-Z)
	(0, _times3.default)(26, function (i) {
	  var n = i + 65;
	  codes[n] = [String.fromCharCode(n + 32), String.fromCharCode(n)];
	});

	var keyboardKey = {
	  codes: codes,

	  /**
	   * Get the `keyCode` or `which` value from a keyboard event or `key` name.
	   * @param {string|object} name A keyboard event like object or `key` name.
	   * @param {string} [name.key] If object, it must have one of these keys.
	   * @param {string} [name.keyCode] If object, it must have one of these keys.
	   * @param {string} [name.which] If object, it must have one of these keys.
	   * @returns {*}
	   */
	  getCode: function getCode(name) {
	    if ((0, _isObject3.default)(name)) {
	      return name.keyCode || name.which || this[name.key];
	    }
	    return this[name];
	  },


	  /**
	   * Get the key name from a keyboard event, `keyCode`, or `which` value.
	   * @param {number|object} code A keyboard event like object or key name.
	   * @param {number} [code.keyCode] If object, it must have one of these keys.
	   * @param {number} [code.which] If object, it must have one of these keys.
	   * @param {number} [code.shiftKey] If object, it must have one of these keys.
	   * @returns {*}
	   */
	  getName: function getName(code) {
	    var isEvent = (0, _isObject3.default)(code);
	    var name = codes[isEvent ? code.keyCode || code.which : code];

	    if (Array.isArray(name)) {
	      if (isEvent) {
	        name = name[code.shiftKey ? 1 : 0];
	      } else {
	        name = name[0];
	      }
	    }

	    return name;
	  },


	  // ----------------------------------------
	  // By Name
	  // ----------------------------------------
	  // declare these manually for static analysis
	  Cancel: 3,
	  Help: 6,
	  Backspace: 8,
	  Tab: 9,
	  Clear: 12,
	  Enter: 13,
	  Shift: 16,
	  Control: 17,
	  Alt: 18,
	  Pause: 19,
	  CapsLock: 20,
	  Escape: 27,
	  Convert: 28,
	  NonConvert: 29,
	  Accept: 30,
	  ModeChange: 31,
	  ' ': 32,
	  PageUp: 33,
	  PageDown: 34,
	  End: 35,
	  Home: 36,
	  ArrowLeft: 37,
	  ArrowUp: 38,
	  ArrowRight: 39,
	  ArrowDown: 40,
	  Select: 41,
	  Print: 42,
	  Execute: 43,
	  PrintScreen: 44,
	  Insert: 45,
	  Delete: 46,
	  0: 48, ')': 48,
	  1: 49, '!': 49,
	  2: 50, '@': 50,
	  3: 51, '#': 51,
	  4: 52, $: 52,
	  5: 53, '%': 53,
	  6: 54, '^': 54,
	  7: 55, '&': 55,
	  8: 56, '*': 56,
	  9: 57, '(': 57,
	  a: 65, A: 65,
	  b: 66, B: 66,
	  c: 67, C: 67,
	  d: 68, D: 68,
	  e: 69, E: 69,
	  f: 70, F: 70,
	  g: 71, G: 71,
	  h: 72, H: 72,
	  i: 73, I: 73,
	  j: 74, J: 74,
	  k: 75, K: 75,
	  l: 76, L: 76,
	  m: 77, M: 77,
	  n: 78, N: 78,
	  o: 79, O: 79,
	  p: 80, P: 80,
	  q: 81, Q: 81,
	  r: 82, R: 82,
	  s: 83, S: 83,
	  t: 84, T: 84,
	  u: 85, U: 85,
	  v: 86, V: 86,
	  w: 87, W: 87,
	  x: 88, X: 88,
	  y: 89, Y: 89,
	  z: 90, Z: 90,
	  OS: 91,
	  ContextMenu: 93,
	  F1: 112,
	  F2: 113,
	  F3: 114,
	  F4: 115,
	  F5: 116,
	  F6: 117,
	  F7: 118,
	  F8: 119,
	  F9: 120,
	  F10: 121,
	  F11: 122,
	  F12: 123,
	  F13: 124,
	  F14: 125,
	  F15: 126,
	  F16: 127,
	  F17: 128,
	  F18: 129,
	  F19: 130,
	  F20: 131,
	  F21: 132,
	  F22: 133,
	  F23: 134,
	  F24: 135,
	  NumLock: 144,
	  ScrollLock: 145,
	  VolumeMute: 181,
	  VolumeDown: 182,
	  VolumeUp: 183,
	  ';': 186, ':': 186,
	  '=': 187, '+': 187,
	  ',': 188, '<': 188,
	  '-': 189, _: 189,
	  '.': 190, '>': 190,
	  '/': 191, '?': 191,
	  '`': 192, '~': 192,
	  '[': 219, '{': 219,
	  '\\': 220, '\|': 220,
	  ']': 221, '}': 221,
	  "'": 222, '"': 222,
	  Meta: 224,
	  AltGraph: 225,
	  Attn: 246,
	  CrSel: 247,
	  ExSel: 248,
	  EraseEof: 249,
	  Play: 250,
	  ZoomOut: 251
	};

	// ----------------------------------------
	// By Alias
	// ----------------------------------------
	// provide dot-notation accessible keys for all key names
	keyboardKey.Spacebar = keyboardKey[' '];
	keyboardKey.Digit0 = keyboardKey['0'];
	keyboardKey.Digit1 = keyboardKey['1'];
	keyboardKey.Digit2 = keyboardKey['2'];
	keyboardKey.Digit3 = keyboardKey['3'];
	keyboardKey.Digit4 = keyboardKey['4'];
	keyboardKey.Digit5 = keyboardKey['5'];
	keyboardKey.Digit6 = keyboardKey['6'];
	keyboardKey.Digit7 = keyboardKey['7'];
	keyboardKey.Digit8 = keyboardKey['8'];
	keyboardKey.Digit9 = keyboardKey['9'];
	keyboardKey.Tilde = keyboardKey['~'];
	keyboardKey.GraveAccent = keyboardKey['`'];
	keyboardKey.ExclamationPoint = keyboardKey['!'];
	keyboardKey.AtSign = keyboardKey['@'];
	keyboardKey.PoundSign = keyboardKey['#'];
	keyboardKey.PercentSign = keyboardKey['%'];
	keyboardKey.Caret = keyboardKey['^'];
	keyboardKey.Ampersand = keyboardKey['&'];
	keyboardKey.PlusSign = keyboardKey['+'];
	keyboardKey.MinusSign = keyboardKey['-'];
	keyboardKey.EqualsSign = keyboardKey['='];
	keyboardKey.DivisionSign = keyboardKey['/'];
	keyboardKey.MultiplicationSign = keyboardKey['*'];
	keyboardKey.Comma = keyboardKey[','];
	keyboardKey.Decimal = keyboardKey['.'];
	keyboardKey.Colon = keyboardKey[':'];
	keyboardKey.Semicolon = keyboardKey[';'];
	keyboardKey.Pipe = keyboardKey['|'];
	keyboardKey.BackSlash = keyboardKey['\\'];
	keyboardKey.QuestionMark = keyboardKey['?'];
	keyboardKey.SingleQuote = keyboardKey['"'];
	keyboardKey.DoubleQuote = keyboardKey['"'];
	keyboardKey.LeftCurlyBrace = keyboardKey['{'];
	keyboardKey.RightCurlyBrace = keyboardKey['}'];
	keyboardKey.LeftParenthesis = keyboardKey['('];
	keyboardKey.RightParenthesis = keyboardKey[')'];
	keyboardKey.LeftAngleBracket = keyboardKey['<'];
	keyboardKey.RightAngleBracket = keyboardKey['>'];
	keyboardKey.LeftSquareBracket = keyboardKey['['];
	keyboardKey.RightSquareBracket = keyboardKey[']'];

	exports.default = keyboardKey;

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

	var baseTimes = __webpack_require__(232),
	    castFunction = __webpack_require__(288),
	    toInteger = __webpack_require__(220);

	/** Used as references for various `Number` constants. */
	var MAX_SAFE_INTEGER = 9007199254740991;

	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;

	/**
	 * Invokes the iteratee `n` times, returning an array of the results of
	 * each invocation. The iteratee is invoked with one argument; (index).
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Util
	 * @param {number} n The number of times to invoke `iteratee`.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the array of results.
	 * @example
	 *
	 * _.times(3, String);
	 * // => ['0', '1', '2']
	 *
	 *  _.times(4, _.constant(0));
	 * // => [0, 0, 0, 0]
	 */
	function times(n, iteratee) {
	  n = toInteger(n);
	  if (n < 1 || n > MAX_SAFE_INTEGER) {
	    return [];
	  }
	  var index = MAX_ARRAY_LENGTH,
	      length = nativeMin(n, MAX_ARRAY_LENGTH);

	  iteratee = castFunction(iteratee);
	  n -= MAX_ARRAY_LENGTH;

	  var result = baseTimes(length, iteratee);
	  while (++index < n) {
	    iteratee(index);
	  }
	  return result;
	}

	module.exports = times;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.objectDiff = undefined;

	var _isEqual2 = __webpack_require__(318);

	var _isEqual3 = _interopRequireDefault(_isEqual2);

	var _has2 = __webpack_require__(120);

	var _has3 = _interopRequireDefault(_has2);

	var _transform2 = __webpack_require__(319);

	var _transform3 = _interopRequireDefault(_transform2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Naive and inefficient object difference, intended for development / debugging use only.
	 * Deleted keys are shown as [DELETED].
	 * @param {{}} source The source object
	 * @param {{}} target The target object.
	 * @returns {{}} A new object containing new/modified/deleted keys.
	 * @example
	 * import { objectDiff } from 'src/lib'
	 *
	 * const a = { key: 'val', foo: 'bar' }
	 * const b = { key: 'val', foo: 'baz' }
	 *
	 * objectDiff(a, b)
	 * //=> { foo: 'baz' }
	 */
	var objectDiff = exports.objectDiff = function objectDiff(source, target) {
	  return (0, _transform3.default)(source, function (res, val, key) {
	    // deleted keys
	    if (!(0, _has3.default)(target, key)) res[key] = '[DELETED]';
	    // new keys / changed values
	    else if (!(0, _isEqual3.default)(val, target[key])) res[key] = target[key];
	  }, {});
	};

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsEqual = __webpack_require__(253);

	/**
	 * Performs a deep comparison between two values to determine if they are
	 * equivalent.
	 *
	 * **Note:** This method supports comparing arrays, array buffers, booleans,
	 * date objects, error objects, maps, numbers, `Object` objects, regexes,
	 * sets, strings, symbols, and typed arrays. `Object` objects are compared
	 * by their own, not inherited, enumerable properties. Functions and DOM
	 * nodes are compared by strict equality, i.e. `===`.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
	 * @example
	 *
	 * var object = { 'a': 1 };
	 * var other = { 'a': 1 };
	 *
	 * _.isEqual(object, other);
	 * // => true
	 *
	 * object === other;
	 * // => false
	 */
	function isEqual(value, other) {
	  return baseIsEqual(value, other);
	}

	module.exports = isEqual;


/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(287),
	    baseCreate = __webpack_require__(320),
	    baseForOwn = __webpack_require__(227),
	    baseIteratee = __webpack_require__(244),
	    getPrototype = __webpack_require__(302),
	    isArray = __webpack_require__(124),
	    isBuffer = __webpack_require__(233),
	    isFunction = __webpack_require__(144),
	    isObject = __webpack_require__(145),
	    isTypedArray = __webpack_require__(236);

	/**
	 * An alternative to `_.reduce`; this method transforms `object` to a new
	 * `accumulator` object which is the result of running each of its own
	 * enumerable string keyed properties thru `iteratee`, with each invocation
	 * potentially mutating the `accumulator` object. If `accumulator` is not
	 * provided, a new object with the same `[[Prototype]]` will be used. The
	 * iteratee is invoked with four arguments: (accumulator, value, key, object).
	 * Iteratee functions may exit iteration early by explicitly returning `false`.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.3.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The custom accumulator value.
	 * @returns {*} Returns the accumulated value.
	 * @example
	 *
	 * _.transform([2, 3, 4], function(result, n) {
	 *   result.push(n *= n);
	 *   return n % 2 == 0;
	 * }, []);
	 * // => [4, 9]
	 *
	 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] }
	 */
	function transform(object, iteratee, accumulator) {
	  var isArr = isArray(object),
	      isArrLike = isArr || isBuffer(object) || isTypedArray(object);

	  iteratee = baseIteratee(iteratee, 4);
	  if (accumulator == null) {
	    var Ctor = object && object.constructor;
	    if (isArrLike) {
	      accumulator = isArr ? new Ctor : [];
	    }
	    else if (isObject(object)) {
	      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
	    }
	    else {
	      accumulator = {};
	    }
	  }
	  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
	    return iteratee(accumulator, value, index, object);
	  });
	  return accumulator;
	}

	module.exports = transform;


/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(145);

	/** Built-in value references. */
	var objectCreate = Object.create;

	/**
	 * The base implementation of `_.create` without support for assigning
	 * properties to the created object.
	 *
	 * @private
	 * @param {Object} proto The object to inherit from.
	 * @returns {Object} Returns the new object.
	 */
	var baseCreate = (function() {
	  function object() {}
	  return function(proto) {
	    if (!isObject(proto)) {
	      return {};
	    }
	    if (objectCreate) {
	      return objectCreate(proto);
	    }
	    object.prototype = proto;
	    var result = new object;
	    object.prototype = undefined;
	    return result;
	  };
	}());

	module.exports = baseCreate;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.findByType = exports.someByType = undefined;

	var _find2 = __webpack_require__(322);

	var _find3 = _interopRequireDefault(_find2);

	var _some2 = __webpack_require__(325);

	var _some3 = _interopRequireDefault(_some2);

	var _react = __webpack_require__(2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Determine if child by type exists in children.
	 * @param {Object} children The children prop of a component.
	 * @param {string|Function} type An html tag name string or React component.
	 * @returns {Boolean}
	 */
	var someByType = exports.someByType = function someByType(children, type) {
	  return (0, _some3.default)(_react.Children.toArray(children), { type: type });
	};

	/**
	 * Find child by type.
	 * @param {Object} children The children prop of a component.
	 * @param {string|Function} type An html tag name string or React component.
	 * @returns {undefined|Object}
	 */
	var findByType = exports.findByType = function findByType(children, type) {
	  return (0, _find3.default)(_react.Children.toArray(children), { type: type });
	};

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

	var createFind = __webpack_require__(323),
	    findIndex = __webpack_require__(324);

	/**
	 * Iterates over elements of `collection`, returning the first element
	 * `predicate` returns truthy for. The predicate is invoked with three
	 * arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {*} Returns the matched element, else `undefined`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'age': 36, 'active': true },
	 *   { 'user': 'fred',    'age': 40, 'active': false },
	 *   { 'user': 'pebbles', 'age': 1,  'active': true }
	 * ];
	 *
	 * _.find(users, function(o) { return o.age < 40; });
	 * // => object for 'barney'
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.find(users, { 'age': 1, 'active': true });
	 * // => object for 'pebbles'
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.find(users, ['active', false]);
	 * // => object for 'fred'
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.find(users, 'active');
	 * // => object for 'barney'
	 */
	var find = createFind(findIndex);

	module.exports = find;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIteratee = __webpack_require__(244),
	    isArrayLike = __webpack_require__(216),
	    keys = __webpack_require__(230);

	/**
	 * Creates a `_.find` or `_.findLast` function.
	 *
	 * @private
	 * @param {Function} findIndexFunc The function to find the collection index.
	 * @returns {Function} Returns the new find function.
	 */
	function createFind(findIndexFunc) {
	  return function(collection, predicate, fromIndex) {
	    var iterable = Object(collection);
	    if (!isArrayLike(collection)) {
	      var iteratee = baseIteratee(predicate, 3);
	      collection = keys(collection);
	      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
	    }
	    var index = findIndexFunc(collection, predicate, fromIndex);
	    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
	  };
	}

	module.exports = createFind;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFindIndex = __webpack_require__(206),
	    baseIteratee = __webpack_require__(244),
	    toInteger = __webpack_require__(220);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * This method is like `_.find` except that it returns the index of the first
	 * element `predicate` returns truthy for instead of the element itself.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param {number} [fromIndex=0] The index to search from.
	 * @returns {number} Returns the index of the found element, else `-1`.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney',  'active': false },
	 *   { 'user': 'fred',    'active': false },
	 *   { 'user': 'pebbles', 'active': true }
	 * ];
	 *
	 * _.findIndex(users, function(o) { return o.user == 'barney'; });
	 * // => 0
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.findIndex(users, { 'user': 'fred', 'active': false });
	 * // => 1
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.findIndex(users, ['active', false]);
	 * // => 0
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.findIndex(users, 'active');
	 * // => 2
	 */
	function findIndex(array, predicate, fromIndex) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return -1;
	  }
	  var index = fromIndex == null ? 0 : toInteger(fromIndex);
	  if (index < 0) {
	    index = nativeMax(length + index, 0);
	  }
	  return baseFindIndex(array, baseIteratee(predicate, 3), index);
	}

	module.exports = findIndex;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

	var arraySome = __webpack_require__(256),
	    baseIteratee = __webpack_require__(244),
	    baseSome = __webpack_require__(326),
	    isArray = __webpack_require__(124),
	    isIterateeCall = __webpack_require__(327);

	/**
	 * Checks if `predicate` returns truthy for **any** element of `collection`.
	 * Iteration is stopped once `predicate` returns truthy. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 * @example
	 *
	 * _.some([null, 0, 'yes', false], Boolean);
	 * // => true
	 *
	 * var users = [
	 *   { 'user': 'barney', 'active': true },
	 *   { 'user': 'fred',   'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.some(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.some(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.some(users, 'active');
	 * // => true
	 */
	function some(collection, predicate, guard) {
	  var func = isArray(collection) ? arraySome : baseSome;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}

	module.exports = some;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(226);

	/**
	 * The base implementation of `_.some` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if any element passes the predicate check,
	 *  else `false`.
	 */
	function baseSome(collection, predicate) {
	  var result;

	  baseEach(collection, function(value, index, collection) {
	    result = predicate(value, index, collection);
	    return !result;
	  });
	  return !!result;
	}

	module.exports = baseSome;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

	var eq = __webpack_require__(158),
	    isArrayLike = __webpack_require__(216),
	    isIndex = __webpack_require__(174),
	    isObject = __webpack_require__(145);

	/**
	 * Checks if the given arguments are from an iteratee call.
	 *
	 * @private
	 * @param {*} value The potential iteratee value argument.
	 * @param {*} index The potential iteratee index or key argument.
	 * @param {*} object The potential iteratee object argument.
	 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
	 *  else `false`.
	 */
	function isIterateeCall(value, index, object) {
	  if (!isObject(object)) {
	    return false;
	  }
	  var type = typeof index;
	  if (type == 'number'
	        ? (isArrayLike(object) && isIndex(index, object.length))
	        : (type == 'string' && index in object)
	      ) {
	    return eq(object[index], value);
	  }
	  return false;
	}

	module.exports = isIterateeCall;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.deprecate = exports.collectionShorthand = exports.itemShorthand = exports.contentShorthand = exports.onlyProp = exports.demand = exports.givenProps = exports.some = exports.every = exports.disallow = exports.suggest = exports.as = undefined;

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _difference2 = __webpack_require__(339);

	var _difference3 = _interopRequireDefault(_difference2);

	var _trim2 = __webpack_require__(412);

	var _trim3 = _interopRequireDefault(_trim2);

	var _isObject2 = __webpack_require__(421);

	var _isObject3 = _interopRequireDefault(_isObject2);

	var _pick2 = __webpack_require__(423);

	var _pick3 = _interopRequireDefault(_pick2);

	var _keys2 = __webpack_require__(428);

	var _keys3 = _interopRequireDefault(_keys2);

	var _isPlainObject2 = __webpack_require__(429);

	var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

	var _isFunction2 = __webpack_require__(430);

	var _isFunction3 = _interopRequireDefault(_isFunction2);

	var _compact2 = __webpack_require__(431);

	var _compact3 = _interopRequireDefault(_compact2);

	var _take2 = __webpack_require__(433);

	var _take3 = _interopRequireDefault(_take2);

	var _sortBy2 = __webpack_require__(435);

	var _sortBy3 = _interopRequireDefault(_sortBy2);

	var _sum2 = __webpack_require__(442);

	var _sum3 = _interopRequireDefault(_sum2);

	var _min2 = __webpack_require__(445);

	var _min3 = _interopRequireDefault(_min2);

	var _map2 = __webpack_require__(449);

	var _map3 = _interopRequireDefault(_map2);

	var _flow2 = __webpack_require__(451);

	var _flow3 = _interopRequireDefault(_flow2);

	var _includes2 = __webpack_require__(454);

	var _includes3 = _interopRequireDefault(_includes2);

	var _isNil2 = __webpack_require__(455);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _leven = __webpack_require__(314);

	var _leven2 = _interopRequireDefault(_leven);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var typeOf = function typeOf() {
	  var _Object$prototype$toS;

	  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);
	};

	/**
	 * Ensure a component can render as a give prop value.
	 */
	var as = exports.as = function as() {
	  return _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).apply(undefined, arguments);
	};

	/**
	 * Similar to PropTypes.oneOf but shows closest matches.
	 * Word order is ignored allowing `left chevron` to match `chevron left`.
	 * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)
	 * @param {string[]} suggestions An array of allowed values.
	 */
	var suggest = exports.suggest = function suggest(suggestions) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(suggestions)) {
	      throw new Error(['Invalid argument supplied to suggest, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));
	    }
	    var propValue = props[propName];

	    // skip if prop is undefined or is included in the suggestions
	    if ((0, _isNil3.default)(propValue) || propValue === false || (0, _includes3.default)(propValue, suggestions)) return;

	    // find best suggestions
	    var propValueWords = propValue.split(' ');

	    /* eslint-disable max-nested-callbacks */
	    var bestMatches = (0, _flow3.default)((0, _map3.default)(function (suggestion) {
	      var suggestionWords = suggestion.split(' ');

	      var propValueScore = (0, _flow3.default)((0, _map3.default)(function (x) {
	        return (0, _map3.default)(function (y) {
	          return (0, _leven2.default)(x, y);
	        }, suggestionWords);
	      }), (0, _map3.default)(_min3.default), _sum3.default)(propValueWords);

	      var suggestionScore = (0, _flow3.default)((0, _map3.default)(function (x) {
	        return (0, _map3.default)(function (y) {
	          return (0, _leven2.default)(x, y);
	        }, propValueWords);
	      }), (0, _map3.default)(_min3.default), _sum3.default)(suggestionWords);

	      return { suggestion: suggestion, score: propValueScore + suggestionScore };
	    }), (0, _sortBy3.default)(['score', 'suggestion']), (0, _take3.default)(3))(suggestions);
	    /* eslint-enable max-nested-callbacks */

	    // skip if a match scored 0
	    // since we're matching on words (classNames) this allows any word order to pass validation
	    // e.g. `left chevron` vs `chevron left`
	    if (bestMatches.some(function (x) {
	      return x.score === 0;
	    })) return;

	    return new Error(['Invalid prop `' + propName + '` of value `' + propValue + '` supplied to `' + componentName + '`.', '\n\nInstead of `' + propValue + '`, did you mean:', bestMatches.map(function (x) {
	      return '\n  - ' + x.suggestion;
	    }).join(''), '\n'].join(''));
	  };
	};

	/**
	 * Disallow other props form being defined with this prop.
	 * @param {string[]} disallowedProps An array of props that cannot be used with this prop.
	 */
	var disallow = exports.disallow = function disallow(disallowedProps) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(disallowedProps)) {
	      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));
	    }

	    // skip if prop is undefined
	    if ((0, _isNil3.default)(props[propName]) || props[propName] === false) return;

	    // find disallowed props with values
	    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {
	      if (!(0, _isNil3.default)(props[disallowedProp]) && props[disallowedProp] !== false) {
	        return [].concat((0, _toConsumableArray3.default)(acc), [disallowedProp]);
	      }
	      return acc;
	    }, []);

	    if (disallowed.length > 0) {
	      return new Error(['Prop `' + propName + '` in `' + componentName + '` conflicts with props: `' + disallowed.join('`, `') + '`.', 'They cannot be defined together, choose one or the other.'].join(' '));
	    }
	  };
	};

	/**
	 * Ensure a prop adherers to multiple prop type validators.
	 * @param {function[]} validators An array of propType functions.
	 */
	var every = exports.every = function every(validators) {
	  return function (props, propName, componentName) {
	    for (var _len = arguments.length, rest = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
	      rest[_key - 3] = arguments[_key];
	    }

	    if (!Array.isArray(validators)) {
	      throw new Error(['Invalid argument supplied to every, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	    }

	    var errors = (0, _flow3.default)((0, _map3.default)(function (validator) {
	      if (typeof validator !== 'function') {
	        throw new Error('every() argument "validators" should contain functions, found: ' + typeOf(validator) + '.');
	      }
	      return validator.apply(undefined, [props, propName, componentName].concat(rest));
	    }), _compact3.default)(validators);

	    // we can only return one error at a time
	    return errors[0];
	  };
	};

	/**
	 * Ensure a prop adherers to at least one of the given prop type validators.
	 * @param {function[]} validators An array of propType functions.
	 */
	var some = exports.some = function some(validators) {
	  return function (props, propName, componentName) {
	    for (var _len2 = arguments.length, rest = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
	      rest[_key2 - 3] = arguments[_key2];
	    }

	    if (!Array.isArray(validators)) {
	      throw new Error(['Invalid argument supplied to some, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	    }

	    var errors = (0, _compact3.default)((0, _map3.default)(validators, function (validator) {
	      if (!(0, _isFunction3.default)(validator)) {
	        throw new Error('some() argument "validators" should contain functions, found: ' + typeOf(validator) + '.');
	      }
	      return validator.apply(undefined, [props, propName, componentName].concat(rest));
	    }));

	    // fail only if all validators failed
	    if (errors.length === validators.length) {
	      var error = new Error('One of these validators must pass:');
	      error.message += '\n' + (0, _map3.default)(errors, function (err, i) {
	        return '[' + (i + 1) + ']: ' + err.message;
	      }).join('\n');
	      return error;
	    }
	  };
	};

	/**
	 * Ensure a validator passes only when a component has a given propsShape.
	 * @param {object} propsShape An object describing the prop shape.
	 * @param {function} validator A propType function.
	 */
	var givenProps = exports.givenProps = function givenProps(propsShape, validator) {
	  return function (props, propName, componentName) {
	    for (var _len3 = arguments.length, rest = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
	      rest[_key3 - 3] = arguments[_key3];
	    }

	    if (!(0, _isPlainObject3.default)(propsShape)) {
	      throw new Error(['Invalid argument supplied to givenProps, expected an object.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	    }

	    if (typeof validator !== 'function') {
	      throw new Error(['Invalid argument supplied to givenProps, expected a function.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	    }

	    var shouldValidate = (0, _keys3.default)(propsShape).every(function (key) {
	      var val = propsShape[key];
	      // require propShape validators to pass or prop values to match
	      return typeof val === 'function' ? !val.apply(undefined, [props, key, componentName].concat(rest)) : val === props[propName];
	    });

	    if (!shouldValidate) return;

	    var error = validator.apply(undefined, [props, propName, componentName].concat(rest));

	    if (error) {
	      // poor mans shallow pretty print, prevents JSON circular reference errors
	      var prettyProps = '{ ' + (0, _keys3.default)((0, _pick3.default)((0, _keys3.default)(propsShape), props)).map(function (key) {
	        var val = props[key];
	        var renderedValue = val;
	        if (typeof val === 'string') renderedValue = '"' + val + '"';else if (Array.isArray(val)) renderedValue = '[' + val.join(', ') + ']';else if ((0, _isObject3.default)(val)) renderedValue = '{...}';

	        return key + ': ' + renderedValue;
	      }).join(', ') + ' }';

	      error.message = 'Given props ' + prettyProps + ': ' + error.message;
	      return error;
	    }
	  };
	};

	/**
	 * Define prop dependencies by requiring other props.
	 * @param {string[]} requiredProps An array of required prop names.
	 */
	var demand = exports.demand = function demand(requiredProps) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(requiredProps)) {
	      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', ' See `' + propName + '` prop in `' + componentName + '`.'].join(''));
	    }

	    // skip if prop is undefined
	    if (props[propName] === undefined) return;

	    var missingRequired = requiredProps.filter(function (requiredProp) {
	      return props[requiredProp] === undefined;
	    });
	    if (missingRequired.length > 0) {
	      return new Error('`' + propName + '` prop in `' + componentName + '` requires props: `' + missingRequired.join('`, `') + '`.');
	    }
	  };
	};

	/**
	 * Ensure an only prop contains a string with only possible values.
	 * @param {string[]} possible An array of possible values to prop.
	 */
	var onlyProp = exports.onlyProp = function onlyProp(possible) {
	  return function (props, propName, componentName) {
	    if (!Array.isArray(possible)) {
	      throw new Error(['Invalid argument supplied to some, expected an instance of array.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	    }

	    var propValue = props[propName];

	    // skip if prop is undefined
	    if ((0, _isNil3.default)(propValue) || propValue === false) return;

	    var values = propValue.replace('large screen', 'large-screen').split(' ').map(function (val) {
	      return (0, _trim3.default)(val).replace('-', ' ');
	    });
	    var invalid = (0, _difference3.default)(values, possible);

	    // fail only if there are invalid values
	    if (invalid.length > 0) {
	      return new Error('`' + propName + '` prop in `' + componentName + '` has invalid values: `' + invalid.join('`, `') + '`.');
	    }
	  };
	};

	/**
	 * Ensure a component can render as a node passed as a prop value in place of children.
	 */
	var contentShorthand = exports.contentShorthand = function contentShorthand() {
	  return every([disallow(['children']), _propTypes2.default.node]).apply(undefined, arguments);
	};

	/**
	 * Item shorthand is a description of a component that can be a literal,
	 * a props object, or an element.
	 */
	var itemShorthand = exports.itemShorthand = function itemShorthand() {
	  return every([disallow(['children']), _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.node, _propTypes2.default.object])]).apply(undefined, arguments);
	};

	/**
	 * Collection shorthand ensures a prop is an array of item shorthand.
	 */
	var collectionShorthand = exports.collectionShorthand = function collectionShorthand() {
	  return every([disallow(['children']), _propTypes2.default.arrayOf(itemShorthand)]).apply(undefined, arguments);
	};

	/**
	 * Show a deprecated warning for component props with a help message and optional validator.
	 * @param {string} help A help message to display with the deprecation warning.
	 * @param {function} [validator] A propType function.
	 */
	var deprecate = exports.deprecate = function deprecate(help, validator) {
	  return function (props, propName, componentName) {
	    for (var _len4 = arguments.length, args = Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
	      args[_key4 - 3] = arguments[_key4];
	    }

	    if (typeof help !== 'string') {
	      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	    }

	    // skip if prop is undefined
	    if (props[propName] === undefined) return;

	    // deprecation error and help
	    var error = new Error('The `' + propName + '` prop in `' + componentName + '` is deprecated.');
	    if (help) error.message += ' ' + help;

	    // add optional validation error message
	    if (validator) {
	      if (typeof validator === 'function') {
	        var validationError = validator.apply(undefined, [props, propName, componentName].concat(args));
	        if (validationError) {
	          error.message = error.message + ' ' + validationError.message;
	        }
	      } else {
	        throw new Error(['Invalid argument supplied to deprecate, expected a function.', 'See `' + propName + '` prop in `' + componentName + '`.'].join(' '));
	      }
	    }

	    return error;
	  };
	};

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _from = __webpack_require__(330);

	var _from2 = _interopRequireDefault(_from);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }

	    return arr2;
	  } else {
	    return (0, _from2.default)(arr);
	  }
	};

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(331), __esModule: true };

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(82);
	__webpack_require__(332);
	module.exports = __webpack_require__(40).Array.from;


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var ctx = __webpack_require__(41);
	var $export = __webpack_require__(38);
	var toObject = __webpack_require__(72);
	var call = __webpack_require__(333);
	var isArrayIter = __webpack_require__(334);
	var toLength = __webpack_require__(62);
	var createProperty = __webpack_require__(335);
	var getIterFn = __webpack_require__(336);

	$export($export.S + $export.F * !__webpack_require__(338)(function (iter) { Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
	    var O = toObject(arrayLike);
	    var C = typeof this == 'function' ? this : Array;
	    var aLen = arguments.length;
	    var mapfn = aLen > 1 ? arguments[1] : undefined;
	    var mapping = mapfn !== undefined;
	    var index = 0;
	    var iterFn = getIterFn(O);
	    var length, result, step, iterator;
	    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
	      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for (result = new C(length); length > index; index++) {
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(45);
	module.exports = function (iterator, fn, value, entries) {
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch (e) {
	    var ret = iterator['return'];
	    if (ret !== undefined) anObject(ret.call(iterator));
	    throw e;
	  }
	};


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators = __webpack_require__(86);
	var ITERATOR = __webpack_require__(92)('iterator');
	var ArrayProto = Array.prototype;

	module.exports = function (it) {
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};


/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(44);
	var createDesc = __webpack_require__(52);

	module.exports = function (object, index, value) {
	  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(337);
	var ITERATOR = __webpack_require__(92)('iterator');
	var Iterators = __webpack_require__(86);
	module.exports = __webpack_require__(40).getIteratorMethod = function (it) {
	  if (it != undefined) return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(59);
	var TAG = __webpack_require__(92)('toStringTag');
	// ES3 wrong here
	var ARG = cof(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (e) { /* empty */ }
	};

	module.exports = function (it) {
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

	var ITERATOR = __webpack_require__(92)('iterator');
	var SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function () { SAFE_CLOSING = true; };
	  // eslint-disable-next-line no-throw-literal
	  Array.from(riter, function () { throw 2; });
	} catch (e) { /* empty */ }

	module.exports = function (exec, skipClosing) {
	  if (!skipClosing && !SAFE_CLOSING) return false;
	  var safe = false;
	  try {
	    var arr = [7];
	    var iter = arr[ITERATOR]();
	    iter.next = function () { return { done: safe = true }; };
	    arr[ITERATOR] = function () { return iter; };
	    exec(arr);
	  } catch (e) { /* empty */ }
	  return safe;
	};


/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('difference', __webpack_require__(199));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

	var baseConvert = __webpack_require__(341),
	    util = __webpack_require__(344);

	/**
	 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
	 * version with conversion `options` applied. If `name` is an object its methods
	 * will be converted.
	 *
	 * @param {string} name The name of the function to wrap.
	 * @param {Function} [func] The function to wrap.
	 * @param {Object} [options] The options object. See `baseConvert` for more details.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function convert(name, func, options) {
	  return baseConvert(util, name, func, options);
	}

	module.exports = convert;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

	var mapping = __webpack_require__(342),
	    fallbackHolder = __webpack_require__(343);

	/** Built-in value reference. */
	var push = Array.prototype.push;

	/**
	 * Creates a function, with an arity of `n`, that invokes `func` with the
	 * arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} n The arity of the new function.
	 * @returns {Function} Returns the new function.
	 */
	function baseArity(func, n) {
	  return n == 2
	    ? function(a, b) { return func.apply(undefined, arguments); }
	    : function(a) { return func.apply(undefined, arguments); };
	}

	/**
	 * Creates a function that invokes `func`, with up to `n` arguments, ignoring
	 * any additional arguments.
	 *
	 * @private
	 * @param {Function} func The function to cap arguments for.
	 * @param {number} n The arity cap.
	 * @returns {Function} Returns the new function.
	 */
	function baseAry(func, n) {
	  return n == 2
	    ? function(a, b) { return func(a, b); }
	    : function(a) { return func(a); };
	}

	/**
	 * Creates a clone of `array`.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the cloned array.
	 */
	function cloneArray(array) {
	  var length = array ? array.length : 0,
	      result = Array(length);

	  while (length--) {
	    result[length] = array[length];
	  }
	  return result;
	}

	/**
	 * Creates a function that clones a given object using the assignment `func`.
	 *
	 * @private
	 * @param {Function} func The assignment function.
	 * @returns {Function} Returns the new cloner function.
	 */
	function createCloner(func) {
	  return function(object) {
	    return func({}, object);
	  };
	}

	/**
	 * A specialized version of `_.spread` which flattens the spread array into
	 * the arguments of the invoked `func`.
	 *
	 * @private
	 * @param {Function} func The function to spread arguments over.
	 * @param {number} start The start position of the spread.
	 * @returns {Function} Returns the new function.
	 */
	function flatSpread(func, start) {
	  return function() {
	    var length = arguments.length,
	        lastIndex = length - 1,
	        args = Array(length);

	    while (length--) {
	      args[length] = arguments[length];
	    }
	    var array = args[start],
	        otherArgs = args.slice(0, start);

	    if (array) {
	      push.apply(otherArgs, array);
	    }
	    if (start != lastIndex) {
	      push.apply(otherArgs, args.slice(start + 1));
	    }
	    return func.apply(this, otherArgs);
	  };
	}

	/**
	 * Creates a function that wraps `func` and uses `cloner` to clone the first
	 * argument it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {Function} cloner The function to clone arguments.
	 * @returns {Function} Returns the new immutable function.
	 */
	function wrapImmutable(func, cloner) {
	  return function() {
	    var length = arguments.length;
	    if (!length) {
	      return;
	    }
	    var args = Array(length);
	    while (length--) {
	      args[length] = arguments[length];
	    }
	    var result = args[0] = cloner.apply(undefined, args);
	    func.apply(undefined, args);
	    return result;
	  };
	}

	/**
	 * The base implementation of `convert` which accepts a `util` object of methods
	 * required to perform conversions.
	 *
	 * @param {Object} util The util object.
	 * @param {string} name The name of the function to convert.
	 * @param {Function} func The function to convert.
	 * @param {Object} [options] The options object.
	 * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
	 * @param {boolean} [options.curry=true] Specify currying.
	 * @param {boolean} [options.fixed=true] Specify fixed arity.
	 * @param {boolean} [options.immutable=true] Specify immutable operations.
	 * @param {boolean} [options.rearg=true] Specify rearranging arguments.
	 * @returns {Function|Object} Returns the converted function or object.
	 */
	function baseConvert(util, name, func, options) {
	  var setPlaceholder,
	      isLib = typeof name == 'function',
	      isObj = name === Object(name);

	  if (isObj) {
	    options = func;
	    func = name;
	    name = undefined;
	  }
	  if (func == null) {
	    throw new TypeError;
	  }
	  options || (options = {});

	  var config = {
	    'cap': 'cap' in options ? options.cap : true,
	    'curry': 'curry' in options ? options.curry : true,
	    'fixed': 'fixed' in options ? options.fixed : true,
	    'immutable': 'immutable' in options ? options.immutable : true,
	    'rearg': 'rearg' in options ? options.rearg : true
	  };

	  var forceCurry = ('curry' in options) && options.curry,
	      forceFixed = ('fixed' in options) && options.fixed,
	      forceRearg = ('rearg' in options) && options.rearg,
	      placeholder = isLib ? func : fallbackHolder,
	      pristine = isLib ? func.runInContext() : undefined;

	  var helpers = isLib ? func : {
	    'ary': util.ary,
	    'assign': util.assign,
	    'clone': util.clone,
	    'curry': util.curry,
	    'forEach': util.forEach,
	    'isArray': util.isArray,
	    'isError': util.isError,
	    'isFunction': util.isFunction,
	    'isWeakMap': util.isWeakMap,
	    'iteratee': util.iteratee,
	    'keys': util.keys,
	    'rearg': util.rearg,
	    'toInteger': util.toInteger,
	    'toPath': util.toPath
	  };

	  var ary = helpers.ary,
	      assign = helpers.assign,
	      clone = helpers.clone,
	      curry = helpers.curry,
	      each = helpers.forEach,
	      isArray = helpers.isArray,
	      isError = helpers.isError,
	      isFunction = helpers.isFunction,
	      isWeakMap = helpers.isWeakMap,
	      keys = helpers.keys,
	      rearg = helpers.rearg,
	      toInteger = helpers.toInteger,
	      toPath = helpers.toPath;

	  var aryMethodKeys = keys(mapping.aryMethod);

	  var wrappers = {
	    'castArray': function(castArray) {
	      return function() {
	        var value = arguments[0];
	        return isArray(value)
	          ? castArray(cloneArray(value))
	          : castArray.apply(undefined, arguments);
	      };
	    },
	    'iteratee': function(iteratee) {
	      return function() {
	        var func = arguments[0],
	            arity = arguments[1],
	            result = iteratee(func, arity),
	            length = result.length;

	        if (config.cap && typeof arity == 'number') {
	          arity = arity > 2 ? (arity - 2) : 1;
	          return (length && length <= arity) ? result : baseAry(result, arity);
	        }
	        return result;
	      };
	    },
	    'mixin': function(mixin) {
	      return function(source) {
	        var func = this;
	        if (!isFunction(func)) {
	          return mixin(func, Object(source));
	        }
	        var pairs = [];
	        each(keys(source), function(key) {
	          if (isFunction(source[key])) {
	            pairs.push([key, func.prototype[key]]);
	          }
	        });

	        mixin(func, Object(source));

	        each(pairs, function(pair) {
	          var value = pair[1];
	          if (isFunction(value)) {
	            func.prototype[pair[0]] = value;
	          } else {
	            delete func.prototype[pair[0]];
	          }
	        });
	        return func;
	      };
	    },
	    'nthArg': function(nthArg) {
	      return function(n) {
	        var arity = n < 0 ? 1 : (toInteger(n) + 1);
	        return curry(nthArg(n), arity);
	      };
	    },
	    'rearg': function(rearg) {
	      return function(func, indexes) {
	        var arity = indexes ? indexes.length : 0;
	        return curry(rearg(func, indexes), arity);
	      };
	    },
	    'runInContext': function(runInContext) {
	      return function(context) {
	        return baseConvert(util, runInContext(context), options);
	      };
	    }
	  };

	  /*--------------------------------------------------------------------------*/

	  /**
	   * Casts `func` to a function with an arity capped iteratee if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @returns {Function} Returns the cast function.
	   */
	  function castCap(name, func) {
	    if (config.cap) {
	      var indexes = mapping.iterateeRearg[name];
	      if (indexes) {
	        return iterateeRearg(func, indexes);
	      }
	      var n = !isLib && mapping.iterateeAry[name];
	      if (n) {
	        return iterateeAry(func, n);
	      }
	    }
	    return func;
	  }

	  /**
	   * Casts `func` to a curried function if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @param {number} n The arity of `func`.
	   * @returns {Function} Returns the cast function.
	   */
	  function castCurry(name, func, n) {
	    return (forceCurry || (config.curry && n > 1))
	      ? curry(func, n)
	      : func;
	  }

	  /**
	   * Casts `func` to a fixed arity function if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @param {number} n The arity cap.
	   * @returns {Function} Returns the cast function.
	   */
	  function castFixed(name, func, n) {
	    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
	      var data = mapping.methodSpread[name],
	          start = data && data.start;

	      return start  === undefined ? ary(func, n) : flatSpread(func, start);
	    }
	    return func;
	  }

	  /**
	   * Casts `func` to an rearged function if needed.
	   *
	   * @private
	   * @param {string} name The name of the function to inspect.
	   * @param {Function} func The function to inspect.
	   * @param {number} n The arity of `func`.
	   * @returns {Function} Returns the cast function.
	   */
	  function castRearg(name, func, n) {
	    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))
	      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])
	      : func;
	  }

	  /**
	   * Creates a clone of `object` by `path`.
	   *
	   * @private
	   * @param {Object} object The object to clone.
	   * @param {Array|string} path The path to clone by.
	   * @returns {Object} Returns the cloned object.
	   */
	  function cloneByPath(object, path) {
	    path = toPath(path);

	    var index = -1,
	        length = path.length,
	        lastIndex = length - 1,
	        result = clone(Object(object)),
	        nested = result;

	    while (nested != null && ++index < length) {
	      var key = path[index],
	          value = nested[key];

	      if (value != null &&
	          !(isFunction(value) || isError(value) || isWeakMap(value))) {
	        nested[key] = clone(index == lastIndex ? value : Object(value));
	      }
	      nested = nested[key];
	    }
	    return result;
	  }

	  /**
	   * Converts `lodash` to an immutable auto-curried iteratee-first data-last
	   * version with conversion `options` applied.
	   *
	   * @param {Object} [options] The options object. See `baseConvert` for more details.
	   * @returns {Function} Returns the converted `lodash`.
	   */
	  function convertLib(options) {
	    return _.runInContext.convert(options)(undefined);
	  }

	  /**
	   * Create a converter function for `func` of `name`.
	   *
	   * @param {string} name The name of the function to convert.
	   * @param {Function} func The function to convert.
	   * @returns {Function} Returns the new converter function.
	   */
	  function createConverter(name, func) {
	    var realName = mapping.aliasToReal[name] || name,
	        methodName = mapping.remap[realName] || realName,
	        oldOptions = options;

	    return function(options) {
	      var newUtil = isLib ? pristine : helpers,
	          newFunc = isLib ? pristine[methodName] : func,
	          newOptions = assign(assign({}, oldOptions), options);

	      return baseConvert(newUtil, realName, newFunc, newOptions);
	    };
	  }

	  /**
	   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
	   * arguments, ignoring any additional arguments.
	   *
	   * @private
	   * @param {Function} func The function to cap iteratee arguments for.
	   * @param {number} n The arity cap.
	   * @returns {Function} Returns the new function.
	   */
	  function iterateeAry(func, n) {
	    return overArg(func, function(func) {
	      return typeof func == 'function' ? baseAry(func, n) : func;
	    });
	  }

	  /**
	   * Creates a function that wraps `func` to invoke its iteratee with arguments
	   * arranged according to the specified `indexes` where the argument value at
	   * the first index is provided as the first argument, the argument value at
	   * the second index is provided as the second argument, and so on.
	   *
	   * @private
	   * @param {Function} func The function to rearrange iteratee arguments for.
	   * @param {number[]} indexes The arranged argument indexes.
	   * @returns {Function} Returns the new function.
	   */
	  function iterateeRearg(func, indexes) {
	    return overArg(func, function(func) {
	      var n = indexes.length;
	      return baseArity(rearg(baseAry(func, n), indexes), n);
	    });
	  }

	  /**
	   * Creates a function that invokes `func` with its first argument transformed.
	   *
	   * @private
	   * @param {Function} func The function to wrap.
	   * @param {Function} transform The argument transform.
	   * @returns {Function} Returns the new function.
	   */
	  function overArg(func, transform) {
	    return function() {
	      var length = arguments.length;
	      if (!length) {
	        return func();
	      }
	      var args = Array(length);
	      while (length--) {
	        args[length] = arguments[length];
	      }
	      var index = config.rearg ? 0 : (length - 1);
	      args[index] = transform(args[index]);
	      return func.apply(undefined, args);
	    };
	  }

	  /**
	   * Creates a function that wraps `func` and applys the conversions
	   * rules by `name`.
	   *
	   * @private
	   * @param {string} name The name of the function to wrap.
	   * @param {Function} func The function to wrap.
	   * @returns {Function} Returns the converted function.
	   */
	  function wrap(name, func) {
	    var result,
	        realName = mapping.aliasToReal[name] || name,
	        wrapped = func,
	        wrapper = wrappers[realName];

	    if (wrapper) {
	      wrapped = wrapper(func);
	    }
	    else if (config.immutable) {
	      if (mapping.mutate.array[realName]) {
	        wrapped = wrapImmutable(func, cloneArray);
	      }
	      else if (mapping.mutate.object[realName]) {
	        wrapped = wrapImmutable(func, createCloner(func));
	      }
	      else if (mapping.mutate.set[realName]) {
	        wrapped = wrapImmutable(func, cloneByPath);
	      }
	    }
	    each(aryMethodKeys, function(aryKey) {
	      each(mapping.aryMethod[aryKey], function(otherName) {
	        if (realName == otherName) {
	          var data = mapping.methodSpread[realName],
	              afterRearg = data && data.afterRearg;

	          result = afterRearg
	            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)
	            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);

	          result = castCap(realName, result);
	          result = castCurry(realName, result, aryKey);
	          return false;
	        }
	      });
	      return !result;
	    });

	    result || (result = wrapped);
	    if (result == func) {
	      result = forceCurry ? curry(result, 1) : function() {
	        return func.apply(this, arguments);
	      };
	    }
	    result.convert = createConverter(realName, func);
	    if (mapping.placeholder[realName]) {
	      setPlaceholder = true;
	      result.placeholder = func.placeholder = placeholder;
	    }
	    return result;
	  }

	  /*--------------------------------------------------------------------------*/

	  if (!isObj) {
	    return wrap(name, func);
	  }
	  var _ = func;

	  // Convert methods by ary cap.
	  var pairs = [];
	  each(aryMethodKeys, function(aryKey) {
	    each(mapping.aryMethod[aryKey], function(key) {
	      var func = _[mapping.remap[key] || key];
	      if (func) {
	        pairs.push([key, wrap(key, func)]);
	      }
	    });
	  });

	  // Convert remaining methods.
	  each(keys(_), function(key) {
	    var func = _[key];
	    if (typeof func == 'function') {
	      var length = pairs.length;
	      while (length--) {
	        if (pairs[length][0] == key) {
	          return;
	        }
	      }
	      func.convert = createConverter(key, func);
	      pairs.push([key, func]);
	    }
	  });

	  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
	  each(pairs, function(pair) {
	    _[pair[0]] = pair[1];
	  });

	  _.convert = convertLib;
	  if (setPlaceholder) {
	    _.placeholder = placeholder;
	  }
	  // Assign aliases.
	  each(keys(_), function(key) {
	    each(mapping.realToAlias[key] || [], function(alias) {
	      _[alias] = _[key];
	    });
	  });

	  return _;
	}

	module.exports = baseConvert;


/***/ }),
/* 342 */
/***/ (function(module, exports) {

	/** Used to map aliases to their real names. */
	exports.aliasToReal = {

	  // Lodash aliases.
	  'each': 'forEach',
	  'eachRight': 'forEachRight',
	  'entries': 'toPairs',
	  'entriesIn': 'toPairsIn',
	  'extend': 'assignIn',
	  'extendAll': 'assignInAll',
	  'extendAllWith': 'assignInAllWith',
	  'extendWith': 'assignInWith',
	  'first': 'head',

	  // Methods that are curried variants of others.
	  'conforms': 'conformsTo',
	  'matches': 'isMatch',
	  'property': 'get',

	  // Ramda aliases.
	  '__': 'placeholder',
	  'F': 'stubFalse',
	  'T': 'stubTrue',
	  'all': 'every',
	  'allPass': 'overEvery',
	  'always': 'constant',
	  'any': 'some',
	  'anyPass': 'overSome',
	  'apply': 'spread',
	  'assoc': 'set',
	  'assocPath': 'set',
	  'complement': 'negate',
	  'compose': 'flowRight',
	  'contains': 'includes',
	  'dissoc': 'unset',
	  'dissocPath': 'unset',
	  'dropLast': 'dropRight',
	  'dropLastWhile': 'dropRightWhile',
	  'equals': 'isEqual',
	  'identical': 'eq',
	  'indexBy': 'keyBy',
	  'init': 'initial',
	  'invertObj': 'invert',
	  'juxt': 'over',
	  'omitAll': 'omit',
	  'nAry': 'ary',
	  'path': 'get',
	  'pathEq': 'matchesProperty',
	  'pathOr': 'getOr',
	  'paths': 'at',
	  'pickAll': 'pick',
	  'pipe': 'flow',
	  'pluck': 'map',
	  'prop': 'get',
	  'propEq': 'matchesProperty',
	  'propOr': 'getOr',
	  'props': 'at',
	  'symmetricDifference': 'xor',
	  'symmetricDifferenceBy': 'xorBy',
	  'symmetricDifferenceWith': 'xorWith',
	  'takeLast': 'takeRight',
	  'takeLastWhile': 'takeRightWhile',
	  'unapply': 'rest',
	  'unnest': 'flatten',
	  'useWith': 'overArgs',
	  'where': 'conformsTo',
	  'whereEq': 'isMatch',
	  'zipObj': 'zipObject'
	};

	/** Used to map ary to method names. */
	exports.aryMethod = {
	  '1': [
	    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',
	    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',
	    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',
	    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',
	    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',
	    'uniqueId', 'words', 'zipAll'
	  ],
	  '2': [
	    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',
	    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',
	    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',
	    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',
	    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',
	    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',
	    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',
	    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',
	    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',
	    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',
	    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',
	    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',
	    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',
	    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',
	    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',
	    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',
	    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',
	    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',
	    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',
	    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',
	    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',
	    'zipObjectDeep'
	  ],
	  '3': [
	    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',
	    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',
	    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',
	    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',
	    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',
	    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',
	    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',
	    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',
	    'xorWith', 'zipWith'
	  ],
	  '4': [
	    'fill', 'setWith', 'updateWith'
	  ]
	};

	/** Used to map ary to rearg configs. */
	exports.aryRearg = {
	  '2': [1, 0],
	  '3': [2, 0, 1],
	  '4': [3, 2, 0, 1]
	};

	/** Used to map method names to their iteratee ary. */
	exports.iterateeAry = {
	  'dropRightWhile': 1,
	  'dropWhile': 1,
	  'every': 1,
	  'filter': 1,
	  'find': 1,
	  'findFrom': 1,
	  'findIndex': 1,
	  'findIndexFrom': 1,
	  'findKey': 1,
	  'findLast': 1,
	  'findLastFrom': 1,
	  'findLastIndex': 1,
	  'findLastIndexFrom': 1,
	  'findLastKey': 1,
	  'flatMap': 1,
	  'flatMapDeep': 1,
	  'flatMapDepth': 1,
	  'forEach': 1,
	  'forEachRight': 1,
	  'forIn': 1,
	  'forInRight': 1,
	  'forOwn': 1,
	  'forOwnRight': 1,
	  'map': 1,
	  'mapKeys': 1,
	  'mapValues': 1,
	  'partition': 1,
	  'reduce': 2,
	  'reduceRight': 2,
	  'reject': 1,
	  'remove': 1,
	  'some': 1,
	  'takeRightWhile': 1,
	  'takeWhile': 1,
	  'times': 1,
	  'transform': 2
	};

	/** Used to map method names to iteratee rearg configs. */
	exports.iterateeRearg = {
	  'mapKeys': [1],
	  'reduceRight': [1, 0]
	};

	/** Used to map method names to rearg configs. */
	exports.methodRearg = {
	  'assignInAllWith': [1, 0],
	  'assignInWith': [1, 2, 0],
	  'assignAllWith': [1, 0],
	  'assignWith': [1, 2, 0],
	  'differenceBy': [1, 2, 0],
	  'differenceWith': [1, 2, 0],
	  'getOr': [2, 1, 0],
	  'intersectionBy': [1, 2, 0],
	  'intersectionWith': [1, 2, 0],
	  'isEqualWith': [1, 2, 0],
	  'isMatchWith': [2, 1, 0],
	  'mergeAllWith': [1, 0],
	  'mergeWith': [1, 2, 0],
	  'padChars': [2, 1, 0],
	  'padCharsEnd': [2, 1, 0],
	  'padCharsStart': [2, 1, 0],
	  'pullAllBy': [2, 1, 0],
	  'pullAllWith': [2, 1, 0],
	  'rangeStep': [1, 2, 0],
	  'rangeStepRight': [1, 2, 0],
	  'setWith': [3, 1, 2, 0],
	  'sortedIndexBy': [2, 1, 0],
	  'sortedLastIndexBy': [2, 1, 0],
	  'unionBy': [1, 2, 0],
	  'unionWith': [1, 2, 0],
	  'updateWith': [3, 1, 2, 0],
	  'xorBy': [1, 2, 0],
	  'xorWith': [1, 2, 0],
	  'zipWith': [1, 2, 0]
	};

	/** Used to map method names to spread configs. */
	exports.methodSpread = {
	  'assignAll': { 'start': 0 },
	  'assignAllWith': { 'start': 0 },
	  'assignInAll': { 'start': 0 },
	  'assignInAllWith': { 'start': 0 },
	  'defaultsAll': { 'start': 0 },
	  'defaultsDeepAll': { 'start': 0 },
	  'invokeArgs': { 'start': 2 },
	  'invokeArgsMap': { 'start': 2 },
	  'mergeAll': { 'start': 0 },
	  'mergeAllWith': { 'start': 0 },
	  'partial': { 'start': 1 },
	  'partialRight': { 'start': 1 },
	  'without': { 'start': 1 },
	  'zipAll': { 'start': 0 }
	};

	/** Used to identify methods which mutate arrays or objects. */
	exports.mutate = {
	  'array': {
	    'fill': true,
	    'pull': true,
	    'pullAll': true,
	    'pullAllBy': true,
	    'pullAllWith': true,
	    'pullAt': true,
	    'remove': true,
	    'reverse': true
	  },
	  'object': {
	    'assign': true,
	    'assignAll': true,
	    'assignAllWith': true,
	    'assignIn': true,
	    'assignInAll': true,
	    'assignInAllWith': true,
	    'assignInWith': true,
	    'assignWith': true,
	    'defaults': true,
	    'defaultsAll': true,
	    'defaultsDeep': true,
	    'defaultsDeepAll': true,
	    'merge': true,
	    'mergeAll': true,
	    'mergeAllWith': true,
	    'mergeWith': true,
	  },
	  'set': {
	    'set': true,
	    'setWith': true,
	    'unset': true,
	    'update': true,
	    'updateWith': true
	  }
	};

	/** Used to track methods with placeholder support */
	exports.placeholder = {
	  'bind': true,
	  'bindKey': true,
	  'curry': true,
	  'curryRight': true,
	  'partial': true,
	  'partialRight': true
	};

	/** Used to map real names to their aliases. */
	exports.realToAlias = (function() {
	  var hasOwnProperty = Object.prototype.hasOwnProperty,
	      object = exports.aliasToReal,
	      result = {};

	  for (var key in object) {
	    var value = object[key];
	    if (hasOwnProperty.call(result, value)) {
	      result[value].push(key);
	    } else {
	      result[value] = [key];
	    }
	  }
	  return result;
	}());

	/** Used to map method names to other names. */
	exports.remap = {
	  'assignAll': 'assign',
	  'assignAllWith': 'assignWith',
	  'assignInAll': 'assignIn',
	  'assignInAllWith': 'assignInWith',
	  'curryN': 'curry',
	  'curryRightN': 'curryRight',
	  'defaultsAll': 'defaults',
	  'defaultsDeepAll': 'defaultsDeep',
	  'findFrom': 'find',
	  'findIndexFrom': 'findIndex',
	  'findLastFrom': 'findLast',
	  'findLastIndexFrom': 'findLastIndex',
	  'getOr': 'get',
	  'includesFrom': 'includes',
	  'indexOfFrom': 'indexOf',
	  'invokeArgs': 'invoke',
	  'invokeArgsMap': 'invokeMap',
	  'lastIndexOfFrom': 'lastIndexOf',
	  'mergeAll': 'merge',
	  'mergeAllWith': 'mergeWith',
	  'padChars': 'pad',
	  'padCharsEnd': 'padEnd',
	  'padCharsStart': 'padStart',
	  'propertyOf': 'get',
	  'rangeStep': 'range',
	  'rangeStepRight': 'rangeRight',
	  'restFrom': 'rest',
	  'spreadFrom': 'spread',
	  'trimChars': 'trim',
	  'trimCharsEnd': 'trimEnd',
	  'trimCharsStart': 'trimStart',
	  'zipAll': 'zip'
	};

	/** Used to track methods that skip fixing their arity. */
	exports.skipFixed = {
	  'castArray': true,
	  'flow': true,
	  'flowRight': true,
	  'iteratee': true,
	  'mixin': true,
	  'rearg': true,
	  'runInContext': true
	};

	/** Used to track methods that skip rearranging arguments. */
	exports.skipRearg = {
	  'add': true,
	  'assign': true,
	  'assignIn': true,
	  'bind': true,
	  'bindKey': true,
	  'concat': true,
	  'difference': true,
	  'divide': true,
	  'eq': true,
	  'gt': true,
	  'gte': true,
	  'isEqual': true,
	  'lt': true,
	  'lte': true,
	  'matchesProperty': true,
	  'merge': true,
	  'multiply': true,
	  'overArgs': true,
	  'partial': true,
	  'partialRight': true,
	  'propertyOf': true,
	  'random': true,
	  'range': true,
	  'rangeRight': true,
	  'subtract': true,
	  'zip': true,
	  'zipObject': true,
	  'zipObjectDeep': true
	};


/***/ }),
/* 343 */
/***/ (function(module, exports) {

	/**
	 * The default argument placeholder value for methods.
	 *
	 * @type {Object}
	 */
	module.exports = {};


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = {
	  'ary': __webpack_require__(345),
	  'assign': __webpack_require__(377),
	  'clone': __webpack_require__(381),
	  'curry': __webpack_require__(404),
	  'forEach': __webpack_require__(287),
	  'isArray': __webpack_require__(124),
	  'isError': __webpack_require__(405),
	  'isFunction': __webpack_require__(144),
	  'isWeakMap': __webpack_require__(406),
	  'iteratee': __webpack_require__(407),
	  'keys': __webpack_require__(239),
	  'rearg': __webpack_require__(408),
	  'toInteger': __webpack_require__(220),
	  'toPath': __webpack_require__(411)
	};


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

	var createWrap = __webpack_require__(346);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_ARY_FLAG = 128;

	/**
	 * Creates a function that invokes `func`, with up to `n` arguments,
	 * ignoring any additional arguments.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {Function} func The function to cap arguments for.
	 * @param {number} [n=func.length] The arity cap.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Function} Returns the new capped function.
	 * @example
	 *
	 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
	 * // => [6, 8, 10]
	 */
	function ary(func, n, guard) {
	  n = guard ? undefined : n;
	  n = (func && n == null) ? func.length : n;
	  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
	}

	module.exports = ary;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(347),
	    createBind = __webpack_require__(349),
	    createCurry = __webpack_require__(351),
	    createHybrid = __webpack_require__(352),
	    createPartial = __webpack_require__(375),
	    getData = __webpack_require__(360),
	    mergeData = __webpack_require__(376),
	    setData = __webpack_require__(367),
	    setWrapToString = __webpack_require__(368),
	    toInteger = __webpack_require__(220);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Creates a function that either curries or invokes `func` with optional
	 * `this` binding and partially applied arguments.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags.
	 *    1 - `_.bind`
	 *    2 - `_.bindKey`
	 *    4 - `_.curry` or `_.curryRight` of a bound function
	 *    8 - `_.curry`
	 *   16 - `_.curryRight`
	 *   32 - `_.partial`
	 *   64 - `_.partialRight`
	 *  128 - `_.rearg`
	 *  256 - `_.ary`
	 *  512 - `_.flip`
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to be partially applied.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
	  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
	  if (!isBindKey && typeof func != 'function') {
	    throw new TypeError(FUNC_ERROR_TEXT);
	  }
	  var length = partials ? partials.length : 0;
	  if (!length) {
	    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
	    partials = holders = undefined;
	  }
	  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
	  arity = arity === undefined ? arity : toInteger(arity);
	  length -= holders ? holders.length : 0;

	  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
	    var partialsRight = partials,
	        holdersRight = holders;

	    partials = holders = undefined;
	  }
	  var data = isBindKey ? undefined : getData(func);

	  var newData = [
	    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
	    argPos, ary, arity
	  ];

	  if (data) {
	    mergeData(newData, data);
	  }
	  func = newData[0];
	  bitmask = newData[1];
	  thisArg = newData[2];
	  partials = newData[3];
	  holders = newData[4];
	  arity = newData[9] = newData[9] === undefined
	    ? (isBindKey ? 0 : func.length)
	    : nativeMax(newData[9] - length, 0);

	  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
	    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
	  }
	  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
	    var result = createBind(func, bitmask, thisArg);
	  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
	    result = createCurry(func, bitmask, arity);
	  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
	    result = createPartial(func, bitmask, thisArg, partials);
	  } else {
	    result = createHybrid.apply(undefined, newData);
	  }
	  var setter = data ? baseSetData : setData;
	  return setWrapToString(setter(result, newData), func, bitmask);
	}

	module.exports = createWrap;


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

	var identity = __webpack_require__(185),
	    metaMap = __webpack_require__(348);

	/**
	 * The base implementation of `setData` without support for hot loop shorting.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var baseSetData = !metaMap ? identity : function(func, data) {
	  metaMap.set(func, data);
	  return func;
	};

	module.exports = baseSetData;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

	var WeakMap = __webpack_require__(270);

	/** Used to store function metadata. */
	var metaMap = WeakMap && new WeakMap;

	module.exports = metaMap;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

	var createCtor = __webpack_require__(350),
	    root = __webpack_require__(129);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;

	/**
	 * Creates a function that wraps `func` to invoke it with the optional `this`
	 * binding of `thisArg`.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createBind(func, bitmask, thisArg) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);

	  function wrapper() {
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return fn.apply(isBind ? thisArg : this, arguments);
	  }
	  return wrapper;
	}

	module.exports = createBind;


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(320),
	    isObject = __webpack_require__(145);

	/**
	 * Creates a function that produces an instance of `Ctor` regardless of
	 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
	 *
	 * @private
	 * @param {Function} Ctor The constructor to wrap.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCtor(Ctor) {
	  return function() {
	    // Use a `switch` statement to work with class constructors. See
	    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
	    // for more details.
	    var args = arguments;
	    switch (args.length) {
	      case 0: return new Ctor;
	      case 1: return new Ctor(args[0]);
	      case 2: return new Ctor(args[0], args[1]);
	      case 3: return new Ctor(args[0], args[1], args[2]);
	      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
	      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
	      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
	      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
	    }
	    var thisBinding = baseCreate(Ctor.prototype),
	        result = Ctor.apply(thisBinding, args);

	    // Mimic the constructor's `return` behavior.
	    // See https://es5.github.io/#x13.2.2 for more details.
	    return isObject(result) ? result : thisBinding;
	  };
	}

	module.exports = createCtor;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(179),
	    createCtor = __webpack_require__(350),
	    createHybrid = __webpack_require__(352),
	    createRecurry = __webpack_require__(356),
	    getHolder = __webpack_require__(372),
	    replaceHolders = __webpack_require__(374),
	    root = __webpack_require__(129);

	/**
	 * Creates a function that wraps `func` to enable currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {number} arity The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createCurry(func, bitmask, arity) {
	  var Ctor = createCtor(func);

	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length,
	        placeholder = getHolder(wrapper);

	    while (index--) {
	      args[index] = arguments[index];
	    }
	    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
	      ? []
	      : replaceHolders(args, placeholder);

	    length -= holders.length;
	    if (length < arity) {
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, undefined,
	        args, holders, undefined, undefined, arity - length);
	    }
	    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
	    return apply(fn, this, args);
	  }
	  return wrapper;
	}

	module.exports = createCurry;


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(353),
	    composeArgsRight = __webpack_require__(354),
	    countHolders = __webpack_require__(355),
	    createCtor = __webpack_require__(350),
	    createRecurry = __webpack_require__(356),
	    getHolder = __webpack_require__(372),
	    reorder = __webpack_require__(373),
	    replaceHolders = __webpack_require__(374),
	    root = __webpack_require__(129);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_ARY_FLAG = 128,
	    WRAP_FLIP_FLAG = 512;

	/**
	 * Creates a function that wraps `func` to invoke it with optional `this`
	 * binding of `thisArg`, partial application, and currying.
	 *
	 * @private
	 * @param {Function|string} func The function or method name to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [partialsRight] The arguments to append to those provided
	 *  to the new function.
	 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
	  var isAry = bitmask & WRAP_ARY_FLAG,
	      isBind = bitmask & WRAP_BIND_FLAG,
	      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
	      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
	      isFlip = bitmask & WRAP_FLIP_FLAG,
	      Ctor = isBindKey ? undefined : createCtor(func);

	  function wrapper() {
	    var length = arguments.length,
	        args = Array(length),
	        index = length;

	    while (index--) {
	      args[index] = arguments[index];
	    }
	    if (isCurried) {
	      var placeholder = getHolder(wrapper),
	          holdersCount = countHolders(args, placeholder);
	    }
	    if (partials) {
	      args = composeArgs(args, partials, holders, isCurried);
	    }
	    if (partialsRight) {
	      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
	    }
	    length -= holdersCount;
	    if (isCurried && length < arity) {
	      var newHolders = replaceHolders(args, placeholder);
	      return createRecurry(
	        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
	        args, newHolders, argPos, ary, arity - length
	      );
	    }
	    var thisBinding = isBind ? thisArg : this,
	        fn = isBindKey ? thisBinding[func] : func;

	    length = args.length;
	    if (argPos) {
	      args = reorder(args, argPos);
	    } else if (isFlip && length > 1) {
	      args.reverse();
	    }
	    if (isAry && ary < length) {
	      args.length = ary;
	    }
	    if (this && this !== root && this instanceof wrapper) {
	      fn = Ctor || createCtor(fn);
	    }
	    return fn.apply(thisBinding, args);
	  }
	  return wrapper;
	}

	module.exports = createHybrid;


/***/ }),
/* 353 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * Creates an array that is the composition of partially applied arguments,
	 * placeholders, and provided arguments into a single array of arguments.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to prepend to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgs(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersLength = holders.length,
	      leftIndex = -1,
	      leftLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(leftLength + rangeLength),
	      isUncurried = !isCurried;

	  while (++leftIndex < leftLength) {
	    result[leftIndex] = partials[leftIndex];
	  }
	  while (++argsIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[holders[argsIndex]] = args[argsIndex];
	    }
	  }
	  while (rangeLength--) {
	    result[leftIndex++] = args[argsIndex++];
	  }
	  return result;
	}

	module.exports = composeArgs;


/***/ }),
/* 354 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max;

	/**
	 * This function is like `composeArgs` except that the arguments composition
	 * is tailored for `_.partialRight`.
	 *
	 * @private
	 * @param {Array} args The provided arguments.
	 * @param {Array} partials The arguments to append to those provided.
	 * @param {Array} holders The `partials` placeholder indexes.
	 * @params {boolean} [isCurried] Specify composing for a curried function.
	 * @returns {Array} Returns the new array of composed arguments.
	 */
	function composeArgsRight(args, partials, holders, isCurried) {
	  var argsIndex = -1,
	      argsLength = args.length,
	      holdersIndex = -1,
	      holdersLength = holders.length,
	      rightIndex = -1,
	      rightLength = partials.length,
	      rangeLength = nativeMax(argsLength - holdersLength, 0),
	      result = Array(rangeLength + rightLength),
	      isUncurried = !isCurried;

	  while (++argsIndex < rangeLength) {
	    result[argsIndex] = args[argsIndex];
	  }
	  var offset = argsIndex;
	  while (++rightIndex < rightLength) {
	    result[offset + rightIndex] = partials[rightIndex];
	  }
	  while (++holdersIndex < holdersLength) {
	    if (isUncurried || argsIndex < argsLength) {
	      result[offset + holders[holdersIndex]] = args[argsIndex++];
	    }
	  }
	  return result;
	}

	module.exports = composeArgsRight;


/***/ }),
/* 355 */
/***/ (function(module, exports) {

	/**
	 * Gets the number of `placeholder` occurrences in `array`.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {*} placeholder The placeholder to search for.
	 * @returns {number} Returns the placeholder count.
	 */
	function countHolders(array, placeholder) {
	  var length = array.length,
	      result = 0;

	  while (length--) {
	    if (array[length] === placeholder) {
	      ++result;
	    }
	  }
	  return result;
	}

	module.exports = countHolders;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

	var isLaziable = __webpack_require__(357),
	    setData = __webpack_require__(367),
	    setWrapToString = __webpack_require__(368);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64;

	/**
	 * Creates a function that wraps `func` to continue currying.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {Function} wrapFunc The function to create the `func` wrapper.
	 * @param {*} placeholder The placeholder value.
	 * @param {*} [thisArg] The `this` binding of `func`.
	 * @param {Array} [partials] The arguments to prepend to those provided to
	 *  the new function.
	 * @param {Array} [holders] The `partials` placeholder indexes.
	 * @param {Array} [argPos] The argument positions of the new function.
	 * @param {number} [ary] The arity cap of `func`.
	 * @param {number} [arity] The arity of `func`.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
	  var isCurry = bitmask & WRAP_CURRY_FLAG,
	      newHolders = isCurry ? holders : undefined,
	      newHoldersRight = isCurry ? undefined : holders,
	      newPartials = isCurry ? partials : undefined,
	      newPartialsRight = isCurry ? undefined : partials;

	  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
	  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

	  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
	    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
	  }
	  var newData = [
	    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
	    newHoldersRight, argPos, ary, arity
	  ];

	  var result = wrapFunc.apply(undefined, newData);
	  if (isLaziable(func)) {
	    setData(result, newData);
	  }
	  result.placeholder = placeholder;
	  return setWrapToString(result, func, bitmask);
	}

	module.exports = createRecurry;


/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(358),
	    getData = __webpack_require__(360),
	    getFuncName = __webpack_require__(361),
	    lodash = __webpack_require__(363);

	/**
	 * Checks if `func` has a lazy counterpart.
	 *
	 * @private
	 * @param {Function} func The function to check.
	 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
	 *  else `false`.
	 */
	function isLaziable(func) {
	  var funcName = getFuncName(func),
	      other = lodash[funcName];

	  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
	    return false;
	  }
	  if (func === other) {
	    return true;
	  }
	  var data = getData(other);
	  return !!data && func === data[0];
	}

	module.exports = isLaziable;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(320),
	    baseLodash = __webpack_require__(359);

	/** Used as references for the maximum length and index of an array. */
	var MAX_ARRAY_LENGTH = 4294967295;

	/**
	 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
	 *
	 * @private
	 * @constructor
	 * @param {*} value The value to wrap.
	 */
	function LazyWrapper(value) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__dir__ = 1;
	  this.__filtered__ = false;
	  this.__iteratees__ = [];
	  this.__takeCount__ = MAX_ARRAY_LENGTH;
	  this.__views__ = [];
	}

	// Ensure `LazyWrapper` is an instance of `baseLodash`.
	LazyWrapper.prototype = baseCreate(baseLodash.prototype);
	LazyWrapper.prototype.constructor = LazyWrapper;

	module.exports = LazyWrapper;


/***/ }),
/* 359 */
/***/ (function(module, exports) {

	/**
	 * The function whose prototype chain sequence wrappers inherit from.
	 *
	 * @private
	 */
	function baseLodash() {
	  // No operation performed.
	}

	module.exports = baseLodash;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

	var metaMap = __webpack_require__(348),
	    noop = __webpack_require__(300);

	/**
	 * Gets metadata for `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {*} Returns the metadata for `func`.
	 */
	var getData = !metaMap ? noop : function(func) {
	  return metaMap.get(func);
	};

	module.exports = getData;


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

	var realNames = __webpack_require__(362);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Gets the name of `func`.
	 *
	 * @private
	 * @param {Function} func The function to query.
	 * @returns {string} Returns the function name.
	 */
	function getFuncName(func) {
	  var result = (func.name + ''),
	      array = realNames[result],
	      length = hasOwnProperty.call(realNames, result) ? array.length : 0;

	  while (length--) {
	    var data = array[length],
	        otherFunc = data.func;
	    if (otherFunc == null || otherFunc == func) {
	      return data.name;
	    }
	  }
	  return result;
	}

	module.exports = getFuncName;


/***/ }),
/* 362 */
/***/ (function(module, exports) {

	/** Used to lookup unminified function names. */
	var realNames = {};

	module.exports = realNames;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(358),
	    LodashWrapper = __webpack_require__(364),
	    baseLodash = __webpack_require__(359),
	    isArray = __webpack_require__(124),
	    isObjectLike = __webpack_require__(133),
	    wrapperClone = __webpack_require__(365);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Creates a `lodash` object which wraps `value` to enable implicit method
	 * chain sequences. Methods that operate on and return arrays, collections,
	 * and functions can be chained together. Methods that retrieve a single value
	 * or may return a primitive value will automatically end the chain sequence
	 * and return the unwrapped value. Otherwise, the value must be unwrapped
	 * with `_#value`.
	 *
	 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
	 * enabled using `_.chain`.
	 *
	 * The execution of chained methods is lazy, that is, it's deferred until
	 * `_#value` is implicitly or explicitly called.
	 *
	 * Lazy evaluation allows several methods to support shortcut fusion.
	 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
	 * the creation of intermediate arrays and can greatly reduce the number of
	 * iteratee executions. Sections of a chain sequence qualify for shortcut
	 * fusion if the section is applied to an array and iteratees accept only
	 * one argument. The heuristic for whether a section qualifies for shortcut
	 * fusion is subject to change.
	 *
	 * Chaining is supported in custom builds as long as the `_#value` method is
	 * directly or indirectly included in the build.
	 *
	 * In addition to lodash methods, wrappers have `Array` and `String` methods.
	 *
	 * The wrapper `Array` methods are:
	 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
	 *
	 * The wrapper `String` methods are:
	 * `replace` and `split`
	 *
	 * The wrapper methods that support shortcut fusion are:
	 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
	 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
	 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
	 *
	 * The chainable wrapper methods are:
	 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
	 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
	 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
	 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
	 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
	 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
	 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
	 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
	 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
	 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
	 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
	 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
	 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
	 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
	 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
	 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
	 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
	 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
	 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
	 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
	 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
	 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
	 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
	 * `zipObject`, `zipObjectDeep`, and `zipWith`
	 *
	 * The wrapper methods that are **not** chainable by default are:
	 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
	 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
	 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
	 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
	 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
	 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
	 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
	 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
	 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
	 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
	 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
	 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
	 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
	 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
	 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
	 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
	 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
	 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
	 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
	 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
	 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
	 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
	 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
	 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
	 * `upperFirst`, `value`, and `words`
	 *
	 * @name _
	 * @constructor
	 * @category Seq
	 * @param {*} value The value to wrap in a `lodash` instance.
	 * @returns {Object} Returns the new `lodash` wrapper instance.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var wrapped = _([1, 2, 3]);
	 *
	 * // Returns an unwrapped value.
	 * wrapped.reduce(_.add);
	 * // => 6
	 *
	 * // Returns a wrapped value.
	 * var squares = wrapped.map(square);
	 *
	 * _.isArray(squares);
	 * // => false
	 *
	 * _.isArray(squares.value());
	 * // => true
	 */
	function lodash(value) {
	  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
	    if (value instanceof LodashWrapper) {
	      return value;
	    }
	    if (hasOwnProperty.call(value, '__wrapped__')) {
	      return wrapperClone(value);
	    }
	  }
	  return new LodashWrapper(value);
	}

	// Ensure wrappers are instances of `baseLodash`.
	lodash.prototype = baseLodash.prototype;
	lodash.prototype.constructor = lodash;

	module.exports = lodash;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(320),
	    baseLodash = __webpack_require__(359);

	/**
	 * The base constructor for creating `lodash` wrapper objects.
	 *
	 * @private
	 * @param {*} value The value to wrap.
	 * @param {boolean} [chainAll] Enable explicit method chain sequences.
	 */
	function LodashWrapper(value, chainAll) {
	  this.__wrapped__ = value;
	  this.__actions__ = [];
	  this.__chain__ = !!chainAll;
	  this.__index__ = 0;
	  this.__values__ = undefined;
	}

	LodashWrapper.prototype = baseCreate(baseLodash.prototype);
	LodashWrapper.prototype.constructor = LodashWrapper;

	module.exports = LodashWrapper;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

	var LazyWrapper = __webpack_require__(358),
	    LodashWrapper = __webpack_require__(364),
	    copyArray = __webpack_require__(366);

	/**
	 * Creates a clone of `wrapper`.
	 *
	 * @private
	 * @param {Object} wrapper The wrapper to clone.
	 * @returns {Object} Returns the cloned wrapper.
	 */
	function wrapperClone(wrapper) {
	  if (wrapper instanceof LazyWrapper) {
	    return wrapper.clone();
	  }
	  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
	  result.__actions__ = copyArray(wrapper.__actions__);
	  result.__index__  = wrapper.__index__;
	  result.__values__ = wrapper.__values__;
	  return result;
	}

	module.exports = wrapperClone;


/***/ }),
/* 366 */
/***/ (function(module, exports) {

	/**
	 * Copies the values of `source` to `array`.
	 *
	 * @private
	 * @param {Array} source The array to copy values from.
	 * @param {Array} [array=[]] The array to copy values to.
	 * @returns {Array} Returns `array`.
	 */
	function copyArray(source, array) {
	  var index = -1,
	      length = source.length;

	  array || (array = Array(length));
	  while (++index < length) {
	    array[index] = source[index];
	  }
	  return array;
	}

	module.exports = copyArray;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSetData = __webpack_require__(347),
	    shortOut = __webpack_require__(191);

	/**
	 * Sets metadata for `func`.
	 *
	 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
	 * period of time, it will trip its breaker and transition to an identity
	 * function to avoid garbage collection pauses in V8. See
	 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
	 * for more details.
	 *
	 * @private
	 * @param {Function} func The function to associate metadata with.
	 * @param {*} data The metadata.
	 * @returns {Function} Returns `func`.
	 */
	var setData = shortOut(baseSetData);

	module.exports = setData;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

	var getWrapDetails = __webpack_require__(369),
	    insertWrapDetails = __webpack_require__(370),
	    setToString = __webpack_require__(187),
	    updateWrapDetails = __webpack_require__(371);

	/**
	 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
	 * with wrapper details in a comment at the top of the source body.
	 *
	 * @private
	 * @param {Function} wrapper The function to modify.
	 * @param {Function} reference The reference function.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Function} Returns `wrapper`.
	 */
	function setWrapToString(wrapper, reference, bitmask) {
	  var source = (reference + '');
	  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
	}

	module.exports = setWrapToString;


/***/ }),
/* 369 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
	    reSplitDetails = /,? & /;

	/**
	 * Extracts wrapper details from the `source` body comment.
	 *
	 * @private
	 * @param {string} source The source to inspect.
	 * @returns {Array} Returns the wrapper details.
	 */
	function getWrapDetails(source) {
	  var match = source.match(reWrapDetails);
	  return match ? match[1].split(reSplitDetails) : [];
	}

	module.exports = getWrapDetails;


/***/ }),
/* 370 */
/***/ (function(module, exports) {

	/** Used to match wrap detail comments. */
	var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

	/**
	 * Inserts wrapper `details` in a comment at the top of the `source` body.
	 *
	 * @private
	 * @param {string} source The source to modify.
	 * @returns {Array} details The details to insert.
	 * @returns {string} Returns the modified source.
	 */
	function insertWrapDetails(source, details) {
	  var length = details.length;
	  if (!length) {
	    return source;
	  }
	  var lastIndex = length - 1;
	  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
	  details = details.join(length > 2 ? ', ' : ' ');
	  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
	}

	module.exports = insertWrapDetails;


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEach = __webpack_require__(287),
	    arrayIncludes = __webpack_require__(204);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_CURRY_RIGHT_FLAG = 16,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_PARTIAL_RIGHT_FLAG = 64,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256,
	    WRAP_FLIP_FLAG = 512;

	/** Used to associate wrap methods with their bit flags. */
	var wrapFlags = [
	  ['ary', WRAP_ARY_FLAG],
	  ['bind', WRAP_BIND_FLAG],
	  ['bindKey', WRAP_BIND_KEY_FLAG],
	  ['curry', WRAP_CURRY_FLAG],
	  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
	  ['flip', WRAP_FLIP_FLAG],
	  ['partial', WRAP_PARTIAL_FLAG],
	  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
	  ['rearg', WRAP_REARG_FLAG]
	];

	/**
	 * Updates wrapper `details` based on `bitmask` flags.
	 *
	 * @private
	 * @returns {Array} details The details to modify.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @returns {Array} Returns `details`.
	 */
	function updateWrapDetails(details, bitmask) {
	  arrayEach(wrapFlags, function(pair) {
	    var value = '_.' + pair[0];
	    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
	      details.push(value);
	    }
	  });
	  return details.sort();
	}

	module.exports = updateWrapDetails;


/***/ }),
/* 372 */
/***/ (function(module, exports) {

	/**
	 * Gets the argument placeholder value for `func`.
	 *
	 * @private
	 * @param {Function} func The function to inspect.
	 * @returns {*} Returns the placeholder value.
	 */
	function getHolder(func) {
	  var object = func;
	  return object.placeholder;
	}

	module.exports = getHolder;


/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

	var copyArray = __webpack_require__(366),
	    isIndex = __webpack_require__(174);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;

	/**
	 * Reorder `array` according to the specified indexes where the element at
	 * the first index is assigned as the first element, the element at
	 * the second index is assigned as the second element, and so on.
	 *
	 * @private
	 * @param {Array} array The array to reorder.
	 * @param {Array} indexes The arranged array indexes.
	 * @returns {Array} Returns `array`.
	 */
	function reorder(array, indexes) {
	  var arrLength = array.length,
	      length = nativeMin(indexes.length, arrLength),
	      oldArray = copyArray(array);

	  while (length--) {
	    var index = indexes[length];
	    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
	  }
	  return array;
	}

	module.exports = reorder;


/***/ }),
/* 374 */
/***/ (function(module, exports) {

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';

	/**
	 * Replaces all `placeholder` elements in `array` with an internal placeholder
	 * and returns an array of their indexes.
	 *
	 * @private
	 * @param {Array} array The array to modify.
	 * @param {*} placeholder The placeholder to replace.
	 * @returns {Array} Returns the new array of placeholder indexes.
	 */
	function replaceHolders(array, placeholder) {
	  var index = -1,
	      length = array.length,
	      resIndex = 0,
	      result = [];

	  while (++index < length) {
	    var value = array[index];
	    if (value === placeholder || value === PLACEHOLDER) {
	      array[index] = PLACEHOLDER;
	      result[resIndex++] = index;
	    }
	  }
	  return result;
	}

	module.exports = replaceHolders;


/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

	var apply = __webpack_require__(179),
	    createCtor = __webpack_require__(350),
	    root = __webpack_require__(129);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1;

	/**
	 * Creates a function that wraps `func` to invoke it with the `this` binding
	 * of `thisArg` and `partials` prepended to the arguments it receives.
	 *
	 * @private
	 * @param {Function} func The function to wrap.
	 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
	 * @param {*} thisArg The `this` binding of `func`.
	 * @param {Array} partials The arguments to prepend to those provided to
	 *  the new function.
	 * @returns {Function} Returns the new wrapped function.
	 */
	function createPartial(func, bitmask, thisArg, partials) {
	  var isBind = bitmask & WRAP_BIND_FLAG,
	      Ctor = createCtor(func);

	  function wrapper() {
	    var argsIndex = -1,
	        argsLength = arguments.length,
	        leftIndex = -1,
	        leftLength = partials.length,
	        args = Array(leftLength + argsLength),
	        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

	    while (++leftIndex < leftLength) {
	      args[leftIndex] = partials[leftIndex];
	    }
	    while (argsLength--) {
	      args[leftIndex++] = arguments[++argsIndex];
	    }
	    return apply(fn, isBind ? thisArg : this, args);
	  }
	  return wrapper;
	}

	module.exports = createPartial;


/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

	var composeArgs = __webpack_require__(353),
	    composeArgsRight = __webpack_require__(354),
	    replaceHolders = __webpack_require__(374);

	/** Used as the internal argument placeholder. */
	var PLACEHOLDER = '__lodash_placeholder__';

	/** Used to compose bitmasks for function metadata. */
	var WRAP_BIND_FLAG = 1,
	    WRAP_BIND_KEY_FLAG = 2,
	    WRAP_CURRY_BOUND_FLAG = 4,
	    WRAP_CURRY_FLAG = 8,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256;

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;

	/**
	 * Merges the function metadata of `source` into `data`.
	 *
	 * Merging metadata reduces the number of wrappers used to invoke a function.
	 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
	 * may be applied regardless of execution order. Methods like `_.ary` and
	 * `_.rearg` modify function arguments, making the order in which they are
	 * executed important, preventing the merging of metadata. However, we make
	 * an exception for a safe combined case where curried functions have `_.ary`
	 * and or `_.rearg` applied.
	 *
	 * @private
	 * @param {Array} data The destination metadata.
	 * @param {Array} source The source metadata.
	 * @returns {Array} Returns `data`.
	 */
	function mergeData(data, source) {
	  var bitmask = data[1],
	      srcBitmask = source[1],
	      newBitmask = bitmask | srcBitmask,
	      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

	  var isCombo =
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
	    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
	    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

	  // Exit early if metadata can't be merged.
	  if (!(isCommon || isCombo)) {
	    return data;
	  }
	  // Use source `thisArg` if available.
	  if (srcBitmask & WRAP_BIND_FLAG) {
	    data[2] = source[2];
	    // Set when currying a bound function.
	    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
	  }
	  // Compose partial arguments.
	  var value = source[3];
	  if (value) {
	    var partials = data[3];
	    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
	    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
	  }
	  // Compose partial right arguments.
	  value = source[5];
	  if (value) {
	    partials = data[5];
	    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
	    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
	  }
	  // Use source `argPos` if available.
	  value = source[7];
	  if (value) {
	    data[7] = value;
	  }
	  // Use source `ary` if it's smaller.
	  if (srcBitmask & WRAP_ARY_FLAG) {
	    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
	  }
	  // Use source `arity` if one is not provided.
	  if (data[9] == null) {
	    data[9] = source[9];
	  }
	  // Use source `func` and merge bitmasks.
	  data[0] = source[0];
	  data[1] = newBitmask;

	  return data;
	}

	module.exports = mergeData;


/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(378),
	    keys = __webpack_require__(230);

	/**
	 * The base implementation of `_.assign` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssign(object, source) {
	  return object && copyObject(source, keys(source), object);
	}

	module.exports = baseAssign;


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(379),
	    baseAssignValue = __webpack_require__(380);

	/**
	 * Copies properties of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy properties from.
	 * @param {Array} props The property identifiers to copy.
	 * @param {Object} [object={}] The object to copy properties to.
	 * @param {Function} [customizer] The function to customize copied values.
	 * @returns {Object} Returns `object`.
	 */
	function copyObject(source, props, object, customizer) {
	  var isNew = !object;
	  object || (object = {});

	  var index = -1,
	      length = props.length;

	  while (++index < length) {
	    var key = props[index];

	    var newValue = customizer
	      ? customizer(object[key], source[key], key, object, source)
	      : undefined;

	    if (newValue === undefined) {
	      newValue = source[key];
	    }
	    if (isNew) {
	      baseAssignValue(object, key, newValue);
	    } else {
	      assignValue(object, key, newValue);
	    }
	  }
	  return object;
	}

	module.exports = copyObject;


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(380),
	    eq = __webpack_require__(158);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Assigns `value` to `key` of `object` if the existing value is not equivalent
	 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function assignValue(object, key, value) {
	  var objValue = object[key];
	  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
	      (value === undefined && !(key in object))) {
	    baseAssignValue(object, key, value);
	  }
	}

	module.exports = assignValue;


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

	var defineProperty = __webpack_require__(190);

	/**
	 * The base implementation of `assignValue` and `assignMergeValue` without
	 * value checks.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {string} key The key of the property to assign.
	 * @param {*} value The value to assign.
	 */
	function baseAssignValue(object, key, value) {
	  if (key == '__proto__' && defineProperty) {
	    defineProperty(object, key, {
	      'configurable': true,
	      'enumerable': true,
	      'value': value,
	      'writable': true
	    });
	  } else {
	    object[key] = value;
	  }
	}

	module.exports = baseAssignValue;


/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(382);

	/** Used to compose bitmasks for cloning. */
	var CLONE_SYMBOLS_FLAG = 4;

	/**
	 * Creates a shallow clone of `value`.
	 *
	 * **Note:** This method is loosely based on the
	 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
	 * and supports cloning arrays, array buffers, booleans, date objects, maps,
	 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
	 * arrays. The own enumerable properties of `arguments` objects are cloned
	 * as plain objects. An empty object is returned for uncloneable values such
	 * as error objects, functions, DOM nodes, and WeakMaps.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Lang
	 * @param {*} value The value to clone.
	 * @returns {*} Returns the cloned value.
	 * @see _.cloneDeep
	 * @example
	 *
	 * var objects = [{ 'a': 1 }, { 'b': 2 }];
	 *
	 * var shallow = _.clone(objects);
	 * console.log(shallow[0] === objects[0]);
	 * // => true
	 */
	function clone(value) {
	  return baseClone(value, CLONE_SYMBOLS_FLAG);
	}

	module.exports = clone;


/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

	var Stack = __webpack_require__(247),
	    arrayEach = __webpack_require__(287),
	    assignValue = __webpack_require__(379),
	    baseAssign = __webpack_require__(377),
	    baseAssignIn = __webpack_require__(383),
	    cloneBuffer = __webpack_require__(387),
	    copyArray = __webpack_require__(366),
	    copySymbols = __webpack_require__(388),
	    copySymbolsIn = __webpack_require__(389),
	    getAllKeys = __webpack_require__(262),
	    getAllKeysIn = __webpack_require__(391),
	    getTag = __webpack_require__(266),
	    initCloneArray = __webpack_require__(392),
	    initCloneByTag = __webpack_require__(393),
	    initCloneObject = __webpack_require__(399),
	    isArray = __webpack_require__(124),
	    isBuffer = __webpack_require__(233),
	    isMap = __webpack_require__(400),
	    isObject = __webpack_require__(145),
	    isSet = __webpack_require__(402),
	    keys = __webpack_require__(230);

	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;

	/** `Object#toString` result references. */
	var argsTag = '[object Arguments]',
	    arrayTag = '[object Array]',
	    boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    errorTag = '[object Error]',
	    funcTag = '[object Function]',
	    genTag = '[object GeneratorFunction]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    objectTag = '[object Object]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]',
	    weakMapTag = '[object WeakMap]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/** Used to identify `toStringTag` values supported by `_.clone`. */
	var cloneableTags = {};
	cloneableTags[argsTag] = cloneableTags[arrayTag] =
	cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
	cloneableTags[boolTag] = cloneableTags[dateTag] =
	cloneableTags[float32Tag] = cloneableTags[float64Tag] =
	cloneableTags[int8Tag] = cloneableTags[int16Tag] =
	cloneableTags[int32Tag] = cloneableTags[mapTag] =
	cloneableTags[numberTag] = cloneableTags[objectTag] =
	cloneableTags[regexpTag] = cloneableTags[setTag] =
	cloneableTags[stringTag] = cloneableTags[symbolTag] =
	cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
	cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
	cloneableTags[errorTag] = cloneableTags[funcTag] =
	cloneableTags[weakMapTag] = false;

	/**
	 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
	 * traversed objects.
	 *
	 * @private
	 * @param {*} value The value to clone.
	 * @param {boolean} bitmask The bitmask flags.
	 *  1 - Deep clone
	 *  2 - Flatten inherited properties
	 *  4 - Clone symbols
	 * @param {Function} [customizer] The function to customize cloning.
	 * @param {string} [key] The key of `value`.
	 * @param {Object} [object] The parent object of `value`.
	 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
	 * @returns {*} Returns the cloned value.
	 */
	function baseClone(value, bitmask, customizer, key, object, stack) {
	  var result,
	      isDeep = bitmask & CLONE_DEEP_FLAG,
	      isFlat = bitmask & CLONE_FLAT_FLAG,
	      isFull = bitmask & CLONE_SYMBOLS_FLAG;

	  if (customizer) {
	    result = object ? customizer(value, key, object, stack) : customizer(value);
	  }
	  if (result !== undefined) {
	    return result;
	  }
	  if (!isObject(value)) {
	    return value;
	  }
	  var isArr = isArray(value);
	  if (isArr) {
	    result = initCloneArray(value);
	    if (!isDeep) {
	      return copyArray(value, result);
	    }
	  } else {
	    var tag = getTag(value),
	        isFunc = tag == funcTag || tag == genTag;

	    if (isBuffer(value)) {
	      return cloneBuffer(value, isDeep);
	    }
	    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
	      result = (isFlat || isFunc) ? {} : initCloneObject(value);
	      if (!isDeep) {
	        return isFlat
	          ? copySymbolsIn(value, baseAssignIn(result, value))
	          : copySymbols(value, baseAssign(result, value));
	      }
	    } else {
	      if (!cloneableTags[tag]) {
	        return object ? value : {};
	      }
	      result = initCloneByTag(value, tag, isDeep);
	    }
	  }
	  // Check for circular references and return its corresponding clone.
	  stack || (stack = new Stack);
	  var stacked = stack.get(value);
	  if (stacked) {
	    return stacked;
	  }
	  stack.set(value, result);

	  if (isSet(value)) {
	    value.forEach(function(subValue) {
	      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
	    });

	    return result;
	  }

	  if (isMap(value)) {
	    value.forEach(function(subValue, key) {
	      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
	    });

	    return result;
	  }

	  var keysFunc = isFull
	    ? (isFlat ? getAllKeysIn : getAllKeys)
	    : (isFlat ? keysIn : keys);

	  var props = isArr ? undefined : keysFunc(value);
	  arrayEach(props || value, function(subValue, key) {
	    if (props) {
	      key = subValue;
	      subValue = value[key];
	    }
	    // Recursively populate clone (susceptible to call stack limits).
	    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
	  });
	  return result;
	}

	module.exports = baseClone;


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(378),
	    keysIn = __webpack_require__(384);

	/**
	 * The base implementation of `_.assignIn` without support for multiple sources
	 * or `customizer` functions.
	 *
	 * @private
	 * @param {Object} object The destination object.
	 * @param {Object} source The source object.
	 * @returns {Object} Returns `object`.
	 */
	function baseAssignIn(object, source) {
	  return object && copyObject(source, keysIn(source), object);
	}

	module.exports = baseAssignIn;


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayLikeKeys = __webpack_require__(231),
	    baseKeysIn = __webpack_require__(385),
	    isArrayLike = __webpack_require__(216);

	/**
	 * Creates an array of the own and inherited enumerable property names of `object`.
	 *
	 * **Note:** Non-object values are coerced to objects.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Object
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 *   this.b = 2;
	 * }
	 *
	 * Foo.prototype.c = 3;
	 *
	 * _.keysIn(new Foo);
	 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
	 */
	function keysIn(object) {
	  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
	}

	module.exports = keysIn;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(145),
	    isPrototype = __webpack_require__(240),
	    nativeKeysIn = __webpack_require__(386);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function baseKeysIn(object) {
	  if (!isObject(object)) {
	    return nativeKeysIn(object);
	  }
	  var isProto = isPrototype(object),
	      result = [];

	  for (var key in object) {
	    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = baseKeysIn;


/***/ }),
/* 386 */
/***/ (function(module, exports) {

	/**
	 * This function is like
	 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
	 * except that it includes inherited enumerable properties.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names.
	 */
	function nativeKeysIn(object) {
	  var result = [];
	  if (object != null) {
	    for (var key in Object(object)) {
	      result.push(key);
	    }
	  }
	  return result;
	}

	module.exports = nativeKeysIn;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(129);

	/** Detect free variable `exports`. */
	var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

	/** Detect free variable `module`. */
	var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

	/** Detect the popular CommonJS extension `module.exports`. */
	var moduleExports = freeModule && freeModule.exports === freeExports;

	/** Built-in value references. */
	var Buffer = moduleExports ? root.Buffer : undefined,
	    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

	/**
	 * Creates a clone of  `buffer`.
	 *
	 * @private
	 * @param {Buffer} buffer The buffer to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Buffer} Returns the cloned buffer.
	 */
	function cloneBuffer(buffer, isDeep) {
	  if (isDeep) {
	    return buffer.slice();
	  }
	  var length = buffer.length,
	      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

	  buffer.copy(result);
	  return result;
	}

	module.exports = cloneBuffer;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(234)(module)))

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(378),
	    getSymbols = __webpack_require__(264);

	/**
	 * Copies own symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbols(source, object) {
	  return copyObject(source, getSymbols(source), object);
	}

	module.exports = copySymbols;


/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

	var copyObject = __webpack_require__(378),
	    getSymbolsIn = __webpack_require__(390);

	/**
	 * Copies own and inherited symbols of `source` to `object`.
	 *
	 * @private
	 * @param {Object} source The object to copy symbols from.
	 * @param {Object} [object={}] The object to copy symbols to.
	 * @returns {Object} Returns `object`.
	 */
	function copySymbolsIn(source, object) {
	  return copyObject(source, getSymbolsIn(source), object);
	}

	module.exports = copySymbolsIn;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayPush = __webpack_require__(213),
	    getPrototype = __webpack_require__(302),
	    getSymbols = __webpack_require__(264),
	    stubArray = __webpack_require__(265);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeGetSymbols = Object.getOwnPropertySymbols;

	/**
	 * Creates an array of the own and inherited enumerable symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of symbols.
	 */
	var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
	  var result = [];
	  while (object) {
	    arrayPush(result, getSymbols(object));
	    object = getPrototype(object);
	  }
	  return result;
	};

	module.exports = getSymbolsIn;


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetAllKeys = __webpack_require__(263),
	    getSymbolsIn = __webpack_require__(390),
	    keysIn = __webpack_require__(384);

	/**
	 * Creates an array of own and inherited enumerable property names and
	 * symbols of `object`.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Array} Returns the array of property names and symbols.
	 */
	function getAllKeysIn(object) {
	  return baseGetAllKeys(object, keysIn, getSymbolsIn);
	}

	module.exports = getAllKeysIn;


/***/ }),
/* 392 */
/***/ (function(module, exports) {

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Initializes an array clone.
	 *
	 * @private
	 * @param {Array} array The array to clone.
	 * @returns {Array} Returns the initialized clone.
	 */
	function initCloneArray(array) {
	  var length = array.length,
	      result = new array.constructor(length);

	  // Add properties assigned by `RegExp#exec`.
	  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
	    result.index = array.index;
	    result.input = array.input;
	  }
	  return result;
	}

	module.exports = initCloneArray;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(394),
	    cloneDataView = __webpack_require__(395),
	    cloneRegExp = __webpack_require__(396),
	    cloneSymbol = __webpack_require__(397),
	    cloneTypedArray = __webpack_require__(398);

	/** `Object#toString` result references. */
	var boolTag = '[object Boolean]',
	    dateTag = '[object Date]',
	    mapTag = '[object Map]',
	    numberTag = '[object Number]',
	    regexpTag = '[object RegExp]',
	    setTag = '[object Set]',
	    stringTag = '[object String]',
	    symbolTag = '[object Symbol]';

	var arrayBufferTag = '[object ArrayBuffer]',
	    dataViewTag = '[object DataView]',
	    float32Tag = '[object Float32Array]',
	    float64Tag = '[object Float64Array]',
	    int8Tag = '[object Int8Array]',
	    int16Tag = '[object Int16Array]',
	    int32Tag = '[object Int32Array]',
	    uint8Tag = '[object Uint8Array]',
	    uint8ClampedTag = '[object Uint8ClampedArray]',
	    uint16Tag = '[object Uint16Array]',
	    uint32Tag = '[object Uint32Array]';

	/**
	 * Initializes an object clone based on its `toStringTag`.
	 *
	 * **Note:** This function only supports cloning values with tags of
	 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @param {string} tag The `toStringTag` of the object to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneByTag(object, tag, isDeep) {
	  var Ctor = object.constructor;
	  switch (tag) {
	    case arrayBufferTag:
	      return cloneArrayBuffer(object);

	    case boolTag:
	    case dateTag:
	      return new Ctor(+object);

	    case dataViewTag:
	      return cloneDataView(object, isDeep);

	    case float32Tag: case float64Tag:
	    case int8Tag: case int16Tag: case int32Tag:
	    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
	      return cloneTypedArray(object, isDeep);

	    case mapTag:
	      return new Ctor;

	    case numberTag:
	    case stringTag:
	      return new Ctor(object);

	    case regexpTag:
	      return cloneRegExp(object);

	    case setTag:
	      return new Ctor;

	    case symbolTag:
	      return cloneSymbol(object);
	  }
	}

	module.exports = initCloneByTag;


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

	var Uint8Array = __webpack_require__(258);

	/**
	 * Creates a clone of `arrayBuffer`.
	 *
	 * @private
	 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
	 * @returns {ArrayBuffer} Returns the cloned array buffer.
	 */
	function cloneArrayBuffer(arrayBuffer) {
	  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
	  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
	  return result;
	}

	module.exports = cloneArrayBuffer;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(394);

	/**
	 * Creates a clone of `dataView`.
	 *
	 * @private
	 * @param {Object} dataView The data view to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned data view.
	 */
	function cloneDataView(dataView, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
	  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
	}

	module.exports = cloneDataView;


/***/ }),
/* 396 */
/***/ (function(module, exports) {

	/** Used to match `RegExp` flags from their coerced string values. */
	var reFlags = /\w*$/;

	/**
	 * Creates a clone of `regexp`.
	 *
	 * @private
	 * @param {Object} regexp The regexp to clone.
	 * @returns {Object} Returns the cloned regexp.
	 */
	function cloneRegExp(regexp) {
	  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
	  result.lastIndex = regexp.lastIndex;
	  return result;
	}

	module.exports = cloneRegExp;


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

	var Symbol = __webpack_require__(128);

	/** Used to convert symbols to primitives and strings. */
	var symbolProto = Symbol ? Symbol.prototype : undefined,
	    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

	/**
	 * Creates a clone of the `symbol` object.
	 *
	 * @private
	 * @param {Object} symbol The symbol object to clone.
	 * @returns {Object} Returns the cloned symbol object.
	 */
	function cloneSymbol(symbol) {
	  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
	}

	module.exports = cloneSymbol;


/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

	var cloneArrayBuffer = __webpack_require__(394);

	/**
	 * Creates a clone of `typedArray`.
	 *
	 * @private
	 * @param {Object} typedArray The typed array to clone.
	 * @param {boolean} [isDeep] Specify a deep clone.
	 * @returns {Object} Returns the cloned typed array.
	 */
	function cloneTypedArray(typedArray, isDeep) {
	  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
	  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
	}

	module.exports = cloneTypedArray;


/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

	var baseCreate = __webpack_require__(320),
	    getPrototype = __webpack_require__(302),
	    isPrototype = __webpack_require__(240);

	/**
	 * Initializes an object clone.
	 *
	 * @private
	 * @param {Object} object The object to clone.
	 * @returns {Object} Returns the initialized clone.
	 */
	function initCloneObject(object) {
	  return (typeof object.constructor == 'function' && !isPrototype(object))
	    ? baseCreate(getPrototype(object))
	    : {};
	}

	module.exports = initCloneObject;


/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsMap = __webpack_require__(401),
	    baseUnary = __webpack_require__(210),
	    nodeUtil = __webpack_require__(238);

	/* Node.js helper references. */
	var nodeIsMap = nodeUtil && nodeUtil.isMap;

	/**
	 * Checks if `value` is classified as a `Map` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 * @example
	 *
	 * _.isMap(new Map);
	 * // => true
	 *
	 * _.isMap(new WeakMap);
	 * // => false
	 */
	var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

	module.exports = isMap;


/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(266),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var mapTag = '[object Map]';

	/**
	 * The base implementation of `_.isMap` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
	 */
	function baseIsMap(value) {
	  return isObjectLike(value) && getTag(value) == mapTag;
	}

	module.exports = baseIsMap;


/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIsSet = __webpack_require__(403),
	    baseUnary = __webpack_require__(210),
	    nodeUtil = __webpack_require__(238);

	/* Node.js helper references. */
	var nodeIsSet = nodeUtil && nodeUtil.isSet;

	/**
	 * Checks if `value` is classified as a `Set` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 * @example
	 *
	 * _.isSet(new Set);
	 * // => true
	 *
	 * _.isSet(new WeakSet);
	 * // => false
	 */
	var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

	module.exports = isSet;


/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(266),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var setTag = '[object Set]';

	/**
	 * The base implementation of `_.isSet` without Node.js optimizations.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
	 */
	function baseIsSet(value) {
	  return isObjectLike(value) && getTag(value) == setTag;
	}

	module.exports = baseIsSet;


/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

	var createWrap = __webpack_require__(346);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_CURRY_FLAG = 8;

	/**
	 * Creates a function that accepts arguments of `func` and either invokes
	 * `func` returning its result, if at least `arity` number of arguments have
	 * been provided, or returns a function that accepts the remaining `func`
	 * arguments, and so on. The arity of `func` may be specified if `func.length`
	 * is not sufficient.
	 *
	 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
	 * may be used as a placeholder for provided arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of curried functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 2.0.0
	 * @category Function
	 * @param {Function} func The function to curry.
	 * @param {number} [arity=func.length] The arity of `func`.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Function} Returns the new curried function.
	 * @example
	 *
	 * var abc = function(a, b, c) {
	 *   return [a, b, c];
	 * };
	 *
	 * var curried = _.curry(abc);
	 *
	 * curried(1)(2)(3);
	 * // => [1, 2, 3]
	 *
	 * curried(1, 2)(3);
	 * // => [1, 2, 3]
	 *
	 * curried(1, 2, 3);
	 * // => [1, 2, 3]
	 *
	 * // Curried with placeholders.
	 * curried(1)(_, 3)(2);
	 * // => [1, 2, 3]
	 */
	function curry(func, arity, guard) {
	  arity = guard ? undefined : arity;
	  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
	  result.placeholder = curry.placeholder;
	  return result;
	}

	// Assign default placeholders.
	curry.placeholder = {};

	module.exports = curry;


/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGetTag = __webpack_require__(127),
	    isObjectLike = __webpack_require__(133),
	    isPlainObject = __webpack_require__(301);

	/** `Object#toString` result references. */
	var domExcTag = '[object DOMException]',
	    errorTag = '[object Error]';

	/**
	 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
	 * `SyntaxError`, `TypeError`, or `URIError` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
	 * @example
	 *
	 * _.isError(new Error);
	 * // => true
	 *
	 * _.isError(Error);
	 * // => false
	 */
	function isError(value) {
	  if (!isObjectLike(value)) {
	    return false;
	  }
	  var tag = baseGetTag(value);
	  return tag == errorTag || tag == domExcTag ||
	    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
	}

	module.exports = isError;


/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

	var getTag = __webpack_require__(266),
	    isObjectLike = __webpack_require__(133);

	/** `Object#toString` result references. */
	var weakMapTag = '[object WeakMap]';

	/**
	 * Checks if `value` is classified as a `WeakMap` object.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.3.0
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
	 * @example
	 *
	 * _.isWeakMap(new WeakMap);
	 * // => true
	 *
	 * _.isWeakMap(new Map);
	 * // => false
	 */
	function isWeakMap(value) {
	  return isObjectLike(value) && getTag(value) == weakMapTag;
	}

	module.exports = isWeakMap;


/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClone = __webpack_require__(382),
	    baseIteratee = __webpack_require__(244);

	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1;

	/**
	 * Creates a function that invokes `func` with the arguments of the created
	 * function. If `func` is a property name, the created function returns the
	 * property value for a given element. If `func` is an array or object, the
	 * created function returns `true` for elements that contain the equivalent
	 * source properties, otherwise it returns `false`.
	 *
	 * @static
	 * @since 4.0.0
	 * @memberOf _
	 * @category Util
	 * @param {*} [func=_.identity] The value to convert to a callback.
	 * @returns {Function} Returns the callback.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': true },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
	 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.filter(users, _.iteratee(['user', 'fred']));
	 * // => [{ 'user': 'fred', 'age': 40 }]
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, _.iteratee('user'));
	 * // => ['barney', 'fred']
	 *
	 * // Create custom iteratee shorthands.
	 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
	 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
	 *     return func.test(string);
	 *   };
	 * });
	 *
	 * _.filter(['abc', 'def'], /ef/);
	 * // => ['def']
	 */
	function iteratee(func) {
	  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
	}

	module.exports = iteratee;


/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

	var createWrap = __webpack_require__(346),
	    flatRest = __webpack_require__(409);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_REARG_FLAG = 256;

	/**
	 * Creates a function that invokes `func` with arguments arranged according
	 * to the specified `indexes` where the argument value at the first index is
	 * provided as the first argument, the argument value at the second index is
	 * provided as the second argument, and so on.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Function
	 * @param {Function} func The function to rearrange arguments for.
	 * @param {...(number|number[])} indexes The arranged argument indexes.
	 * @returns {Function} Returns the new function.
	 * @example
	 *
	 * var rearged = _.rearg(function(a, b, c) {
	 *   return [a, b, c];
	 * }, [2, 0, 1]);
	 *
	 * rearged('b', 'c', 'a')
	 * // => ['a', 'b', 'c']
	 */
	var rearg = flatRest(function(func, indexes) {
	  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
	});

	module.exports = rearg;


/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

	var flatten = __webpack_require__(410),
	    overRest = __webpack_require__(186),
	    setToString = __webpack_require__(187);

	/**
	 * A specialized version of `baseRest` which flattens the rest array.
	 *
	 * @private
	 * @param {Function} func The function to apply a rest parameter to.
	 * @returns {Function} Returns the new function.
	 */
	function flatRest(func) {
	  return setToString(overRest(func, undefined, flatten), func + '');
	}

	module.exports = flatRest;


/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(212);

	/**
	 * Flattens `array` a single level deep.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to flatten.
	 * @returns {Array} Returns the new flattened array.
	 * @example
	 *
	 * _.flatten([1, [2, [3, [4]], 5]]);
	 * // => [1, 2, [3, [4]], 5]
	 */
	function flatten(array) {
	  var length = array == null ? 0 : array.length;
	  return length ? baseFlatten(array, 1) : [];
	}

	module.exports = flatten;


/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(171),
	    copyArray = __webpack_require__(366),
	    isArray = __webpack_require__(124),
	    isSymbol = __webpack_require__(126),
	    stringToPath = __webpack_require__(134),
	    toKey = __webpack_require__(176),
	    toString = __webpack_require__(169);

	/**
	 * Converts `value` to a property path array.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Util
	 * @param {*} value The value to convert.
	 * @returns {Array} Returns the new property path array.
	 * @example
	 *
	 * _.toPath('a.b.c');
	 * // => ['a', 'b', 'c']
	 *
	 * _.toPath('a[0].b.c');
	 * // => ['a', '0', 'b', 'c']
	 */
	function toPath(value) {
	  if (isArray(value)) {
	    return arrayMap(value, toKey);
	  }
	  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
	}

	module.exports = toPath;


/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('trim', __webpack_require__(413));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

	var baseToString = __webpack_require__(170),
	    castSlice = __webpack_require__(414),
	    charsEndIndex = __webpack_require__(415),
	    charsStartIndex = __webpack_require__(416),
	    stringToArray = __webpack_require__(417),
	    toString = __webpack_require__(169);

	/** Used to match leading and trailing whitespace. */
	var reTrim = /^\s+|\s+$/g;

	/**
	 * Removes leading and trailing whitespace or specified characters from `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to trim.
	 * @param {string} [chars=whitespace] The characters to trim.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {string} Returns the trimmed string.
	 * @example
	 *
	 * _.trim('  abc  ');
	 * // => 'abc'
	 *
	 * _.trim('-_-abc-_-', '_-');
	 * // => 'abc'
	 *
	 * _.map(['  foo  ', '  bar  '], _.trim);
	 * // => ['foo', 'bar']
	 */
	function trim(string, chars, guard) {
	  string = toString(string);
	  if (string && (guard || chars === undefined)) {
	    return string.replace(reTrim, '');
	  }
	  if (!string || !(chars = baseToString(chars))) {
	    return string;
	  }
	  var strSymbols = stringToArray(string),
	      chrSymbols = stringToArray(chars),
	      start = charsStartIndex(strSymbols, chrSymbols),
	      end = charsEndIndex(strSymbols, chrSymbols) + 1;

	  return castSlice(strSymbols, start, end).join('');
	}

	module.exports = trim;


/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(183);

	/**
	 * Casts `array` to a slice if it's needed.
	 *
	 * @private
	 * @param {Array} array The array to inspect.
	 * @param {number} start The start position.
	 * @param {number} [end=array.length] The end position.
	 * @returns {Array} Returns the cast slice.
	 */
	function castSlice(array, start, end) {
	  var length = array.length;
	  end = end === undefined ? length : end;
	  return (!start && end >= length) ? array : baseSlice(array, start, end);
	}

	module.exports = castSlice;


/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(205);

	/**
	 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the last unmatched string symbol.
	 */
	function charsEndIndex(strSymbols, chrSymbols) {
	  var index = strSymbols.length;

	  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}

	module.exports = charsEndIndex;


/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

	var baseIndexOf = __webpack_require__(205);

	/**
	 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
	 * that is not found in the character symbols.
	 *
	 * @private
	 * @param {Array} strSymbols The string symbols to inspect.
	 * @param {Array} chrSymbols The character symbols to find.
	 * @returns {number} Returns the index of the first unmatched string symbol.
	 */
	function charsStartIndex(strSymbols, chrSymbols) {
	  var index = -1,
	      length = strSymbols.length;

	  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
	  return index;
	}

	module.exports = charsStartIndex;


/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

	var asciiToArray = __webpack_require__(418),
	    hasUnicode = __webpack_require__(419),
	    unicodeToArray = __webpack_require__(420);

	/**
	 * Converts `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function stringToArray(string) {
	  return hasUnicode(string)
	    ? unicodeToArray(string)
	    : asciiToArray(string);
	}

	module.exports = stringToArray;


/***/ }),
/* 418 */
/***/ (function(module, exports) {

	/**
	 * Converts an ASCII `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function asciiToArray(string) {
	  return string.split('');
	}

	module.exports = asciiToArray;


/***/ }),
/* 419 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';

	/** Used to compose unicode capture groups. */
	var rsZWJ = '\\u200d';

	/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
	var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

	/**
	 * Checks if `string` contains Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
	 */
	function hasUnicode(string) {
	  return reHasUnicode.test(string);
	}

	module.exports = hasUnicode;


/***/ }),
/* 420 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsVarRange = '\\ufe0e\\ufe0f';

	/** Used to compose unicode capture groups. */
	var rsAstral = '[' + rsAstralRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsZWJ = '\\u200d';

	/** Used to compose unicode regexes. */
	var reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

	/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
	var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

	/**
	 * Converts a Unicode `string` to an array.
	 *
	 * @private
	 * @param {string} string The string to convert.
	 * @returns {Array} Returns the converted array.
	 */
	function unicodeToArray(string) {
	  return string.match(reUnicode) || [];
	}

	module.exports = unicodeToArray;


/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('isObject', __webpack_require__(145), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 422 */
/***/ (function(module, exports) {

	module.exports = {
	  'cap': false,
	  'curry': false,
	  'fixed': false,
	  'immutable': false,
	  'rearg': false
	};


/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('pick', __webpack_require__(424));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

	var basePick = __webpack_require__(425),
	    flatRest = __webpack_require__(409);

	/**
	 * Creates an object composed of the picked `object` properties.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to pick.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.pick(object, ['a', 'c']);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var pick = flatRest(function(object, paths) {
	  return object == null ? {} : basePick(object, paths);
	});

	module.exports = pick;


/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

	var basePickBy = __webpack_require__(426),
	    hasIn = __webpack_require__(276);

	/**
	 * The base implementation of `_.pick` without support for individual
	 * property identifiers.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @returns {Object} Returns the new object.
	 */
	function basePick(object, paths) {
	  return basePickBy(object, paths, function(value, path) {
	    return hasIn(object, path);
	  });
	}

	module.exports = basePick;


/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

	var baseGet = __webpack_require__(182),
	    baseSet = __webpack_require__(427),
	    castPath = __webpack_require__(123);

	/**
	 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Object} object The source object.
	 * @param {string[]} paths The property paths to pick.
	 * @param {Function} predicate The function invoked per property.
	 * @returns {Object} Returns the new object.
	 */
	function basePickBy(object, paths, predicate) {
	  var index = -1,
	      length = paths.length,
	      result = {};

	  while (++index < length) {
	    var path = paths[index],
	        value = baseGet(object, path);

	    if (predicate(value, path)) {
	      baseSet(result, castPath(path, object), value);
	    }
	  }
	  return result;
	}

	module.exports = basePickBy;


/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(379),
	    castPath = __webpack_require__(123),
	    isIndex = __webpack_require__(174),
	    isObject = __webpack_require__(145),
	    toKey = __webpack_require__(176);

	/**
	 * The base implementation of `_.set`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The path of the property to set.
	 * @param {*} value The value to set.
	 * @param {Function} [customizer] The function to customize path creation.
	 * @returns {Object} Returns `object`.
	 */
	function baseSet(object, path, value, customizer) {
	  if (!isObject(object)) {
	    return object;
	  }
	  path = castPath(path, object);

	  var index = -1,
	      length = path.length,
	      lastIndex = length - 1,
	      nested = object;

	  while (nested != null && ++index < length) {
	    var key = toKey(path[index]),
	        newValue = value;

	    if (index != lastIndex) {
	      var objValue = nested[key];
	      newValue = customizer ? customizer(objValue, key, nested) : undefined;
	      if (newValue === undefined) {
	        newValue = isObject(objValue)
	          ? objValue
	          : (isIndex(path[index + 1]) ? [] : {});
	      }
	    }
	    assignValue(nested, key, newValue);
	    nested = nested[key];
	  }
	  return object;
	}

	module.exports = baseSet;


/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('keys', __webpack_require__(230), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('isPlainObject', __webpack_require__(301), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('isFunction', __webpack_require__(144), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('compact', __webpack_require__(432), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 432 */
/***/ (function(module, exports) {

	/**
	 * Creates an array with all falsey values removed. The values `false`, `null`,
	 * `0`, `""`, `undefined`, and `NaN` are falsey.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to compact.
	 * @returns {Array} Returns the new array of filtered values.
	 * @example
	 *
	 * _.compact([0, 1, false, 2, '', 3]);
	 * // => [1, 2, 3]
	 */
	function compact(array) {
	  var index = -1,
	      length = array == null ? 0 : array.length,
	      resIndex = 0,
	      result = [];

	  while (++index < length) {
	    var value = array[index];
	    if (value) {
	      result[resIndex++] = value;
	    }
	  }
	  return result;
	}

	module.exports = compact;


/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('take', __webpack_require__(434));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(183),
	    toInteger = __webpack_require__(220);

	/**
	 * Creates a slice of `array` with `n` elements taken from the beginning.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @param {number} [n=1] The number of elements to take.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Array} Returns the slice of `array`.
	 * @example
	 *
	 * _.take([1, 2, 3]);
	 * // => [1]
	 *
	 * _.take([1, 2, 3], 2);
	 * // => [1, 2]
	 *
	 * _.take([1, 2, 3], 5);
	 * // => [1, 2, 3]
	 *
	 * _.take([1, 2, 3], 0);
	 * // => []
	 */
	function take(array, n, guard) {
	  if (!(array && array.length)) {
	    return [];
	  }
	  n = (guard || n === undefined) ? 1 : toInteger(n);
	  return baseSlice(array, 0, n < 0 ? 0 : n);
	}

	module.exports = take;


/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('sortBy', __webpack_require__(436));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(212),
	    baseOrderBy = __webpack_require__(437),
	    baseRest = __webpack_require__(184),
	    isIterateeCall = __webpack_require__(327);

	/**
	 * Creates an array of elements, sorted in ascending order by the results of
	 * running each element in a collection thru each iteratee. This method
	 * performs a stable sort, that is, it preserves the original sort order of
	 * equal elements. The iteratees are invoked with one argument: (value).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {...(Function|Function[])} [iteratees=[_.identity]]
	 *  The iteratees to sort by.
	 * @returns {Array} Returns the new sorted array.
	 * @example
	 *
	 * var users = [
	 *   { 'user': 'fred',   'age': 48 },
	 *   { 'user': 'barney', 'age': 36 },
	 *   { 'user': 'fred',   'age': 40 },
	 *   { 'user': 'barney', 'age': 34 }
	 * ];
	 *
	 * _.sortBy(users, [function(o) { return o.user; }]);
	 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
	 *
	 * _.sortBy(users, ['user', 'age']);
	 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
	 */
	var sortBy = baseRest(function(collection, iteratees) {
	  if (collection == null) {
	    return [];
	  }
	  var length = iteratees.length;
	  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
	    iteratees = [];
	  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
	    iteratees = [iteratees[0]];
	  }
	  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
	});

	module.exports = sortBy;


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(171),
	    baseIteratee = __webpack_require__(244),
	    baseMap = __webpack_require__(438),
	    baseSortBy = __webpack_require__(439),
	    baseUnary = __webpack_require__(210),
	    compareMultiple = __webpack_require__(440),
	    identity = __webpack_require__(185);

	/**
	 * The base implementation of `_.orderBy` without param guards.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
	 * @param {string[]} orders The sort orders of `iteratees`.
	 * @returns {Array} Returns the new sorted array.
	 */
	function baseOrderBy(collection, iteratees, orders) {
	  var index = -1;
	  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

	  var result = baseMap(collection, function(value, key, collection) {
	    var criteria = arrayMap(iteratees, function(iteratee) {
	      return iteratee(value);
	    });
	    return { 'criteria': criteria, 'index': ++index, 'value': value };
	  });

	  return baseSortBy(result, function(object, other) {
	    return compareMultiple(object, other, orders);
	  });
	}

	module.exports = baseOrderBy;


/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(226),
	    isArrayLike = __webpack_require__(216);

	/**
	 * The base implementation of `_.map` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 */
	function baseMap(collection, iteratee) {
	  var index = -1,
	      result = isArrayLike(collection) ? Array(collection.length) : [];

	  baseEach(collection, function(value, key, collection) {
	    result[++index] = iteratee(value, key, collection);
	  });
	  return result;
	}

	module.exports = baseMap;


/***/ }),
/* 439 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sortBy` which uses `comparer` to define the
	 * sort order of `array` and replaces criteria objects with their corresponding
	 * values.
	 *
	 * @private
	 * @param {Array} array The array to sort.
	 * @param {Function} comparer The function to define sort order.
	 * @returns {Array} Returns `array`.
	 */
	function baseSortBy(array, comparer) {
	  var length = array.length;

	  array.sort(comparer);
	  while (length--) {
	    array[length] = array[length].value;
	  }
	  return array;
	}

	module.exports = baseSortBy;


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

	var compareAscending = __webpack_require__(441);

	/**
	 * Used by `_.orderBy` to compare multiple properties of a value to another
	 * and stable sort them.
	 *
	 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
	 * specify an order of "desc" for descending or "asc" for ascending sort order
	 * of corresponding values.
	 *
	 * @private
	 * @param {Object} object The object to compare.
	 * @param {Object} other The other object to compare.
	 * @param {boolean[]|string[]} orders The order to sort by for each property.
	 * @returns {number} Returns the sort order indicator for `object`.
	 */
	function compareMultiple(object, other, orders) {
	  var index = -1,
	      objCriteria = object.criteria,
	      othCriteria = other.criteria,
	      length = objCriteria.length,
	      ordersLength = orders.length;

	  while (++index < length) {
	    var result = compareAscending(objCriteria[index], othCriteria[index]);
	    if (result) {
	      if (index >= ordersLength) {
	        return result;
	      }
	      var order = orders[index];
	      return result * (order == 'desc' ? -1 : 1);
	    }
	  }
	  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
	  // that causes it, under certain circumstances, to provide the same value for
	  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
	  // for more details.
	  //
	  // This also ensures a stable sort in V8 and other engines.
	  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
	  return object.index - other.index;
	}

	module.exports = compareMultiple;


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(126);

	/**
	 * Compares values to sort them in ascending order.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {number} Returns the sort order indicator for `value`.
	 */
	function compareAscending(value, other) {
	  if (value !== other) {
	    var valIsDefined = value !== undefined,
	        valIsNull = value === null,
	        valIsReflexive = value === value,
	        valIsSymbol = isSymbol(value);

	    var othIsDefined = other !== undefined,
	        othIsNull = other === null,
	        othIsReflexive = other === other,
	        othIsSymbol = isSymbol(other);

	    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
	        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
	        (valIsNull && othIsDefined && othIsReflexive) ||
	        (!valIsDefined && othIsReflexive) ||
	        !valIsReflexive) {
	      return 1;
	    }
	    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
	        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
	        (othIsNull && valIsDefined && valIsReflexive) ||
	        (!othIsDefined && valIsReflexive) ||
	        !othIsReflexive) {
	      return -1;
	    }
	  }
	  return 0;
	}

	module.exports = compareAscending;


/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('sum', __webpack_require__(443), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSum = __webpack_require__(444),
	    identity = __webpack_require__(185);

	/**
	 * Computes the sum of the values in `array`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.4.0
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @returns {number} Returns the sum.
	 * @example
	 *
	 * _.sum([4, 2, 8, 6]);
	 * // => 20
	 */
	function sum(array) {
	  return (array && array.length)
	    ? baseSum(array, identity)
	    : 0;
	}

	module.exports = sum;


/***/ }),
/* 444 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.sum` and `_.sumBy` without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @returns {number} Returns the sum.
	 */
	function baseSum(array, iteratee) {
	  var result,
	      index = -1,
	      length = array.length;

	  while (++index < length) {
	    var current = iteratee(array[index]);
	    if (current !== undefined) {
	      result = result === undefined ? current : (result + current);
	    }
	  }
	  return result;
	}

	module.exports = baseSum;


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('min', __webpack_require__(446), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

	var baseExtremum = __webpack_require__(447),
	    baseLt = __webpack_require__(448),
	    identity = __webpack_require__(185);

	/**
	 * Computes the minimum value of `array`. If `array` is empty or falsey,
	 * `undefined` is returned.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Math
	 * @param {Array} array The array to iterate over.
	 * @returns {*} Returns the minimum value.
	 * @example
	 *
	 * _.min([4, 2, 8, 6]);
	 * // => 2
	 *
	 * _.min([]);
	 * // => undefined
	 */
	function min(array) {
	  return (array && array.length)
	    ? baseExtremum(array, identity, baseLt)
	    : undefined;
	}

	module.exports = min;


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

	var isSymbol = __webpack_require__(126);

	/**
	 * The base implementation of methods like `_.max` and `_.min` which accepts a
	 * `comparator` to determine the extremum value.
	 *
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} iteratee The iteratee invoked per iteration.
	 * @param {Function} comparator The comparator used to compare values.
	 * @returns {*} Returns the extremum value.
	 */
	function baseExtremum(array, iteratee, comparator) {
	  var index = -1,
	      length = array.length;

	  while (++index < length) {
	    var value = array[index],
	        current = iteratee(value);

	    if (current != null && (computed === undefined
	          ? (current === current && !isSymbol(current))
	          : comparator(current, computed)
	        )) {
	      var computed = current,
	          result = value;
	    }
	  }
	  return result;
	}

	module.exports = baseExtremum;


/***/ }),
/* 448 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.lt` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {*} value The value to compare.
	 * @param {*} other The other value to compare.
	 * @returns {boolean} Returns `true` if `value` is less than `other`,
	 *  else `false`.
	 */
	function baseLt(value, other) {
	  return value < other;
	}

	module.exports = baseLt;


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('map', __webpack_require__(450));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(171),
	    baseIteratee = __webpack_require__(244),
	    baseMap = __webpack_require__(438),
	    isArray = __webpack_require__(124);

	/**
	 * Creates an array of values by running each element in `collection` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
	 *
	 * The guarded methods are:
	 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
	 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
	 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
	 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Array} Returns the new mapped array.
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * _.map([4, 8], square);
	 * // => [16, 64]
	 *
	 * _.map({ 'a': 4, 'b': 8 }, square);
	 * // => [16, 64] (iteration order is not guaranteed)
	 *
	 * var users = [
	 *   { 'user': 'barney' },
	 *   { 'user': 'fred' }
	 * ];
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.map(users, 'user');
	 * // => ['barney', 'fred']
	 */
	function map(collection, iteratee) {
	  var func = isArray(collection) ? arrayMap : baseMap;
	  return func(collection, baseIteratee(iteratee, 3));
	}

	module.exports = map;


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('flow', __webpack_require__(452));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

	var createFlow = __webpack_require__(453);

	/**
	 * Creates a function that returns the result of invoking the given functions
	 * with the `this` binding of the created function, where each successive
	 * invocation is supplied the return value of the previous.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Util
	 * @param {...(Function|Function[])} [funcs] The functions to invoke.
	 * @returns {Function} Returns the new composite function.
	 * @see _.flowRight
	 * @example
	 *
	 * function square(n) {
	 *   return n * n;
	 * }
	 *
	 * var addSquare = _.flow([_.add, square]);
	 * addSquare(1, 2);
	 * // => 9
	 */
	var flow = createFlow();

	module.exports = flow;


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

	var LodashWrapper = __webpack_require__(364),
	    flatRest = __webpack_require__(409),
	    getData = __webpack_require__(360),
	    getFuncName = __webpack_require__(361),
	    isArray = __webpack_require__(124),
	    isLaziable = __webpack_require__(357);

	/** Error message constants. */
	var FUNC_ERROR_TEXT = 'Expected a function';

	/** Used to compose bitmasks for function metadata. */
	var WRAP_CURRY_FLAG = 8,
	    WRAP_PARTIAL_FLAG = 32,
	    WRAP_ARY_FLAG = 128,
	    WRAP_REARG_FLAG = 256;

	/**
	 * Creates a `_.flow` or `_.flowRight` function.
	 *
	 * @private
	 * @param {boolean} [fromRight] Specify iterating from right to left.
	 * @returns {Function} Returns the new flow function.
	 */
	function createFlow(fromRight) {
	  return flatRest(function(funcs) {
	    var length = funcs.length,
	        index = length,
	        prereq = LodashWrapper.prototype.thru;

	    if (fromRight) {
	      funcs.reverse();
	    }
	    while (index--) {
	      var func = funcs[index];
	      if (typeof func != 'function') {
	        throw new TypeError(FUNC_ERROR_TEXT);
	      }
	      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
	        var wrapper = new LodashWrapper([], true);
	      }
	    }
	    index = wrapper ? index : length;
	    while (++index < length) {
	      func = funcs[index];

	      var funcName = getFuncName(func),
	          data = funcName == 'wrapper' ? getData(func) : undefined;

	      if (data && isLaziable(data[0]) &&
	            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
	            !data[4].length && data[9] == 1
	          ) {
	        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
	      } else {
	        wrapper = (func.length == 1 && isLaziable(func))
	          ? wrapper[funcName]()
	          : wrapper.thru(func);
	      }
	    }
	    return function() {
	      var args = arguments,
	          value = args[0];

	      if (wrapper && args.length == 1 && isArray(value)) {
	        return wrapper.plant(value).value();
	      }
	      var index = 0,
	          result = length ? funcs[index].apply(this, args) : value;

	      while (++index < length) {
	        result = funcs[index].call(this, result);
	      }
	      return result;
	    };
	  });
	}

	module.exports = createFlow;


/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('includes', __webpack_require__(311));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('isNil', __webpack_require__(306), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isPrivate = exports.isChild = exports.isParent = exports.isModule = exports.isView = exports.isElement = exports.isCollection = exports.isAddon = exports.isType = exports.isMeta = exports.TYPES = undefined;

	var _startsWith2 = __webpack_require__(457);

	var _startsWith3 = _interopRequireDefault(_startsWith2);

	var _has2 = __webpack_require__(458);

	var _has3 = _interopRequireDefault(_has2);

	var _eq2 = __webpack_require__(459);

	var _eq3 = _interopRequireDefault(_eq2);

	var _flow2 = __webpack_require__(451);

	var _flow3 = _interopRequireDefault(_flow2);

	var _curry2 = __webpack_require__(460);

	var _curry3 = _interopRequireDefault(_curry2);

	var _get2 = __webpack_require__(461);

	var _get3 = _interopRequireDefault(_get2);

	var _includes2 = __webpack_require__(454);

	var _includes3 = _interopRequireDefault(_includes2);

	var _values2 = __webpack_require__(462);

	var _values3 = _interopRequireDefault(_values2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var TYPES = exports.TYPES = {
	  ADDON: 'addon',
	  BEHAVIOR: 'behavior',
	  COLLECTION: 'collection',
	  ELEMENT: 'element',
	  VIEW: 'view',
	  MODULE: 'module'
	};

	var TYPE_VALUES = (0, _values3.default)(TYPES);

	/**
	 * Determine if an object qualifies as a META object.
	 * It must have the required keys and valid values.
	 * @private
	 * @param {Object} _meta A proposed component _meta object.
	 * @returns {Boolean}
	 */
	var isMeta = exports.isMeta = function isMeta(_meta) {
	  return (0, _includes3.default)((0, _get3.default)('type', _meta), TYPE_VALUES);
	};

	/**
	 * Extract a component's _meta object and optional key.
	 * Handles literal _meta objects, classes with _meta, objects with _meta
	 * @private
	 * @param {function|object} metaArg A class, a component instance, or meta object..
	 * @returns {object|string|undefined}
	 */
	var getMeta = function getMeta(metaArg) {
	  // literal
	  if (isMeta(metaArg)) return metaArg;

	  // from prop
	  else if (isMeta((0, _get3.default)('_meta', metaArg))) return metaArg._meta;

	    // from class
	    else if (isMeta((0, _get3.default)('constructor._meta', metaArg))) return metaArg.constructor._meta;
	};

	var metaHasKeyValue = (0, _curry3.default)(function (key, val, metaArg) {
	  return (0, _flow3.default)(getMeta, (0, _get3.default)(key), (0, _eq3.default)(val))(metaArg);
	});
	var isType = exports.isType = metaHasKeyValue('type');

	// ----------------------------------------
	// Export
	// ----------------------------------------

	// type
	var isAddon = exports.isAddon = isType(TYPES.ADDON);
	var isCollection = exports.isCollection = isType(TYPES.COLLECTION);
	var isElement = exports.isElement = isType(TYPES.ELEMENT);
	var isView = exports.isView = isType(TYPES.VIEW);
	var isModule = exports.isModule = isType(TYPES.MODULE);

	// parent
	var isParent = exports.isParent = (0, _flow3.default)(getMeta, (0, _has3.default)('parent'), (0, _eq3.default)(false));
	var isChild = exports.isChild = (0, _flow3.default)(getMeta, (0, _has3.default)('parent'));

	// other
	var isPrivate = exports.isPrivate = (0, _flow3.default)(getMeta, (0, _get3.default)('name'), (0, _startsWith3.default)('_'));

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('startsWith', __webpack_require__(218));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('has', __webpack_require__(120));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('eq', __webpack_require__(158));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('curry', __webpack_require__(404));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('get', __webpack_require__(275));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('values', __webpack_require__(312), __webpack_require__(422));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ALL_ICONS_IN_ALL_CONTEXTS = exports.COMPONENT_CONTEXT_SPECIFIC_ICONS = exports.ICONS_AND_ALIASES = exports.ICON_ALIASES = exports.ICONS = exports.NETWORKS_AND_WEBSITE_ICONS = exports.PAYMENT_OPTIONS_ICONS = exports.CURRENCY_ICONS = exports.TEXT_EDITOR_ICONS = exports.TABLES_ICONS = exports.MAP_LOCATIONS_TRANSPORTATION_ICONS = exports.AUDIO_ICONS = exports.RATING_ICONS = exports.TECHNOLOGIES_ICONS = exports.FILE_SYSTEM_ICONS = exports.COMPUTER_ICONS = exports.MOBILE_ICONS = exports.POINTERS_ICONS = exports.MEDIA_ICONS = exports.ITEM_SELECTION_ICONS = exports.SHAPES_ICONS = exports.LITERAL_OBJECTS_ICONS = exports.VIEW_ADJUSTMENT_ICONS = exports.ACCESSIBILITY_ICONS = exports.GENDER_SEXUALITY_ICONS = exports.USERS_ICONS = exports.MESSAGES_ICONS = exports.USER_ACTIONS_ICONS = exports.WEB_CONTENT_ICONS = exports.WIDTHS = exports.VISIBILITY = exports.VERTICAL_ALIGNMENTS = exports.TEXT_ALIGNMENTS = exports.SIZES = exports.FLOATS = exports.COLORS = undefined;

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _values2 = __webpack_require__(312);

	var _values3 = _interopRequireDefault(_values2);

	var _keys2 = __webpack_require__(230);

	var _keys3 = _interopRequireDefault(_keys2);

	var _numberToWord = __webpack_require__(290);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var COLORS = exports.COLORS = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black'];
	var FLOATS = exports.FLOATS = ['left', 'right'];
	var SIZES = exports.SIZES = ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'];
	var TEXT_ALIGNMENTS = exports.TEXT_ALIGNMENTS = ['left', 'center', 'right', 'justified'];
	var VERTICAL_ALIGNMENTS = exports.VERTICAL_ALIGNMENTS = ['bottom', 'middle', 'top'];

	var VISIBILITY = exports.VISIBILITY = ['mobile', 'tablet', 'computer', 'large screen', 'widescreen'];

	var WIDTHS = exports.WIDTHS = [].concat((0, _toConsumableArray3.default)((0, _keys3.default)(_numberToWord.numberToWordMap)), (0, _toConsumableArray3.default)((0, _keys3.default)(_numberToWord.numberToWordMap).map(Number)), (0, _toConsumableArray3.default)((0, _values3.default)(_numberToWord.numberToWordMap)));

	// Generated from:
	// https://github.com/Semantic-Org/Semantic-UI/blob/master/dist/components/icon.css
	var WEB_CONTENT_ICONS = exports.WEB_CONTENT_ICONS = ['search', 'mail outline', 'signal', 'setting', 'home', 'inbox', 'browser', 'tag', 'tags', 'image', 'calendar', 'comment', 'shop', 'comments', 'external', 'privacy', 'settings', 'comments', 'external', 'trophy', 'payment', 'feed', 'alarm outline', 'tasks', 'cloud', 'lab', 'mail', 'dashboard', 'comment outline', 'comments outline', 'sitemap', 'idea', 'alarm', 'terminal', 'code', 'protect', 'calendar outline', 'ticket', 'external square', 'bug', 'mail square', 'history', 'options', 'text telephone', 'find', 'wifi', 'alarm mute', 'alarm mute outline', 'copyright', 'at', 'eyedropper', 'paint brush', 'heartbeat', 'mouse pointer', 'hourglass empty', 'hourglass start', 'hourglass half', 'hourglass end', 'hourglass full', 'hand pointer', 'trademark', 'registered', 'creative commons', 'add to calendar', 'remove from calendar', 'delete calendar', 'checked calendar', 'industry', 'shopping bag', 'shopping basket', 'hashtag', 'percent', 'address book', 'address book outline', 'address card', 'address card outline', 'id badge', 'id card', 'id card outline', 'podcast', 'window close', 'window close outline', 'window maximize', 'window minimize', 'window restore'];
	var USER_ACTIONS_ICONS = exports.USER_ACTIONS_ICONS = ['wait', 'download', 'repeat', 'refresh', 'lock', 'bookmark', 'print', 'write', 'adjust', 'theme', 'edit', 'external share', 'ban', 'mail forward', 'share', 'expand', 'compress', 'unhide', 'hide', 'random', 'retweet', 'sign out', 'pin', 'sign in', 'upload', 'call', 'remove bookmark', 'call square', 'unlock', 'configure', 'filter', 'wizard', 'undo', 'exchange', 'cloud download', 'cloud upload', 'reply', 'reply all', 'erase', 'unlock alternate', 'write square', 'share square', 'archive', 'translate', 'recycle', 'send', 'send outline', 'share alternate', 'share alternate square', 'add to cart', 'in cart', 'add user', 'remove user', 'object group', 'object ungroup', 'clone', 'talk', 'talk outline'];
	var MESSAGES_ICONS = exports.MESSAGES_ICONS = ['help circle', 'info circle', 'warning circle', 'warning sign', 'announcement', 'help', 'info', 'warning', 'birthday', 'help circle outline'];
	var USERS_ICONS = exports.USERS_ICONS = ['user', 'users', 'doctor', 'handicap', 'student', 'child', 'spy', 'user circle', 'user circle outline', 'user outline'];
	var GENDER_SEXUALITY_ICONS = exports.GENDER_SEXUALITY_ICONS = ['female', 'male', 'woman', 'man', 'non binary transgender', 'intergender', 'transgender', 'lesbian', 'gay', 'heterosexual', 'other gender', 'other gender vertical', 'other gender horizontal', 'neuter', 'genderless'];
	var ACCESSIBILITY_ICONS = exports.ACCESSIBILITY_ICONS = ['universal access', 'wheelchair', 'blind', 'audio description', 'volume control phone', 'braille', 'asl', 'assistive listening systems', 'deafness', 'sign language', 'low vision'];
	var VIEW_ADJUSTMENT_ICONS = exports.VIEW_ADJUSTMENT_ICONS = ['block layout', 'grid layout', 'list layout', 'zoom', 'zoom out', 'resize vertical', 'resize horizontal', 'maximize', 'crop'];
	var LITERAL_OBJECTS_ICONS = exports.LITERAL_OBJECTS_ICONS = ['cocktail', 'road', 'flag', 'book', 'gift', 'leaf', 'fire', 'plane', 'magnet', 'lemon', 'world', 'travel', 'shipping', 'money', 'legal', 'lightning', 'umbrella', 'treatment', 'suitcase', 'bar', 'flag outline', 'flag checkered', 'puzzle', 'fire extinguisher', 'rocket', 'anchor', 'bullseye', 'sun', 'moon', 'fax', 'life ring', 'bomb', 'soccer', 'calculator', 'diamond', 'sticky note', 'sticky note outline', 'law', 'hand peace', 'hand rock', 'hand paper', 'hand scissors', 'hand lizard', 'hand spock', 'tv', 'thermometer empty', 'thermometer full', 'thermometer half', 'thermometer quarter', 'thermometer three quarters', 'bath', 'snowflake outline'];
	var SHAPES_ICONS = exports.SHAPES_ICONS = ['crosshairs', 'asterisk', 'square outline', 'certificate', 'square', 'quote left', 'quote right', 'spinner', 'circle', 'ellipsis horizontal', 'ellipsis vertical', 'cube', 'cubes', 'circle notched', 'circle thin'];
	var ITEM_SELECTION_ICONS = exports.ITEM_SELECTION_ICONS = ['checkmark', 'remove', 'checkmark box', 'move', 'add circle', 'minus circle', 'remove circle', 'check circle', 'remove circle outline', 'check circle outline', 'plus', 'minus', 'add square', 'radio', 'minus square', 'minus square outline', 'check square', 'selected radio', 'plus square outline', 'toggle off', 'toggle on'];
	var MEDIA_ICONS = exports.MEDIA_ICONS = ['film', 'sound', 'photo', 'bar chart', 'camera retro', 'newspaper', 'area chart', 'pie chart', 'line chart'];
	var POINTERS_ICONS = exports.POINTERS_ICONS = ['arrow circle outline down', 'arrow circle outline up', 'chevron left', 'chevron right', 'arrow left', 'arrow right', 'arrow up', 'arrow down', 'chevron up', 'chevron down', 'pointing right', 'pointing left', 'pointing up', 'pointing down', 'arrow circle left', 'arrow circle right', 'arrow circle up', 'arrow circle down', 'caret down', 'caret up', 'caret left', 'caret right', 'angle double left', 'angle double right', 'angle double up', 'angle double down', 'angle left', 'angle right', 'angle up', 'angle down', 'chevron circle left', 'chevron circle right', 'chevron circle up', 'chevron circle down', 'toggle down', 'toggle up', 'toggle right', 'long arrow down', 'long arrow up', 'long arrow left', 'long arrow right', 'arrow circle outline right', 'arrow circle outline left', 'toggle left'];
	var MOBILE_ICONS = exports.MOBILE_ICONS = ['tablet', 'mobile', 'battery full', 'battery high', 'battery medium', 'battery low', 'battery empty'];
	var COMPUTER_ICONS = exports.COMPUTER_ICONS = ['power', 'trash outline', 'disk outline', 'desktop', 'laptop', 'game', 'keyboard', 'plug'];
	var FILE_SYSTEM_ICONS = exports.FILE_SYSTEM_ICONS = ['trash', 'file outline', 'folder', 'folder open', 'file text outline', 'folder outline', 'folder open outline', 'level up', 'level down', 'file', 'file text', 'file pdf outline', 'file word outline', 'file excel outline', 'file powerpoint outline', 'file image outline', 'file archive outline', 'file audio outline', 'file video outline', 'file code outline'];
	var TECHNOLOGIES_ICONS = exports.TECHNOLOGIES_ICONS = ['qrcode', 'barcode', 'rss', 'fork', 'html5', 'css3', 'rss square', 'openid', 'database', 'server', 'usb', 'bluetooth', 'bluetooth alternative', 'microchip'];
	var RATING_ICONS = exports.RATING_ICONS = ['heart', 'star', 'empty star', 'thumbs outline up', 'thumbs outline down', 'star half', 'empty heart', 'smile', 'frown', 'meh', 'star half empty', 'thumbs up', 'thumbs down'];
	var AUDIO_ICONS = exports.AUDIO_ICONS = ['music', 'video play outline', 'volume off', 'volume down', 'volume up', 'record', 'step backward', 'fast backward', 'backward', 'play', 'pause', 'stop', 'forward', 'fast forward', 'step forward', 'eject', 'unmute', 'mute', 'video play', 'closed captioning', 'pause circle', 'pause circle outline', 'stop circle', 'stop circle outline'];
	var MAP_LOCATIONS_TRANSPORTATION_ICONS = exports.MAP_LOCATIONS_TRANSPORTATION_ICONS = ['marker', 'coffee', 'food', 'building outline', 'hospital', 'emergency', 'first aid', 'military', 'h', 'location arrow', 'compass', 'space shuttle', 'university', 'building', 'paw', 'spoon', 'car', 'taxi', 'tree', 'bicycle', 'bus', 'ship', 'motorcycle', 'street view', 'hotel', 'train', 'subway', 'map pin', 'map signs', 'map outline', 'map'];
	var TABLES_ICONS = exports.TABLES_ICONS = ['table', 'columns', 'sort', 'sort descending', 'sort ascending', 'sort alphabet ascending', 'sort alphabet descending', 'sort content ascending', 'sort content descending', 'sort numeric ascending', 'sort numeric descending'];
	var TEXT_EDITOR_ICONS = exports.TEXT_EDITOR_ICONS = ['font', 'bold', 'italic', 'text height', 'text width', 'align left', 'align center', 'align right', 'align justify', 'list', 'outdent', 'indent', 'linkify', 'cut', 'copy', 'attach', 'save', 'content', 'unordered list', 'ordered list', 'strikethrough', 'underline', 'paste', 'unlinkify', 'superscript', 'subscript', 'header', 'paragraph', 'text cursor'];
	var CURRENCY_ICONS = exports.CURRENCY_ICONS = ['euro', 'pound', 'dollar', 'rupee', 'yen', 'ruble', 'won', 'bitcoin', 'lira', 'shekel'];
	var PAYMENT_OPTIONS_ICONS = exports.PAYMENT_OPTIONS_ICONS = ['paypal', 'google wallet', 'visa', 'mastercard', 'discover', 'american express', 'paypal card', 'stripe', 'japan credit bureau', 'diners club', 'credit card alternative'];
	var NETWORKS_AND_WEBSITE_ICONS = exports.NETWORKS_AND_WEBSITE_ICONS = ['twitter square', 'facebook square', 'linkedin square', 'github square', 'twitter', 'facebook f', 'github', 'pinterest', 'pinterest square', 'google plus square', 'google plus', 'linkedin', 'github alternate', 'maxcdn', 'youtube square', 'youtube', 'xing', 'xing square', 'youtube play', 'dropbox', 'stack overflow', 'instagram', 'flickr', 'adn', 'bitbucket', 'bitbucket square', 'tumblr', 'tumblr square', 'apple', 'windows', 'android', 'linux', 'dribble', 'skype', 'foursquare', 'trello', 'gittip', 'vk', 'weibo', 'renren', 'pagelines', 'stack exchange', 'vimeo square', 'slack', 'wordpress', 'yahoo', 'google', 'reddit', 'reddit square', 'stumbleupon circle', 'stumbleupon', 'delicious', 'digg', 'pied piper', 'pied piper alternate', 'drupal', 'joomla', 'behance', 'behance square', 'steam', 'steam square', 'spotify', 'deviantart', 'soundcloud', 'vine', 'codepen', 'jsfiddle', 'rebel', 'empire', 'git square', 'git', 'hacker news', 'tencent weibo', 'qq', 'wechat', 'slideshare', 'twitch', 'yelp', 'lastfm', 'lastfm square', 'ioxhost', 'angellist', 'meanpath', 'buysellads', 'connectdevelop', 'dashcube', 'forumbee', 'leanpub', 'sellsy', 'shirtsinbulk', 'simplybuilt', 'skyatlas', 'facebook', 'pinterest', 'whatsapp', 'viacoin', 'medium', 'y combinator', 'optinmonster', 'opencart', 'expeditedssl', 'gg', 'gg circle', 'tripadvisor', 'odnoklassniki', 'odnoklassniki square', 'pocket', 'wikipedia', 'safari', 'chrome', 'firefox', 'opera', 'internet explorer', 'contao', '500px', 'amazon', 'houzz', 'vimeo', 'black tie', 'fonticons', 'reddit alien', 'microsoft edge', 'codiepie', 'modx', 'fort awesome', 'product hunt', 'mixcloud', 'scribd', 'gitlab', 'wpbeginner', 'wpforms', 'envira gallery', 'glide', 'glide g', 'viadeo', 'viadeo square', 'snapchat', 'snapchat ghost', 'snapchat square', 'pied piper hat', 'first order', 'yoast', 'themeisle', 'google plus circle', 'font awesome', 'bandcamp', 'eercast', 'etsy', 'free code camp', 'grav', 'imdb', 'linode', 'meetup', 'quora', 'ravelry', 'superpowers', 'telegram', 'wpexplorer'];
	var ICONS = exports.ICONS = [].concat(WEB_CONTENT_ICONS, USER_ACTIONS_ICONS, MESSAGES_ICONS, USERS_ICONS, GENDER_SEXUALITY_ICONS, ACCESSIBILITY_ICONS, VIEW_ADJUSTMENT_ICONS, LITERAL_OBJECTS_ICONS, SHAPES_ICONS, ITEM_SELECTION_ICONS, MEDIA_ICONS, POINTERS_ICONS, MOBILE_ICONS, COMPUTER_ICONS, FILE_SYSTEM_ICONS, TECHNOLOGIES_ICONS, RATING_ICONS, AUDIO_ICONS, MAP_LOCATIONS_TRANSPORTATION_ICONS, TABLES_ICONS, TEXT_EDITOR_ICONS, CURRENCY_ICONS, PAYMENT_OPTIONS_ICONS, NETWORKS_AND_WEBSITE_ICONS);
	var ICON_ALIASES = exports.ICON_ALIASES = ['like', 'favorite', 'video', 'check', 'close', 'cancel', 'delete', 'x', 'zoom in', 'magnify', 'shutdown', 'clock', 'time', 'play circle outline', 'headphone', 'camera', 'video camera', 'picture', 'pencil', 'compose', 'point', 'tint', 'signup', 'plus circle', 'question circle', 'dont', 'minimize', 'add', 'exclamation circle', 'attention', 'eye', 'exclamation triangle', 'shuffle', 'chat', 'cart', 'shopping cart', 'bar graph', 'key', 'cogs', 'discussions', 'like outline', 'dislike outline', 'heart outline', 'log out', 'thumb tack', 'winner', 'phone', 'bookmark outline', 'phone square', 'credit card', 'hdd outline', 'bullhorn', 'bell outline', 'hand outline right', 'hand outline left', 'hand outline up', 'hand outline down', 'globe', 'wrench', 'briefcase', 'group', 'linkify', 'chain', 'flask', 'sidebar', 'bars', 'list ul', 'list ol', 'numbered list', 'magic', 'truck', 'currency', 'triangle down', 'dropdown', 'triangle up', 'triangle left', 'triangle right', 'envelope', 'conversation', 'rain', 'clipboard', 'lightbulb', 'bell', 'ambulance', 'medkit', 'fighter jet', 'beer', 'plus square', 'computer', 'circle outline', 'gamepad', 'star half full', 'broken chain', 'question', 'exclamation', 'eraser', 'microphone', 'microphone slash', 'shield', 'target', 'play circle', 'pencil square', 'eur', 'gbp', 'usd', 'inr', 'cny', 'rmb', 'jpy', 'rouble', 'rub', 'krw', 'btc', 'gratipay', 'zip', 'dot circle outline', 'try', 'graduation', 'circle outline', 'sliders', 'weixin', 'tty', 'teletype', 'binoculars', 'power cord', 'wifi', 'visa card', 'mastercard card', 'discover card', 'amex', 'american express card', 'stripe card', 'bell slash', 'bell slash outline', 'area graph', 'pie graph', 'line graph', 'cc', 'sheqel', 'ils', 'plus cart', 'arrow down cart', 'detective', 'venus', 'mars', 'mercury', 'intersex', 'venus double', 'female homosexual', 'mars double', 'male homosexual', 'venus mars', 'mars stroke', 'mars alternate', 'mars vertical', 'mars stroke vertical', 'mars horizontal', 'mars stroke horizontal', 'asexual', 'facebook official', 'user plus', 'user times', 'user close', 'user cancel', 'user delete', 'user x', 'bed', 'yc', 'ycombinator', 'battery four', 'battery three', 'battery three quarters', 'battery two', 'battery half', 'battery one', 'battery quarter', 'battery zero', 'i cursor', 'jcb', 'japan credit bureau card', 'diners club card', 'balance', 'hourglass outline', 'hourglass zero', 'hourglass one', 'hourglass two', 'hourglass three', 'hourglass four', 'grab', 'hand victory', 'tm', 'r circle', 'television', 'five hundred pixels', 'calendar plus', 'calendar minus', 'calendar times', 'calendar check', 'factory', 'commenting', 'commenting outline', 'edge', 'ms edge', 'wordpress beginner', 'wordpress forms', 'envira', 'question circle outline', 'assistive listening devices', 'als', 'ald', 'asl interpreting', 'deaf', 'american sign language interpreting', 'hard of hearing', 'signing', 'new pied piper', 'theme isle', 'google plus official', 'fa', 'bathtub', 'drivers license', 'drivers license outline', 's15', 'thermometer', 'times rectangle', 'times rectangle outline', 'vcard', 'vcard outline'];
	var ICONS_AND_ALIASES = exports.ICONS_AND_ALIASES = [].concat((0, _toConsumableArray3.default)(ICONS), ICON_ALIASES);

	// Some icon names are not part of icons.css.
	// These are only valid as children of other components.
	// Their CSS rules are defined by a specific component's CSS.
	// We don't want to show name warnings for those usages so we add them as valid names here.
	var COMPONENT_CONTEXT_SPECIFIC_ICONS = exports.COMPONENT_CONTEXT_SPECIFIC_ICONS = ['left dropdown'];
	var ALL_ICONS_IN_ALL_CONTEXTS = exports.ALL_ICONS_IN_ALL_CONTEXTS = [].concat((0, _toConsumableArray3.default)(ICONS_AND_ALIASES), COMPONENT_CONTEXT_SPECIFIC_ICONS);

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Button = __webpack_require__(465);

	var _Button2 = _interopRequireDefault(_Button);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Button2.default;

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(466);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Label = __webpack_require__(469);

	var _Label2 = _interopRequireDefault(_Label);

	var _ButtonContent = __webpack_require__(479);

	var _ButtonContent2 = _interopRequireDefault(_ButtonContent);

	var _ButtonGroup = __webpack_require__(480);

	var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

	var _ButtonOr = __webpack_require__(481);

	var _ButtonOr2 = _interopRequireDefault(_ButtonOr);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('button');

	/**
	 * A Button indicates a possible user action.
	 * @see Form
	 * @see Icon
	 * @see Label
	 */

	var Button = function (_Component) {
	  (0, _inherits3.default)(Button, _Component);

	  function Button() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Button);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Button.__proto__ || Object.getPrototypeOf(Button)).call.apply(_ref, [this].concat(args))), _this), _this.computeElementType = function () {
	      var _this$props = _this.props,
	          attached = _this$props.attached,
	          label = _this$props.label;


	      if (!(0, _isNil3.default)(attached) || !(0, _isNil3.default)(label)) return 'div';
	    }, _this.computeTabIndex = function (ElementType) {
	      var _this$props2 = _this.props,
	          disabled = _this$props2.disabled,
	          tabIndex = _this$props2.tabIndex;


	      if (!(0, _isNil3.default)(tabIndex)) return tabIndex;
	      if (disabled) return -1;
	      if (ElementType === 'div') return 0;
	    }, _this.handleClick = function (e) {
	      var _this$props3 = _this.props,
	          disabled = _this$props3.disabled,
	          onClick = _this$props3.onClick;


	      if (disabled) {
	        e.preventDefault();
	        return;
	      }

	      if (onClick) onClick(e, _this.props);
	    }, _this.hasIconClass = function () {
	      var _this$props4 = _this.props,
	          labelPosition = _this$props4.labelPosition,
	          children = _this$props4.children,
	          content = _this$props4.content,
	          icon = _this$props4.icon;


	      if (icon === true) return true;
	      return icon && (labelPosition || (0, _isNil3.default)(children) && (0, _isNil3.default)(content));
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Button, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          animated = _props.animated,
	          attached = _props.attached,
	          basic = _props.basic,
	          children = _props.children,
	          circular = _props.circular,
	          className = _props.className,
	          color = _props.color,
	          compact = _props.compact,
	          content = _props.content,
	          disabled = _props.disabled,
	          floated = _props.floated,
	          fluid = _props.fluid,
	          icon = _props.icon,
	          inverted = _props.inverted,
	          label = _props.label,
	          labelPosition = _props.labelPosition,
	          loading = _props.loading,
	          negative = _props.negative,
	          positive = _props.positive,
	          primary = _props.primary,
	          secondary = _props.secondary,
	          size = _props.size,
	          toggle = _props.toggle;


	      var baseClasses = (0, _classnames2.default)(color, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(this.hasIconClass(), 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOrValueAndKey)(animated, 'animated'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'));
	      var labeledClasses = (0, _classnames2.default)((0, _lib.useKeyOrValueAndKey)(labelPosition || !!label, 'labeled'));
	      var wrapperClasses = (0, _classnames2.default)((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useValueAndKey)(floated, 'floated'));

	      var rest = (0, _lib.getUnhandledProps)(Button, this.props);
	      var ElementType = (0, _lib.getElementType)(Button, this.props, this.computeElementType);
	      var tabIndex = this.computeTabIndex(ElementType);

	      if (!(0, _isNil3.default)(children)) {
	        var _classes = (0, _classnames2.default)('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);
	        debug('render children:', { classes: _classes });

	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: _classes, tabIndex: tabIndex, onClick: this.handleClick }),
	          children
	        );
	      }

	      var labelElement = _Label2.default.create(label, { defaultProps: {
	          basic: true,
	          pointing: labelPosition === 'left' ? 'right' : 'left'
	        } });

	      if (labelElement) {
	        var _classes2 = (0, _classnames2.default)('ui', baseClasses, 'button', className);
	        var containerClasses = (0, _classnames2.default)('ui', labeledClasses, 'button', className, wrapperClasses);

	        debug('render label:', { classes: _classes2, containerClasses: containerClasses }, this.props);

	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: containerClasses, onClick: this.handleClick }),
	          labelPosition === 'left' && labelElement,
	          _react2.default.createElement(
	            'button',
	            { className: _classes2, tabIndex: tabIndex },
	            _Icon2.default.create(icon),
	            ' ',
	            content
	          ),
	          (labelPosition === 'right' || !labelPosition) && labelElement
	        );
	      }

	      if (!(0, _isNil3.default)(icon) && (0, _isNil3.default)(label)) {
	        var _classes3 = (0, _classnames2.default)('ui', labeledClasses, baseClasses, 'button', className, wrapperClasses);
	        debug('render icon && !label:', { classes: _classes3 });

	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: _classes3, tabIndex: tabIndex, onClick: this.handleClick }),
	          _Icon2.default.create(icon),
	          ' ',
	          content
	        );
	      }

	      var classes = (0, _classnames2.default)('ui', labeledClasses, baseClasses, 'button', className, wrapperClasses);
	      debug('render default:', { classes: classes });

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, tabIndex: tabIndex, onClick: this.handleClick }),
	        content
	      );
	    }
	  }]);
	  return Button;
	}(_react.Component);

	Button.defaultProps = {
	  as: 'button'
	};
	Button._meta = {
	  name: 'Button',
	  type: _lib.META.TYPES.ELEMENT
	};
	Button.Content = _ButtonContent2.default;
	Button.Group = _ButtonGroup2.default;
	Button.Or = _ButtonOr2.default;
	Button.handledProps = ['active', 'animated', 'as', 'attached', 'basic', 'children', 'circular', 'className', 'color', 'compact', 'content', 'disabled', 'floated', 'fluid', 'icon', 'inverted', 'label', 'labelPosition', 'loading', 'negative', 'onClick', 'positive', 'primary', 'secondary', 'size', 'tabIndex', 'toggle'];
	process.env.NODE_ENV !== "production" ? Button.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A button can show it is currently the active user selection. */
	  active: _propTypes2.default.bool,

	  /** A button can animate to show hidden content. */
	  animated: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['fade', 'vertical'])]),

	  /** A button can be attached to the top or bottom of other content. */
	  attached: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']),

	  /** A basic button is less pronounced. */
	  basic: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _lib.customPropTypes.every([_propTypes2.default.node, _lib.customPropTypes.disallow(['label']), _lib.customPropTypes.givenProps({
	    icon: _propTypes2.default.oneOfType([_propTypes2.default.string.isRequired, _propTypes2.default.object.isRequired, _propTypes2.default.element.isRequired])
	  }, _lib.customPropTypes.disallow(['icon']))]),

	  /** A button can be circular. */
	  circular: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A button can have different colors */
	  color: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),

	  /** A button can reduce its padding to fit into tighter spaces. */
	  compact: _propTypes2.default.bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A button can show it is currently unable to be interacted with. */
	  disabled: _propTypes2.default.bool,

	  /** A button can be aligned to the left or right of its container. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** A button can take the width of its container. */
	  fluid: _propTypes2.default.bool,

	  /** Add an Icon by name, props object, or pass an <Icon />. */
	  icon: _lib.customPropTypes.some([_propTypes2.default.bool, _propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.element]),

	  /** A button can be formatted to appear on dark backgrounds. */
	  inverted: _propTypes2.default.bool,

	  /** Add a Label by text, props object, or pass a <Label />. */
	  label: _lib.customPropTypes.some([_propTypes2.default.string, _propTypes2.default.object, _propTypes2.default.element]),

	  /** A labeled button can format a Label or Icon to appear on the left or right. */
	  labelPosition: _propTypes2.default.oneOf(['right', 'left']),

	  /** A button can show a loading indicator. */
	  loading: _propTypes2.default.bool,

	  /** A button can hint towards a negative consequence. */
	  negative: _propTypes2.default.bool,

	  /**
	   * Called after user's click.
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /** A button can hint towards a positive consequence. */
	  positive: _propTypes2.default.bool,

	  /** A button can be formatted to show different levels of emphasis. */
	  primary: _propTypes2.default.bool,

	  /** A button can be formatted to show different levels of emphasis. */
	  secondary: _propTypes2.default.bool,

	  /** A button can have different sizes. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** A button can receive focus. */
	  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** A button can be formatted to toggle on and off. */
	  toggle: _propTypes2.default.bool
	} : void 0;


	Button.create = (0, _lib.createShorthandFactory)(Button, function (value) {
	  return { content: value };
	});

	exports.default = Button;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _IconGroup = __webpack_require__(468);

	var _IconGroup2 = _interopRequireDefault(_IconGroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An icon is a glyph used to represent something else.
	 * @see Image
	 */
	function Icon(props) {
	  var bordered = props.bordered,
	      circular = props.circular,
	      className = props.className,
	      color = props.color,
	      corner = props.corner,
	      disabled = props.disabled,
	      fitted = props.fitted,
	      flipped = props.flipped,
	      inverted = props.inverted,
	      link = props.link,
	      loading = props.loading,
	      name = props.name,
	      rotated = props.rotated,
	      size = props.size;


	  var classes = (0, _classnames2.default)(color, name, size, (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(corner, 'corner'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(flipped, 'flipped'), (0, _lib.useValueAndKey)(rotated, 'rotated'), 'icon', className);
	  var rest = (0, _lib.getUnhandledProps)(Icon, props);
	  var ElementType = (0, _lib.getElementType)(Icon, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { 'aria-hidden': 'true', className: classes }));
	}

	Icon.handledProps = ['as', 'bordered', 'circular', 'className', 'color', 'corner', 'disabled', 'fitted', 'flipped', 'inverted', 'link', 'loading', 'name', 'rotated', 'size'];
	Icon.Group = _IconGroup2.default;

	Icon._meta = {
	  name: 'Icon',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Icon.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Formatted to appear bordered. */
	  bordered: _propTypes2.default.bool,

	  /** Icon can formatted to appear circular. */
	  circular: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Color of the icon. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Icons can display a smaller corner icon. */
	  corner: _propTypes2.default.bool,

	  /** Show that the icon is inactive. */
	  disabled: _propTypes2.default.bool,

	  /** Fitted, without space to left or right of Icon. */
	  fitted: _propTypes2.default.bool,

	  /** Icon can flipped. */
	  flipped: _propTypes2.default.oneOf(['horizontally', 'vertically']),

	  /** Formatted to have its colors inverted for contrast. */
	  inverted: _propTypes2.default.bool,

	  /** Icon can be formatted as a link. */
	  link: _propTypes2.default.bool,

	  /** Icon can be used as a simple loader. */
	  loading: _propTypes2.default.bool,

	  /** Name of the icon. */
	  name: _lib.customPropTypes.suggest(_lib.SUI.ALL_ICONS_IN_ALL_CONTEXTS),

	  /** Icon can rotated. */
	  rotated: _propTypes2.default.oneOf(['clockwise', 'counterclockwise']),

	  /** Size of the icon. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))
	} : void 0;

	Icon.defaultProps = {
	  as: 'i'
	};

	Icon.create = (0, _lib.createShorthandFactory)(Icon, function (value) {
	  return { name: value };
	});

	exports.default = Icon;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

	var baseDifference = __webpack_require__(200),
	    baseRest = __webpack_require__(184),
	    isArrayLikeObject = __webpack_require__(215);

	/**
	 * Creates an array excluding all given values using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * **Note:** Unlike `_.pull`, this method returns a new array.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {Array} array The array to inspect.
	 * @param {...*} [values] The values to exclude.
	 * @returns {Array} Returns the new array of filtered values.
	 * @see _.difference, _.xor
	 * @example
	 *
	 * _.without([2, 1, 2, 3], 1, 2);
	 * // => [3]
	 */
	var without = baseRest(function(array, values) {
	  return isArrayLikeObject(array)
	    ? baseDifference(array, values)
	    : [];
	});

	module.exports = without;


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Several icons can be used together as a group.
	 */
	function IconGroup(props) {
	  var children = props.children,
	      className = props.className,
	      size = props.size;

	  var classes = (0, _classnames2.default)(size, 'icons', className);
	  var rest = (0, _lib.getUnhandledProps)(IconGroup, props);
	  var ElementType = (0, _lib.getElementType)(IconGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	IconGroup.handledProps = ['as', 'children', 'className', 'size'];
	IconGroup._meta = {
	  name: 'IconGroup',
	  parent: 'Icon',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? IconGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Size of the icon group. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))
	} : void 0;

	IconGroup.defaultProps = {
	  as: 'i'
	};

	exports.default = IconGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isUndefined2 = __webpack_require__(217);

	var _isUndefined3 = _interopRequireDefault(_isUndefined2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(466);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Image = __webpack_require__(470);

	var _Image2 = _interopRequireDefault(_Image);

	var _LabelDetail = __webpack_require__(477);

	var _LabelDetail2 = _interopRequireDefault(_LabelDetail);

	var _LabelGroup = __webpack_require__(478);

	var _LabelGroup2 = _interopRequireDefault(_LabelGroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A label displays content classification.
	 */
	var Label = function (_Component) {
	  (0, _inherits3.default)(Label, _Component);

	  function Label() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Label);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Label.__proto__ || Object.getPrototypeOf(Label)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _this.handleIconOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e) {
	          (0, _invoke3.default)(predefinedProps, 'onClick', e);
	          (0, _invoke3.default)(_this.props, 'onRemove', e, _this.props);
	        }
	      };
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Label, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          attached = _props.attached,
	          basic = _props.basic,
	          children = _props.children,
	          circular = _props.circular,
	          className = _props.className,
	          color = _props.color,
	          content = _props.content,
	          corner = _props.corner,
	          detail = _props.detail,
	          empty = _props.empty,
	          floating = _props.floating,
	          horizontal = _props.horizontal,
	          icon = _props.icon,
	          image = _props.image,
	          onRemove = _props.onRemove,
	          pointing = _props.pointing,
	          removeIcon = _props.removeIcon,
	          ribbon = _props.ribbon,
	          size = _props.size,
	          tag = _props.tag;


	      var pointingClass = pointing === true && 'pointing' || (pointing === 'left' || pointing === 'right') && pointing + ' pointing' || (pointing === 'above' || pointing === 'below') && 'pointing ' + pointing;

	      var classes = (0, _classnames2.default)('ui', color, pointingClass, size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(empty, 'empty'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(tag, 'tag'), (0, _lib.useKeyOrValueAndKey)(corner, 'corner'), (0, _lib.useKeyOrValueAndKey)(ribbon, 'ribbon'), (0, _lib.useValueAndKey)(attached, 'attached'), 'label', className);
	      var rest = (0, _lib.getUnhandledProps)(Label, this.props);
	      var ElementType = (0, _lib.getElementType)(Label, this.props);

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	          children
	        );
	      }

	      var removeIconShorthand = (0, _isUndefined3.default)(removeIcon) ? 'delete' : removeIcon;

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({ className: classes, onClick: this.handleClick }, rest),
	        _Icon2.default.create(icon),
	        typeof image !== 'boolean' && _Image2.default.create(image),
	        content,
	        (0, _lib.createShorthand)(_LabelDetail2.default, function (val) {
	          return { content: val };
	        }, detail),
	        onRemove && _Icon2.default.create(removeIconShorthand, { overrideProps: this.handleIconOverrides })
	      );
	    }
	  }]);
	  return Label;
	}(_react.Component);

	Label._meta = {
	  name: 'Label',
	  type: _lib.META.TYPES.ELEMENT
	};
	Label.Detail = _LabelDetail2.default;
	Label.Group = _LabelGroup2.default;
	Label.handledProps = ['active', 'as', 'attached', 'basic', 'children', 'circular', 'className', 'color', 'content', 'corner', 'detail', 'empty', 'floating', 'horizontal', 'icon', 'image', 'onClick', 'onRemove', 'pointing', 'removeIcon', 'ribbon', 'size', 'tag'];
	exports.default = Label;
	process.env.NODE_ENV !== "production" ? Label.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A label can be active. */
	  active: _propTypes2.default.bool,

	  /** A label can attach to a content segment. */
	  attached: _propTypes2.default.oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),

	  /** A label can reduce its complexity. */
	  basic: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** A label can be circular. */
	  circular: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Color of the label. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A label can position itself in the corner of an element. */
	  corner: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right'])]),

	  /** Shorthand for LabelDetail. */
	  detail: _lib.customPropTypes.itemShorthand,

	  /** Formats the label as a dot. */
	  empty: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.demand(['circular'])]),

	  /** Float above another element in the upper right corner. */
	  floating: _propTypes2.default.bool,

	  /** A horizontal label is formatted to label content along-side it horizontally. */
	  horizontal: _propTypes2.default.bool,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** A label can be formatted to emphasize an image or prop can be used as shorthand for Image. */
	  image: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /**
	   * Adds an "x" icon, called when "x" is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onRemove: _propTypes2.default.func,

	  /** A label can point to content next to it. */
	  pointing: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['above', 'below', 'left', 'right'])]),

	  /** Shorthand for Icon to appear as the last child and trigger onRemove. */
	  removeIcon: _lib.customPropTypes.itemShorthand,

	  /** A label can appear as a ribbon attaching itself to an element. */
	  ribbon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['right'])]),

	  /** A label can have different sizes. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** A label can appear as a tag. */
	  tag: _propTypes2.default.bool
	} : void 0;


	Label.create = (0, _lib.createShorthandFactory)(Label, function (value) {
	  return { content: value };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Dimmer = __webpack_require__(471);

	var _Dimmer2 = _interopRequireDefault(_Dimmer);

	var _Label = __webpack_require__(469);

	var _Label2 = _interopRequireDefault(_Label);

	var _ImageGroup = __webpack_require__(476);

	var _ImageGroup2 = _interopRequireDefault(_ImageGroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An image is a graphic representation of something.
	 * @see Icon
	 */
	function Image(props) {
	  var alt = props.alt,
	      avatar = props.avatar,
	      bordered = props.bordered,
	      centered = props.centered,
	      children = props.children,
	      className = props.className,
	      dimmer = props.dimmer,
	      disabled = props.disabled,
	      floated = props.floated,
	      fluid = props.fluid,
	      height = props.height,
	      hidden = props.hidden,
	      href = props.href,
	      inline = props.inline,
	      label = props.label,
	      shape = props.shape,
	      size = props.size,
	      spaced = props.spaced,
	      src = props.src,
	      verticalAlign = props.verticalAlign,
	      width = props.width,
	      wrapped = props.wrapped,
	      ui = props.ui;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ui, 'ui'), size, shape, (0, _lib.useKeyOnly)(avatar, 'avatar'), (0, _lib.useKeyOnly)(bordered, 'bordered'), (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOrValueAndKey)(spaced, 'spaced'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign, 'aligned'), 'image', className);
	  var rest = (0, _lib.getUnhandledProps)(Image, props);
	  var ElementType = (0, _lib.getElementType)(Image, props, function () {
	    if (!(0, _isNil3.default)(dimmer) || !(0, _isNil3.default)(label) || !(0, _isNil3.default)(wrapped) || !(0, _isNil3.default)(children)) return 'div';
	  });

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  var rootProps = (0, _extends3.default)({}, rest, { className: classes });
	  var imgTagProps = { alt: alt, src: src, height: height, width: width };

	  if (ElementType === 'img') return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rootProps, imgTagProps));

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rootProps, { href: href }),
	    _Dimmer2.default.create(dimmer),
	    _Label2.default.create(label),
	    _react2.default.createElement('img', imgTagProps)
	  );
	}

	Image.handledProps = ['alt', 'as', 'avatar', 'bordered', 'centered', 'children', 'className', 'dimmer', 'disabled', 'floated', 'fluid', 'height', 'hidden', 'href', 'inline', 'label', 'shape', 'size', 'spaced', 'src', 'ui', 'verticalAlign', 'width', 'wrapped'];
	Image.Group = _ImageGroup2.default;

	Image._meta = {
	  name: 'Image',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Image.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Alternate text for the image specified. */
	  alt: _propTypes2.default.string,

	  /** An image may be formatted to appear inline with text as an avatar. */
	  avatar: _propTypes2.default.bool,

	  /** An image may include a border to emphasize the edges of white or transparent content. */
	  bordered: _propTypes2.default.bool,

	  /** An image can appear centered in a content block. */
	  centered: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** An image can show that it is disabled and cannot be selected. */
	  disabled: _propTypes2.default.bool,

	  /** Shorthand for Dimmer. */
	  dimmer: _lib.customPropTypes.itemShorthand,

	  /** An image can sit to the left or right of other content. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** An image can take up the width of its container. */
	  fluid: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['size'])]),

	  /** The img element height attribute. */
	  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** An image can be hidden. */
	  hidden: _propTypes2.default.bool,

	  /** Renders the Image as an <a> tag with this href. */
	  href: _propTypes2.default.string,

	  /** An image may appear inline. */
	  inline: _propTypes2.default.bool,

	  /** Shorthand for Label. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** An image may appear rounded or circular. */
	  shape: _propTypes2.default.oneOf(['rounded', 'circular']),

	  /** An image may appear at different sizes. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** An image can specify that it needs an additional spacing to separate it from nearby content. */
	  spaced: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right'])]),

	  /** Specifies the URL of the image. */
	  src: _propTypes2.default.string,

	  /** Whether or not to add the ui className. */
	  ui: _propTypes2.default.bool,

	  /** An image can specify its vertical alignment. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** The img element width attribute. */
	  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),

	  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */
	  wrapped: _lib.customPropTypes.every([_propTypes2.default.bool,
	  // these props wrap the image in an a tag already
	  _lib.customPropTypes.disallow(['href'])])
	} : void 0;

	Image.defaultProps = {
	  as: 'img',
	  ui: true
	};

	Image.create = (0, _lib.createShorthandFactory)(Image, function (value) {
	  return { src: value };
	});

	exports.default = Image;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Dimmer = __webpack_require__(472);

	var _Dimmer2 = _interopRequireDefault(_Dimmer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Dimmer2.default;

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Portal = __webpack_require__(473);

	var _Portal2 = _interopRequireDefault(_Portal);

	var _DimmerDimmable = __webpack_require__(475);

	var _DimmerDimmable2 = _interopRequireDefault(_DimmerDimmable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A dimmer hides distractions to focus attention on particular content.
	 */
	var Dimmer = function (_Component) {
	  (0, _inherits3.default)(Dimmer, _Component);

	  function Dimmer() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Dimmer);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Dimmer.__proto__ || Object.getPrototypeOf(Dimmer)).call.apply(_ref, [this].concat(args))), _this), _this.handlePortalMount = function () {
	      if (_lib.isBrowser) document.body.classList.add('dimmed', 'dimmable');
	    }, _this.handlePortalUnmount = function () {
	      if (_lib.isBrowser) document.body.classList.remove('dimmed', 'dimmable');
	    }, _this.handleClick = function (e) {
	      var _this$props = _this.props,
	          onClick = _this$props.onClick,
	          onClickOutside = _this$props.onClickOutside;


	      if (onClick) onClick(e, _this.props);
	      if (_this.centerRef && _this.centerRef !== e.target && _this.centerRef.contains(e.target)) return;
	      if (onClickOutside) onClickOutside(e, _this.props);
	    }, _this.handleCenterRef = function (c) {
	      return _this.centerRef = c;
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Dimmer, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          content = _props.content,
	          disabled = _props.disabled,
	          inverted = _props.inverted,
	          page = _props.page,
	          simple = _props.simple;


	      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(active, 'active transition visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(page, 'page'), (0, _lib.useKeyOnly)(simple, 'simple'), 'dimmer', className);
	      var rest = (0, _lib.getUnhandledProps)(Dimmer, this.props);
	      var ElementType = (0, _lib.getElementType)(Dimmer, this.props);

	      var childrenContent = (0, _isNil3.default)(children) ? content : children;

	      var dimmerElement = _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	        childrenContent && _react2.default.createElement(
	          'div',
	          { className: 'content' },
	          _react2.default.createElement(
	            'div',
	            { className: 'center', ref: this.handleCenterRef },
	            childrenContent
	          )
	        )
	      );

	      if (page) {
	        return _react2.default.createElement(
	          _Portal2.default,
	          {
	            closeOnEscape: false,
	            closeOnDocumentClick: false,
	            onMount: this.handlePortalMount,
	            onUnmount: this.handlePortalUnmount,
	            open: active,
	            openOnTriggerClick: false
	          },
	          dimmerElement
	        );
	      }

	      return dimmerElement;
	    }
	  }]);
	  return Dimmer;
	}(_react.Component);

	Dimmer._meta = {
	  name: 'Dimmer',
	  type: _lib.META.TYPES.MODULE
	};
	Dimmer.Dimmable = _DimmerDimmable2.default;
	Dimmer.handledProps = ['active', 'as', 'children', 'className', 'content', 'disabled', 'inverted', 'onClick', 'onClickOutside', 'page', 'simple'];
	exports.default = Dimmer;
	process.env.NODE_ENV !== "production" ? Dimmer.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An active dimmer will dim its parent container. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A disabled dimmer cannot be activated */
	  disabled: _propTypes2.default.bool,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /**
	   * Handles click outside Dimmer's content, but inside Dimmer area.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClickOutside: _propTypes2.default.func,

	  /** A dimmer can be formatted to have its colors inverted. */
	  inverted: _propTypes2.default.bool,

	  /** A dimmer can be formatted to be fixed to the page. */
	  page: _propTypes2.default.bool,

	  /** A dimmer can be controlled with simple prop. */
	  simple: _propTypes2.default.bool
	} : void 0;


	Dimmer.create = (0, _lib.createShorthandFactory)(Dimmer, function (value) {
	  return { content: value };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Portal = __webpack_require__(474);

	var _Portal2 = _interopRequireDefault(_Portal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Portal2.default;

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _reactDom = __webpack_require__(13);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('portal');

	/**
	 * A component that allows you to render children outside their parent.
	 * @see Modal
	 * @see Popup
	 * @see Dimmer
	 * @see Confirm
	 */

	var Portal = function (_Component) {
	  (0, _inherits3.default)(Portal, _Component);

	  function Portal() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Portal);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Portal.__proto__ || Object.getPrototypeOf(Portal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleDocumentClick = function (e) {
	      var _this$props = _this.props,
	          closeOnDocumentClick = _this$props.closeOnDocumentClick,
	          closeOnRootNodeClick = _this$props.closeOnRootNodeClick;


	      if (!_this.rootNode // not mounted
	      || !_this.portalNode // no portal
	      || (0, _invoke3.default)(_this, 'triggerNode.contains', e.target) // event happened in trigger (delegate to trigger handlers)
	      || (0, _invoke3.default)(_this, 'portalNode.contains', e.target) // event happened in the portal
	      ) return; // ignore the click

	      var didClickInRootNode = _this.rootNode.contains(e.target);

	      if (closeOnDocumentClick && !didClickInRootNode || closeOnRootNodeClick && didClickInRootNode) {
	        debug('handleDocumentClick()');

	        _this.close(e);
	      }
	    }, _this.handleEscape = function (e) {
	      if (!_this.props.closeOnEscape) return;
	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;

	      debug('handleEscape()');

	      _this.close(e);
	    }, _this.handlePortalMouseLeave = function (e) {
	      var _this$props2 = _this.props,
	          closeOnPortalMouseLeave = _this$props2.closeOnPortalMouseLeave,
	          mouseLeaveDelay = _this$props2.mouseLeaveDelay;


	      if (!closeOnPortalMouseLeave) return;

	      debug('handlePortalMouseLeave()');
	      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
	    }, _this.handlePortalMouseEnter = function (e) {
	      // In order to enable mousing from the trigger to the portal, we need to
	      // clear the mouseleave timer that was set when leaving the trigger.
	      var closeOnPortalMouseLeave = _this.props.closeOnPortalMouseLeave;


	      if (!closeOnPortalMouseLeave) return;

	      debug('handlePortalMouseEnter()');
	      clearTimeout(_this.mouseLeaveTimer);
	    }, _this.handleTriggerBlur = function (e) {
	      var _this$props3 = _this.props,
	          trigger = _this$props3.trigger,
	          closeOnTriggerBlur = _this$props3.closeOnTriggerBlur;

	      // Call original event handler

	      (0, _invoke3.default)(trigger, 'props.onBlur', e);

	      // do not close if focus is given to the portal
	      var didFocusPortal = (0, _invoke3.default)(_this, 'rootNode.contains', e.relatedTarget);

	      if (!closeOnTriggerBlur || didFocusPortal) return;

	      debug('handleTriggerBlur()');
	      _this.close(e);
	    }, _this.handleTriggerClick = function (e) {
	      var _this$props4 = _this.props,
	          trigger = _this$props4.trigger,
	          closeOnTriggerClick = _this$props4.closeOnTriggerClick,
	          openOnTriggerClick = _this$props4.openOnTriggerClick;
	      var open = _this.state.open;

	      // Call original event handler

	      (0, _invoke3.default)(trigger, 'props.onClick', e);

	      if (open && closeOnTriggerClick) {
	        debug('handleTriggerClick() - close');

	        _this.close(e);
	      } else if (!open && openOnTriggerClick) {
	        debug('handleTriggerClick() - open');

	        _this.open(e);
	      }
	    }, _this.handleTriggerFocus = function (e) {
	      var _this$props5 = _this.props,
	          trigger = _this$props5.trigger,
	          openOnTriggerFocus = _this$props5.openOnTriggerFocus;

	      // Call original event handler

	      (0, _invoke3.default)(trigger, 'props.onFocus', e);

	      if (!openOnTriggerFocus) return;

	      debug('handleTriggerFocus()');
	      _this.open(e);
	    }, _this.handleTriggerMouseLeave = function (e) {
	      clearTimeout(_this.mouseEnterTimer);

	      var _this$props6 = _this.props,
	          trigger = _this$props6.trigger,
	          closeOnTriggerMouseLeave = _this$props6.closeOnTriggerMouseLeave,
	          mouseLeaveDelay = _this$props6.mouseLeaveDelay;

	      // Call original event handler

	      (0, _invoke3.default)(trigger, 'props.onMouseLeave', e);

	      if (!closeOnTriggerMouseLeave) return;

	      debug('handleTriggerMouseLeave()');
	      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
	    }, _this.handleTriggerMouseEnter = function (e) {
	      clearTimeout(_this.mouseLeaveTimer);

	      var _this$props7 = _this.props,
	          trigger = _this$props7.trigger,
	          mouseEnterDelay = _this$props7.mouseEnterDelay,
	          openOnTriggerMouseEnter = _this$props7.openOnTriggerMouseEnter;

	      // Call original event handler

	      (0, _invoke3.default)(trigger, 'props.onMouseEnter', _this.handleTriggerMouseEnter);

	      if (!openOnTriggerMouseEnter) return;

	      debug('handleTriggerMouseEnter()');
	      _this.mouseEnterTimer = _this.openWithTimeout(e, mouseEnterDelay);
	    }, _this.open = function (e) {
	      debug('open()');

	      var onOpen = _this.props.onOpen;

	      if (onOpen) onOpen(e, _this.props);

	      _this.trySetState({ open: true });
	    }, _this.openWithTimeout = function (e, delay) {
	      debug('openWithTimeout()', delay);
	      // React wipes the entire event object and suggests using e.persist() if
	      // you need the event for async access. However, even with e.persist
	      // certain required props (e.g. currentTarget) are null so we're forced to clone.
	      var eventClone = (0, _extends3.default)({}, e);
	      return setTimeout(function () {
	        return _this.open(eventClone);
	      }, delay || 0);
	    }, _this.close = function (e) {
	      debug('close()');

	      var onClose = _this.props.onClose;

	      if (onClose) onClose(e, _this.props);

	      _this.trySetState({ open: false });
	    }, _this.closeWithTimeout = function (e, delay) {
	      debug('closeWithTimeout()', delay);
	      // React wipes the entire event object and suggests using e.persist() if
	      // you need the event for async access. However, even with e.persist
	      // certain required props (e.g. currentTarget) are null so we're forced to clone.
	      var eventClone = (0, _extends3.default)({}, e);
	      return setTimeout(function () {
	        return _this.close(eventClone);
	      }, delay || 0);
	    }, _this.mountPortal = function () {
	      if (!_lib.isBrowser || _this.rootNode) return;

	      debug('mountPortal()');

	      var _this$props8 = _this.props,
	          _this$props8$mountNod = _this$props8.mountNode,
	          mountNode = _this$props8$mountNod === undefined ? _lib.isBrowser ? document.body : null : _this$props8$mountNod,
	          prepend = _this$props8.prepend;


	      _this.rootNode = document.createElement('div');

	      if (prepend) {
	        mountNode.insertBefore(_this.rootNode, mountNode.firstElementChild);
	      } else {
	        mountNode.appendChild(_this.rootNode);
	      }

	      document.addEventListener('click', _this.handleDocumentClick);
	      document.addEventListener('keydown', _this.handleEscape);

	      var onMount = _this.props.onMount;

	      if (onMount) onMount(null, _this.props);
	    }, _this.unmountPortal = function () {
	      if (!_lib.isBrowser || !_this.rootNode) return;

	      debug('unmountPortal()');

	      _reactDom2.default.unmountComponentAtNode(_this.rootNode);
	      _this.rootNode.parentNode.removeChild(_this.rootNode);

	      _this.portalNode.removeEventListener('mouseleave', _this.handlePortalMouseLeave);
	      _this.portalNode.removeEventListener('mouseenter', _this.handlePortalMouseEnter);

	      _this.rootNode = null;
	      _this.portalNode = null;

	      document.removeEventListener('click', _this.handleDocumentClick);
	      document.removeEventListener('keydown', _this.handleEscape);

	      var onUnmount = _this.props.onUnmount;

	      if (onUnmount) onUnmount(null, _this.props);
	    }, _this.handleRef = function (c) {
	      _this.triggerNode = _reactDom2.default.findDOMNode(c);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Portal, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      debug('componentDidMount()');
	      this.renderPortal();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      debug('componentDidUpdate()');
	      // NOTE: Ideally the portal rendering would happen in the render() function
	      // but React gives a warning about not being pure and suggests doing it
	      // within this method.

	      // If the portal is open, render (or re-render) the portal and child.
	      this.renderPortal();

	      if (prevState.open && !this.state.open) {
	        debug('portal closed');
	        this.unmountPortal();
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.unmountPortal();

	      // Clean up timers
	      clearTimeout(this.mouseEnterTimer);
	      clearTimeout(this.mouseLeaveTimer);
	    }

	    // ----------------------------------------
	    // Document Event Handlers
	    // ----------------------------------------

	    // ----------------------------------------
	    // Component Event Handlers
	    // ----------------------------------------

	    // ----------------------------------------
	    // Behavior
	    // ----------------------------------------

	  }, {
	    key: 'renderPortal',
	    value: function renderPortal() {
	      var _this2 = this;

	      if (!this.state.open) return;
	      debug('renderPortal()');

	      var _props = this.props,
	          children = _props.children,
	          className = _props.className;


	      this.mountPortal();

	      // Server side rendering
	      if (!_lib.isBrowser) return null;

	      this.rootNode.className = className || '';

	      // when re-rendering, first remove listeners before re-adding them to the new node
	      if (this.portalNode) {
	        this.portalNode.removeEventListener('mouseleave', this.handlePortalMouseLeave);
	        this.portalNode.removeEventListener('mouseenter', this.handlePortalMouseEnter);
	      }

	      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, _react.Children.only(children), this.rootNode, function () {
	        _this2.portalNode = _this2.rootNode.firstElementChild;

	        _this2.portalNode.addEventListener('mouseleave', _this2.handlePortalMouseLeave);
	        _this2.portalNode.addEventListener('mouseenter', _this2.handlePortalMouseEnter);
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var trigger = this.props.trigger;


	      if (!trigger) return null;

	      return (0, _react.cloneElement)(trigger, {
	        ref: this.handleRef,
	        onBlur: this.handleTriggerBlur,
	        onClick: this.handleTriggerClick,
	        onFocus: this.handleTriggerFocus,
	        onMouseLeave: this.handleTriggerMouseLeave,
	        onMouseEnter: this.handleTriggerMouseEnter
	      });
	    }
	  }]);
	  return Portal;
	}(_lib.AutoControlledComponent);

	Portal.defaultProps = {
	  closeOnDocumentClick: true,
	  closeOnEscape: true,
	  openOnTriggerClick: true
	};
	Portal.autoControlledProps = ['open'];
	Portal._meta = {
	  name: 'Portal',
	  type: _lib.META.TYPES.ADDON
	};
	Portal.handledProps = ['children', 'className', 'closeOnDocumentClick', 'closeOnEscape', 'closeOnPortalMouseLeave', 'closeOnRootNodeClick', 'closeOnTriggerBlur', 'closeOnTriggerClick', 'closeOnTriggerMouseLeave', 'defaultOpen', 'mountNode', 'mouseEnterDelay', 'mouseLeaveDelay', 'onClose', 'onMount', 'onOpen', 'onUnmount', 'open', 'openOnTriggerClick', 'openOnTriggerFocus', 'openOnTriggerMouseEnter', 'prepend', 'trigger'];
	process.env.NODE_ENV !== "production" ? Portal.propTypes = {
	  /** Primary content. */
	  children: _propTypes2.default.node.isRequired,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Controls whether or not the portal should close when the document is clicked. */
	  closeOnDocumentClick: _propTypes2.default.bool,

	  /** Controls whether or not the portal should close when escape is pressed is displayed. */
	  closeOnEscape: _propTypes2.default.bool,

	  /**
	   * Controls whether or not the portal should close when mousing out of the portal.
	   * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the
	   * gap from the trigger to the portal.
	   */
	  closeOnPortalMouseLeave: _propTypes2.default.bool,

	  /**
	   * Controls whether or not the portal should close on a click on the portal background.
	   * NOTE: This differs from closeOnDocumentClick:
	   * - DocumentClick - any click not within the portal
	   * - RootNodeClick - a click not within the portal but within the portal's wrapper
	   */
	  closeOnRootNodeClick: _propTypes2.default.bool,

	  /** Controls whether or not the portal should close on blur of the trigger. */
	  closeOnTriggerBlur: _propTypes2.default.bool,

	  /** Controls whether or not the portal should close on click of the trigger. */
	  closeOnTriggerClick: _propTypes2.default.bool,

	  /** Controls whether or not the portal should close when mousing out of the trigger. */
	  closeOnTriggerMouseLeave: _propTypes2.default.bool,

	  /** Initial value of open. */
	  defaultOpen: _propTypes2.default.bool,

	  /** The node where the portal should mount. */
	  mountNode: _propTypes2.default.any,

	  /** Milliseconds to wait before opening on mouse over */
	  mouseEnterDelay: _propTypes2.default.number,

	  /** Milliseconds to wait before closing on mouse leave */
	  mouseLeaveDelay: _propTypes2.default.number,

	  /**
	   * Called when a close event happens
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes2.default.func,

	  /**
	   * Called when the portal is mounted on the DOM
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes2.default.func,

	  /**
	   * Called when an open event happens
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes2.default.func,

	  /**
	   * Called when the portal is unmounted from the DOM
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes2.default.func,

	  /** Controls whether or not the portal is displayed. */
	  open: _propTypes2.default.bool,

	  /** Controls whether or not the portal should open when the trigger is clicked. */
	  openOnTriggerClick: _propTypes2.default.bool,

	  /** Controls whether or not the portal should open on focus of the trigger. */
	  openOnTriggerFocus: _propTypes2.default.bool,

	  /** Controls whether or not the portal should open when mousing over the trigger. */
	  openOnTriggerMouseEnter: _propTypes2.default.bool,

	  /** Controls whether the portal should be prepended to the mountNode instead of appended. */
	  prepend: _propTypes2.default.bool,

	  /** Element to be rendered in-place where the portal is defined. */
	  trigger: _propTypes2.default.node
	} : void 0;
	exports.default = Portal;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A dimmable sub-component for Dimmer.
	 */
	function DimmerDimmable(props) {
	  var blurring = props.blurring,
	      className = props.className,
	      children = props.children,
	      dimmed = props.dimmed;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(blurring, 'blurring'), (0, _lib.useKeyOnly)(dimmed, 'dimmed'), 'dimmable', className);
	  var rest = (0, _lib.getUnhandledProps)(DimmerDimmable, props);
	  var ElementType = (0, _lib.getElementType)(DimmerDimmable, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	DimmerDimmable.handledProps = ['as', 'blurring', 'children', 'className', 'dimmed'];
	DimmerDimmable._meta = {
	  name: 'DimmerDimmable',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Dimmer'
	};

	process.env.NODE_ENV !== "production" ? DimmerDimmable.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A dimmable element can blur its contents. */
	  blurring: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Controls whether or not the dim is displayed. */
	  dimmed: _propTypes2.default.bool
	} : void 0;

	exports.default = DimmerDimmable;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A group of images.
	 */
	function ImageGroup(props) {
	  var children = props.children,
	      className = props.className,
	      size = props.size;

	  var classes = (0, _classnames2.default)('ui', size, className, 'images');
	  var rest = (0, _lib.getUnhandledProps)(ImageGroup, props);
	  var ElementType = (0, _lib.getElementType)(ImageGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	ImageGroup.handledProps = ['as', 'children', 'className', 'size'];
	ImageGroup._meta = {
	  name: 'ImageGroup',
	  parent: 'Image',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ImageGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A group of images can be formatted to have the same size. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES)
	} : void 0;

	exports.default = ImageGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function LabelDetail(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('detail', className);
	  var rest = (0, _lib.getUnhandledProps)(LabelDetail, props);
	  var ElementType = (0, _lib.getElementType)(LabelDetail, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	LabelDetail.handledProps = ['as', 'children', 'className', 'content'];
	LabelDetail._meta = {
	  name: 'LabelDetail',
	  parent: 'Label',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? LabelDetail.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = LabelDetail;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A label can be grouped.
	 */
	function LabelGroup(props) {
	  var children = props.children,
	      circular = props.circular,
	      className = props.className,
	      color = props.color,
	      size = props.size,
	      tag = props.tag;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(tag, 'tag'), 'labels', className);
	  var rest = (0, _lib.getUnhandledProps)(LabelGroup, props);
	  var ElementType = (0, _lib.getElementType)(LabelGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	LabelGroup.handledProps = ['as', 'children', 'circular', 'className', 'color', 'size', 'tag'];
	LabelGroup._meta = {
	  name: 'LabelGroup',
	  parent: 'Label',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? LabelGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Labels can share shapes. */
	  circular: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Label group can share colors together. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Label group can share sizes together. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** Label group can share tag formatting. */
	  tag: _propTypes2.default.bool
	} : void 0;

	exports.default = LabelGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Used in some Button types, such as `animated`.
	 */
	function ButtonContent(props) {
	  var children = props.children,
	      className = props.className,
	      hidden = props.hidden,
	      visible = props.visible;

	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(hidden, 'hidden'), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(ButtonContent, props);
	  var ElementType = (0, _lib.getElementType)(ButtonContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	ButtonContent.handledProps = ['as', 'children', 'className', 'hidden', 'visible'];
	ButtonContent._meta = {
	  name: 'ButtonContent',
	  parent: 'Button',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ButtonContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Initially hidden, visible on hover. */
	  hidden: _propTypes2.default.bool,

	  /** Initially visible, hidden on hover. */
	  visible: _propTypes2.default.bool
	} : void 0;

	exports.default = ButtonContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Buttons can be grouped.
	 */
	function ButtonGroup(props) {
	  var attached = props.attached,
	      basic = props.basic,
	      children = props.children,
	      className = props.className,
	      color = props.color,
	      compact = props.compact,
	      floated = props.floated,
	      fluid = props.fluid,
	      icon = props.icon,
	      inverted = props.inverted,
	      labeled = props.labeled,
	      negative = props.negative,
	      positive = props.positive,
	      primary = props.primary,
	      secondary = props.secondary,
	      size = props.size,
	      toggle = props.toggle,
	      vertical = props.vertical,
	      widths = props.widths;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(primary, 'primary'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(toggle, 'toggle'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useValueAndKey)(attached, 'attached'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useWidthProp)(widths), 'buttons', className);
	  var rest = (0, _lib.getUnhandledProps)(ButtonGroup, props);
	  var ElementType = (0, _lib.getElementType)(ButtonGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	ButtonGroup.handledProps = ['as', 'attached', 'basic', 'children', 'className', 'color', 'compact', 'floated', 'fluid', 'icon', 'inverted', 'labeled', 'negative', 'positive', 'primary', 'secondary', 'size', 'toggle', 'vertical', 'widths'];
	ButtonGroup._meta = {
	  name: 'ButtonGroup',
	  parent: 'Button',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ButtonGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A button can be attached to the top or bottom of other content. */
	  attached: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']),

	  /** Groups can be less pronounced. */
	  basic: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Groups can have a shared color. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Groups can reduce their padding to fit into tighter spaces. */
	  compact: _propTypes2.default.bool,

	  /** Groups can be aligned to the left or right of its container. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** Groups can take the width of their container. */
	  fluid: _propTypes2.default.bool,

	  /** Groups can be formatted as icons. */
	  icon: _propTypes2.default.bool,

	  /** Groups can be formatted to appear on dark backgrounds. */
	  inverted: _propTypes2.default.bool,

	  /** Groups can be formatted as labeled icon buttons. */
	  labeled: _propTypes2.default.bool,

	  /** Groups can hint towards a negative consequence. */
	  negative: _propTypes2.default.bool,

	  /** Groups can hint towards a positive consequence. */
	  positive: _propTypes2.default.bool,

	  /** Groups can be formatted to show different levels of emphasis. */
	  primary: _propTypes2.default.bool,

	  /** Groups can be formatted to show different levels of emphasis. */
	  secondary: _propTypes2.default.bool,

	  /** Groups can have different sizes. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** Groups can be formatted to toggle on and off. */
	  toggle: _propTypes2.default.bool,

	  /** Groups can be formatted to appear vertically. */
	  vertical: _propTypes2.default.bool,

	  /** Groups can have their widths divided evenly. */
	  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)
	} : void 0;

	exports.default = ButtonGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Button groups can contain conditionals.
	 */
	function ButtonOr(props) {
	  var className = props.className,
	      text = props.text;

	  var classes = (0, _classnames2.default)('or', className);
	  var rest = (0, _lib.getUnhandledProps)(ButtonOr, props);
	  var ElementType = (0, _lib.getElementType)(ButtonOr, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes, 'data-text': text }));
	}

	ButtonOr.handledProps = ['as', 'className', 'text'];
	ButtonOr._meta = {
	  name: 'ButtonOr',
	  parent: 'Button',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ButtonOr.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Or buttons can have their text localized, or adjusted by using the text prop. */
	  text: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
	} : void 0;

	exports.default = ButtonOr;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Modal = __webpack_require__(483);

	var _Modal2 = _interopRequireDefault(_Modal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Modal2.default;

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _pick2 = __webpack_require__(424);

	var _pick3 = _interopRequireDefault(_pick2);

	var _omit2 = __webpack_require__(484);

	var _omit3 = _interopRequireDefault(_omit2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Portal = __webpack_require__(473);

	var _Portal2 = _interopRequireDefault(_Portal);

	var _ModalHeader = __webpack_require__(488);

	var _ModalHeader2 = _interopRequireDefault(_ModalHeader);

	var _ModalContent = __webpack_require__(489);

	var _ModalContent2 = _interopRequireDefault(_ModalContent);

	var _ModalActions = __webpack_require__(490);

	var _ModalActions2 = _interopRequireDefault(_ModalActions);

	var _ModalDescription = __webpack_require__(491);

	var _ModalDescription2 = _interopRequireDefault(_ModalDescription);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('modal');

	/**
	 * A modal displays content that temporarily blocks interactions with the main view of a site.
	 * @see Confirm
	 * @see Portal
	 */

	var Modal = function (_Component) {
	  (0, _inherits3.default)(Modal, _Component);

	  function Modal() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Modal);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Modal.__proto__ || Object.getPrototypeOf(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.getMountNode = function () {
	      return _lib.isBrowser ? _this.props.mountNode || document.body : null;
	    }, _this.handleActionsOverrides = function (predefinedProps) {
	      return {
	        onActionClick: function onActionClick(e, actionProps) {
	          var triggerClose = actionProps.triggerClose;


	          (0, _invoke3.default)(predefinedProps, 'onActionClick', e, actionProps);
	          if (triggerClose) _this.handleClose(e);
	        }
	      };
	    }, _this.handleClose = function (e) {
	      debug('close()');

	      var onClose = _this.props.onClose;

	      if (onClose) onClose(e, _this.props);

	      _this.trySetState({ open: false });
	    }, _this.handleIconOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e) {
	          (0, _invoke3.default)(predefinedProps, 'onClick', e);
	          _this.handleClose(e);
	        }
	      };
	    }, _this.handleOpen = function (e) {
	      debug('open()');

	      var onOpen = _this.props.onOpen;

	      if (onOpen) onOpen(e, _this.props);

	      _this.trySetState({ open: true });
	    }, _this.handlePortalMount = function (e) {
	      debug('handlePortalMount()');
	      var dimmer = _this.props.dimmer;

	      var mountNode = _this.getMountNode();

	      if (dimmer) {
	        debug('adding dimmer');
	        mountNode.classList.add('dimmable', 'dimmed');

	        if (dimmer === 'blurring') {
	          debug('adding blurred dimmer');
	          mountNode.classList.add('blurring');
	        }
	      }

	      _this.setPosition();

	      var onMount = _this.props.onMount;

	      if (onMount) onMount(e, _this.props);
	    }, _this.handlePortalUnmount = function (e) {
	      debug('handlePortalUnmount()');

	      // Always remove all dimmer classes.
	      // If the dimmer value changes while the modal is open, then removing its
	      // current value could leave cruft classes previously added.
	      var mountNode = _this.getMountNode();
	      mountNode.classList.remove('blurring', 'dimmable', 'dimmed', 'scrollable');

	      cancelAnimationFrame(_this.animationRequestId);

	      var onUnmount = _this.props.onUnmount;

	      if (onUnmount) onUnmount(e, _this.props);
	    }, _this.handleRef = function (c) {
	      return _this.ref = c;
	    }, _this.setPosition = function () {
	      if (_this.ref) {
	        var mountNode = _this.getMountNode();

	        var _this$ref$getBounding = _this.ref.getBoundingClientRect(),
	            height = _this$ref$getBounding.height;

	        var marginTop = -Math.round(height / 2);
	        var scrolling = height >= window.innerHeight;

	        var newState = {};

	        if (_this.state.marginTop !== marginTop) {
	          newState.marginTop = marginTop;
	        }

	        if (_this.state.scrolling !== scrolling) {
	          newState.scrolling = scrolling;

	          if (scrolling) {
	            mountNode.classList.add('scrolling');
	          } else {
	            mountNode.classList.remove('scrolling');
	          }
	        }

	        if (Object.keys(newState).length > 0) _this.setState(newState);
	      }

	      _this.animationRequestId = requestAnimationFrame(_this.setPosition);
	    }, _this.renderContent = function (rest) {
	      var _this$props = _this.props,
	          actions = _this$props.actions,
	          basic = _this$props.basic,
	          children = _this$props.children,
	          className = _this$props.className,
	          closeIcon = _this$props.closeIcon,
	          content = _this$props.content,
	          header = _this$props.header,
	          size = _this$props.size,
	          style = _this$props.style;
	      var _this$state = _this.state,
	          marginTop = _this$state.marginTop,
	          scrolling = _this$state.scrolling;


	      var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'modal transition visible active', className);
	      var ElementType = (0, _lib.getElementType)(Modal, _this.props);

	      var closeIconName = closeIcon === true ? 'close' : closeIcon;
	      var closeIconJSX = _Icon2.default.create(closeIconName, { overrideProps: _this.handleIconOverrides });

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes, style: (0, _extends3.default)({ marginTop: marginTop }, style), ref: _this.handleRef }),
	          closeIconJSX,
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, style: (0, _extends3.default)({ marginTop: marginTop }, style), ref: _this.handleRef }),
	        closeIconJSX,
	        _ModalHeader2.default.create(header),
	        _ModalContent2.default.create(content),
	        _ModalActions2.default.create(actions, { overrideProps: _this.handleActionsOverrides })
	      );
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Modal, [{
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      debug('componentWillUnmount()');
	      this.handlePortalUnmount();
	    }

	    // Do not access document when server side rendering

	  }, {
	    key: 'render',
	    value: function render() {
	      var open = this.state.open;
	      var _props = this.props,
	          closeOnDimmerClick = _props.closeOnDimmerClick,
	          closeOnDocumentClick = _props.closeOnDocumentClick,
	          dimmer = _props.dimmer;

	      var mountNode = this.getMountNode();

	      // Short circuit when server side rendering
	      if (!_lib.isBrowser) return null;

	      var unhandled = (0, _lib.getUnhandledProps)(Modal, this.props);
	      var portalPropNames = _Portal2.default.handledProps;

	      var rest = (0, _omit3.default)(unhandled, portalPropNames);
	      var portalProps = (0, _pick3.default)(unhandled, portalPropNames);

	      // wrap dimmer modals
	      var dimmerClasses = !dimmer ? null : (0, _classnames2.default)('ui', dimmer === 'inverted' && 'inverted', 'page modals dimmer transition visible active');

	      // Heads up!
	      //
	      // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:
	      // .blurring.dimmed.dimmable>:not(.dimmer) { ... }
	      //
	      // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.
	      // We need the immediate child to be the dimmer to :not() blur the modal itself!
	      // Otherwise, the portal div is also blurred, blurring the modal.
	      //
	      // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.

	      return _react2.default.createElement(
	        _Portal2.default,
	        (0, _extends3.default)({
	          closeOnDocumentClick: closeOnDocumentClick,
	          closeOnRootNodeClick: closeOnDimmerClick
	        }, portalProps, {
	          className: dimmerClasses,
	          mountNode: mountNode,
	          open: open,
	          onClose: this.handleClose,
	          onMount: this.handlePortalMount,
	          onOpen: this.handleOpen,
	          onUnmount: this.handlePortalUnmount
	        }),
	        this.renderContent(rest)
	      );
	    }
	  }]);
	  return Modal;
	}(_lib.AutoControlledComponent);

	Modal.defaultProps = {
	  dimmer: true,
	  closeOnDimmerClick: true,
	  closeOnDocumentClick: false
	};
	Modal.autoControlledProps = ['open'];
	Modal._meta = {
	  name: 'Modal',
	  type: _lib.META.TYPES.MODULE
	};
	Modal.Header = _ModalHeader2.default;
	Modal.Content = _ModalContent2.default;
	Modal.Description = _ModalDescription2.default;
	Modal.Actions = _ModalActions2.default;
	Modal.handledProps = ['actions', 'as', 'basic', 'children', 'className', 'closeIcon', 'closeOnDimmerClick', 'closeOnDocumentClick', 'content', 'defaultOpen', 'dimmer', 'header', 'mountNode', 'onClose', 'onMount', 'onOpen', 'onUnmount', 'open', 'size', 'style'];
	process.env.NODE_ENV !== "production" ? Modal.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Elements to render as Modal action buttons. */
	  actions: _propTypes2.default.arrayOf(_lib.customPropTypes.itemShorthand),

	  /** A modal can reduce its complexity */
	  basic: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Icon. */
	  closeIcon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object, _propTypes2.default.bool]),

	  /** Whether or not the Modal should close when the dimmer is clicked. */
	  closeOnDimmerClick: _propTypes2.default.bool,

	  /** Whether or not the Modal should close when the document is clicked. */
	  closeOnDocumentClick: _propTypes2.default.bool,

	  /** Simple text content for the Modal. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Initial value of open. */
	  defaultOpen: _propTypes2.default.bool,

	  /** A Modal can appear in a dimmer. */
	  dimmer: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['inverted', 'blurring'])]),

	  /** Modal displayed above the content in bold. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** The node where the modal should mount. Defaults to document.body. */
	  mountNode: _propTypes2.default.any,

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes2.default.func,

	  /**
	   * Called when the portal is mounted on the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes2.default.func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes2.default.func,

	  /**
	   * Called when the portal is unmounted from the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes2.default.func,

	  /** Controls whether or not the Modal is displayed. */
	  open: _propTypes2.default.bool,

	  /** A modal can vary in size */
	  size: _propTypes2.default.oneOf(['fullscreen', 'large', 'small']),

	  /** Custom styles. */
	  style: _propTypes2.default.object

	} : void 0;
	exports.default = Modal;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayMap = __webpack_require__(171),
	    baseClone = __webpack_require__(382),
	    baseUnset = __webpack_require__(485),
	    castPath = __webpack_require__(123),
	    copyObject = __webpack_require__(378),
	    customOmitClone = __webpack_require__(486),
	    flatRest = __webpack_require__(409),
	    getAllKeysIn = __webpack_require__(391);

	/** Used to compose bitmasks for cloning. */
	var CLONE_DEEP_FLAG = 1,
	    CLONE_FLAT_FLAG = 2,
	    CLONE_SYMBOLS_FLAG = 4;

	/**
	 * The opposite of `_.pick`; this method creates an object composed of the
	 * own and inherited enumerable property paths of `object` that are not omitted.
	 *
	 * **Note:** This method is considerably slower than `_.pick`.
	 *
	 * @static
	 * @since 0.1.0
	 * @memberOf _
	 * @category Object
	 * @param {Object} object The source object.
	 * @param {...(string|string[])} [paths] The property paths to omit.
	 * @returns {Object} Returns the new object.
	 * @example
	 *
	 * var object = { 'a': 1, 'b': '2', 'c': 3 };
	 *
	 * _.omit(object, ['a', 'c']);
	 * // => { 'b': '2' }
	 */
	var omit = flatRest(function(object, paths) {
	  var result = {};
	  if (object == null) {
	    return result;
	  }
	  var isDeep = false;
	  paths = arrayMap(paths, function(path) {
	    path = castPath(path, object);
	    isDeep || (isDeep = path.length > 1);
	    return path;
	  });
	  copyObject(object, getAllKeysIn(object), result);
	  if (isDeep) {
	    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
	  }
	  var length = paths.length;
	  while (length--) {
	    baseUnset(result, paths[length]);
	  }
	  return result;
	});

	module.exports = omit;


/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

	var castPath = __webpack_require__(123),
	    last = __webpack_require__(180),
	    parent = __webpack_require__(181),
	    toKey = __webpack_require__(176);

	/**
	 * The base implementation of `_.unset`.
	 *
	 * @private
	 * @param {Object} object The object to modify.
	 * @param {Array|string} path The property path to unset.
	 * @returns {boolean} Returns `true` if the property is deleted, else `false`.
	 */
	function baseUnset(object, path) {
	  path = castPath(path, object);
	  object = parent(object, path);
	  return object == null || delete object[toKey(last(path))];
	}

	module.exports = baseUnset;


/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

	var isPlainObject = __webpack_require__(301);

	/**
	 * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
	 * objects.
	 *
	 * @private
	 * @param {*} value The value to inspect.
	 * @param {string} key The key of the property to inspect.
	 * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
	 */
	function customOmitClone(value) {
	  return isPlainObject(value) ? undefined : value;
	}

	module.exports = customOmitClone;


/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Icon = __webpack_require__(466);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Icon2.default;

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A modal can have a header.
	 */
	function ModalHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)(className, 'header');
	  var rest = (0, _lib.getUnhandledProps)(ModalHeader, props);
	  var ElementType = (0, _lib.getElementType)(ModalHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ModalHeader.handledProps = ['as', 'children', 'className', 'content'];
	ModalHeader._meta = {
	  name: 'ModalHeader',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Modal'
	};

	process.env.NODE_ENV !== "production" ? ModalHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ModalHeader.create = (0, _lib.createShorthandFactory)(ModalHeader, function (content) {
	  return { content: content };
	});

	exports.default = ModalHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A modal can contain content.
	 */
	function ModalContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      image = props.image;


	  var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(image, 'image'), 'content');
	  var rest = (0, _lib.getUnhandledProps)(ModalContent, props);
	  var ElementType = (0, _lib.getElementType)(ModalContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ModalContent.handledProps = ['as', 'children', 'className', 'content', 'image'];
	ModalContent._meta = {
	  name: 'ModalContent',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Modal'
	};

	process.env.NODE_ENV !== "production" ? ModalContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A modal can contain image content. */
	  image: _propTypes2.default.bool
	} : void 0;

	ModalContent.create = (0, _lib.createShorthandFactory)(ModalContent, function (content) {
	  return { content: content };
	});

	exports.default = ModalContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Button = __webpack_require__(464);

	var _Button2 = _interopRequireDefault(_Button);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A modal can contain a row of actions.
	 */
	var ModalActions = function (_Component) {
	  (0, _inherits3.default)(ModalActions, _Component);

	  function ModalActions() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, ModalActions);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ModalActions.__proto__ || Object.getPrototypeOf(ModalActions)).call.apply(_ref, [this].concat(args))), _this), _this.handleButtonOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e, buttonProps) {
	          (0, _invoke3.default)(predefinedProps, 'onClick', e, buttonProps);
	          (0, _invoke3.default)(_this.props, 'onActionClick', e, buttonProps);
	        }
	      };
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(ModalActions, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          actions = _props.actions,
	          children = _props.children,
	          className = _props.className;

	      var classes = (0, _classnames2.default)('actions', className);
	      var rest = (0, _lib.getUnhandledProps)(ModalActions, this.props);
	      var ElementType = (0, _lib.getElementType)(ModalActions, this.props);

	      if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        children
	      );

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        (0, _map3.default)(actions, function (action) {
	          return _Button2.default.create(action, { overrideProps: _this2.handleButtonOverrides });
	        })
	      );
	    }
	  }]);
	  return ModalActions;
	}(_react.Component);

	ModalActions._meta = {
	  name: 'ModalActions',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Modal'
	};
	ModalActions.handledProps = ['actions', 'as', 'children', 'className', 'onActionClick'];
	exports.default = ModalActions;
	process.env.NODE_ENV !== "production" ? ModalActions.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Elements to render as Modal action buttons. */
	  actions: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.arrayOf(_lib.customPropTypes.itemShorthand)]),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /**
	   * onClick handler for an action. Mutually exclusive with children.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onActionClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.func])
	} : void 0;


	ModalActions.create = (0, _lib.createShorthandFactory)(ModalActions, function (actions) {
	  return { actions: actions };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A modal can have a header.
	 */
	function ModalDescription(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)('description', className);
	  var rest = (0, _lib.getUnhandledProps)(ModalDescription, props);
	  var ElementType = (0, _lib.getElementType)(ModalDescription, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	ModalDescription.handledProps = ['as', 'children', 'className'];
	ModalDescription._meta = {
	  name: 'ModalDescription',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Modal'
	};

	process.env.NODE_ENV !== "production" ? ModalDescription.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = ModalDescription;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Radio = __webpack_require__(493);

	var _Radio2 = _interopRequireDefault(_Radio);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Radio2.default;

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Checkbox = __webpack_require__(494);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A Radio is sugar for <Checkbox radio />.
	 * Useful for exclusive groups of sliders or toggles.
	 * @see Checkbox
	 * @see Form
	 */
	function Radio(props) {
	  var slider = props.slider,
	      toggle = props.toggle,
	      type = props.type;

	  var rest = (0, _lib.getUnhandledProps)(Radio, props);
	  // const ElementType = getElementType(Radio, props)
	  // radio, slider, toggle are exclusive
	  // use an undefined radio if slider or toggle are present
	  var radio = !(slider || toggle) || undefined;

	  return _react2.default.createElement(_Checkbox2.default, (0, _extends3.default)({}, rest, { type: type, radio: radio, slider: slider, toggle: toggle }));
	}

	Radio.handledProps = ['slider', 'toggle', 'type'];
	Radio._meta = {
	  name: 'Radio',
	  type: _lib.META.TYPES.ADDON
	};

	process.env.NODE_ENV !== "production" ? Radio.propTypes = {
	  /** Format to emphasize the current selection state. */
	  slider: _Checkbox2.default.propTypes.slider,

	  /** Format to show an on or off choice. */
	  toggle: _Checkbox2.default.propTypes.toggle,

	  /** HTML input type, either checkbox or radio. */
	  type: _Checkbox2.default.propTypes.type
	} : void 0;

	Radio.defaultProps = {
	  type: 'radio'
	};

	exports.default = Radio;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Checkbox = __webpack_require__(495);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Checkbox2.default;

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _invoke2 = __webpack_require__(496);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _isNil2 = __webpack_require__(455);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('checkbox');

	/**
	 * A checkbox allows a user to select a value from a small set of options, often binary.
	 * @see Form
	 * @see Radio
	 */

	var Checkbox = function (_Component) {
	  (0, _inherits3.default)(Checkbox, _Component);

	  function Checkbox() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Checkbox);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.canToggle = function () {
	      var _this$props = _this.props,
	          disabled = _this$props.disabled,
	          radio = _this$props.radio,
	          readOnly = _this$props.readOnly;
	      var checked = _this.state.checked;


	      return !disabled && !readOnly && !(radio && checked);
	    }, _this.computeTabIndex = function () {
	      var _this$props2 = _this.props,
	          disabled = _this$props2.disabled,
	          tabIndex = _this$props2.tabIndex;


	      if (!(0, _isNil3.default)(tabIndex)) return tabIndex;
	      return disabled ? -1 : 0;
	    }, _this.handleInputRef = function (c) {
	      return _this.inputRef = c;
	    }, _this.handleClick = function (e) {
	      debug('handleClick()');

	      var _this$props3 = _this.props,
	          onChange = _this$props3.onChange,
	          onClick = _this$props3.onClick;
	      var _this$state = _this.state,
	          checked = _this$state.checked,
	          indeterminate = _this$state.indeterminate;


	      if (_this.canToggle()) {
	        if (onClick) onClick(e, (0, _extends3.default)({}, _this.props, { checked: !!checked, indeterminate: !!indeterminate }));
	        if (onChange) onChange(e, (0, _extends3.default)({}, _this.props, { checked: !checked, indeterminate: false }));

	        _this.trySetState({ checked: !checked, indeterminate: false });
	      }
	    }, _this.handleMouseDown = function (e) {
	      debug('handleMouseDown()');

	      var onMouseDown = _this.props.onMouseDown;
	      var _this$state2 = _this.state,
	          checked = _this$state2.checked,
	          indeterminate = _this$state2.indeterminate;


	      (0, _invoke3.default)('focus', _this.inputRef);
	      if (onMouseDown) onMouseDown(e, (0, _extends3.default)({}, _this.props, { checked: !!checked, indeterminate: !!indeterminate }));
	    }, _this.setIndeterminate = function () {
	      var indeterminate = _this.state.indeterminate;


	      if (_this.inputRef) _this.inputRef.indeterminate = !!indeterminate;
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Checkbox, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.setIndeterminate();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.setIndeterminate();
	    }

	    // Note: You can't directly set the indeterminate prop on the input, so we
	    // need to maintain a ref to the input and set it manually whenever the
	    // component updates.

	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          disabled = _props.disabled,
	          label = _props.label,
	          name = _props.name,
	          radio = _props.radio,
	          readOnly = _props.readOnly,
	          slider = _props.slider,
	          toggle = _props.toggle,
	          type = _props.type,
	          value = _props.value;
	      var _state = this.state,
	          checked = _state.checked,
	          indeterminate = _state.indeterminate;


	      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(checked, 'checked'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'),
	      // auto apply fitted class to compact white space when there is no label
	      // https://semantic-ui.com/modules/checkbox.html#fitted
	      (0, _lib.useKeyOnly)(!label, 'fitted'), (0, _lib.useKeyOnly)(radio, 'radio'), (0, _lib.useKeyOnly)(readOnly, 'read-only'), (0, _lib.useKeyOnly)(slider, 'slider'), (0, _lib.useKeyOnly)(toggle, 'toggle'), 'checkbox', className);
	      var rest = (0, _lib.getUnhandledProps)(Checkbox, this.props);
	      var ElementType = (0, _lib.getElementType)(Checkbox, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, {
	          className: classes,
	          onChange: this.handleClick,
	          onClick: this.handleClick,
	          onMouseDown: this.handleMouseDown
	        }),
	        _react2.default.createElement('input', {
	          checked: checked,
	          className: 'hidden',
	          name: name,
	          readOnly: true,
	          ref: this.handleInputRef,
	          tabIndex: this.computeTabIndex(),
	          type: type,
	          value: value
	        }),
	        (0, _lib.createHTMLLabel)(label) || _react2.default.createElement('label', null)
	      );
	    }
	  }]);
	  return Checkbox;
	}(_lib.AutoControlledComponent);

	Checkbox.defaultProps = {
	  type: 'checkbox'
	};
	Checkbox.autoControlledProps = ['checked', 'indeterminate'];
	Checkbox._meta = {
	  name: 'Checkbox',
	  type: _lib.META.TYPES.MODULE
	};
	Checkbox.handledProps = ['as', 'checked', 'className', 'defaultChecked', 'defaultIndeterminate', 'disabled', 'fitted', 'indeterminate', 'label', 'name', 'onChange', 'onClick', 'onMouseDown', 'radio', 'readOnly', 'slider', 'tabIndex', 'toggle', 'type', 'value'];
	exports.default = Checkbox;
	process.env.NODE_ENV !== "production" ? Checkbox.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Whether or not checkbox is checked. */
	  checked: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** The initial value of checked. */
	  defaultChecked: _propTypes2.default.bool,

	  /** Whether or not checkbox is indeterminate. */
	  defaultIndeterminate: _propTypes2.default.bool,

	  /** A checkbox can appear disabled and be unable to change states */
	  disabled: _propTypes2.default.bool,

	  /** Removes padding for a label. Auto applied when there is no label. */
	  fitted: _propTypes2.default.bool,

	  /** Whether or not checkbox is indeterminate. */
	  indeterminate: _propTypes2.default.bool,

	  /** The text of the associated label element. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** The HTML input name. */
	  name: _propTypes2.default.string,

	  /**
	   * Called when the user attempts to change the checked state.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed checked/indeterminate state.
	   */
	  onChange: _propTypes2.default.func,

	  /**
	   * Called when the checkbox or label is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and current checked/indeterminate state.
	   */
	  onClick: _propTypes2.default.func,

	  /**
	   * Called when the user presses down on the mouse.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and current checked/indeterminate state.
	   */
	  onMouseDown: _propTypes2.default.func,

	  /** Format as a radio element. This means it is an exclusive option. */
	  radio: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['slider', 'toggle'])]),

	  /** A checkbox can be read-only and unable to change states. */
	  readOnly: _propTypes2.default.bool,

	  /** Format to emphasize the current selection state. */
	  slider: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['radio', 'toggle'])]),

	  /** A checkbox can receive focus. */
	  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** Format to show an on or off choice. */
	  toggle: _lib.customPropTypes.every([_propTypes2.default.bool, _lib.customPropTypes.disallow(['radio', 'slider'])]),

	  /** HTML input type, either checkbox or radio. */
	  type: _propTypes2.default.oneOf(['checkbox', 'radio']),

	  /** The HTML input value. */
	  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(340),
	    func = convert('invoke', __webpack_require__(177));

	func.placeholder = __webpack_require__(343);
	module.exports = func;


/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Select = __webpack_require__(498);

	var _Select2 = _interopRequireDefault(_Select);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Select2.default;

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Dropdown = __webpack_require__(499);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A Select is sugar for <Dropdown selection />.
	 * @see Dropdown
	 * @see Form
	 */
	function Select(props) {
	  return _react2.default.createElement(_Dropdown2.default, (0, _extends3.default)({}, props, { selection: true }));
	}

	Select.handledProps = [];
	Select._meta = {
	  name: 'Select',
	  type: _lib.META.TYPES.ADDON
	};

	Select.Divider = _Dropdown2.default.Divider;
	Select.Header = _Dropdown2.default.Header;
	Select.Item = _Dropdown2.default.Item;
	Select.Menu = _Dropdown2.default.Menu;

	exports.default = Select;

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Dropdown = __webpack_require__(500);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Dropdown2.default;

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get3 = __webpack_require__(501);

	var _get4 = _interopRequireDefault(_get3);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _compact2 = __webpack_require__(432);

	var _compact3 = _interopRequireDefault(_compact2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _every2 = __webpack_require__(509);

	var _every3 = _interopRequireDefault(_every2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _findIndex2 = __webpack_require__(324);

	var _findIndex3 = _interopRequireDefault(_findIndex2);

	var _find2 = __webpack_require__(322);

	var _find3 = _interopRequireDefault(_find2);

	var _reduce2 = __webpack_require__(512);

	var _reduce3 = _interopRequireDefault(_reduce2);

	var _some2 = __webpack_require__(325);

	var _some3 = _interopRequireDefault(_some2);

	var _escapeRegExp2 = __webpack_require__(515);

	var _escapeRegExp3 = _interopRequireDefault(_escapeRegExp2);

	var _filter2 = __webpack_require__(223);

	var _filter3 = _interopRequireDefault(_filter2);

	var _isFunction2 = __webpack_require__(144);

	var _isFunction3 = _interopRequireDefault(_isFunction2);

	var _dropRight2 = __webpack_require__(516);

	var _dropRight3 = _interopRequireDefault(_dropRight2);

	var _isEmpty2 = __webpack_require__(281);

	var _isEmpty3 = _interopRequireDefault(_isEmpty2);

	var _union2 = __webpack_require__(517);

	var _union3 = _interopRequireDefault(_union2);

	var _get5 = __webpack_require__(275);

	var _get6 = _interopRequireDefault(_get5);

	var _includes2 = __webpack_require__(311);

	var _includes3 = _interopRequireDefault(_includes2);

	var _isUndefined2 = __webpack_require__(217);

	var _isUndefined3 = _interopRequireDefault(_isUndefined2);

	var _has2 = __webpack_require__(120);

	var _has3 = _interopRequireDefault(_has2);

	var _isEqual2 = __webpack_require__(318);

	var _isEqual3 = _interopRequireDefault(_isEqual2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Label = __webpack_require__(518);

	var _Label2 = _interopRequireDefault(_Label);

	var _DropdownDivider = __webpack_require__(519);

	var _DropdownDivider2 = _interopRequireDefault(_DropdownDivider);

	var _DropdownItem = __webpack_require__(520);

	var _DropdownItem2 = _interopRequireDefault(_DropdownItem);

	var _DropdownHeader = __webpack_require__(524);

	var _DropdownHeader2 = _interopRequireDefault(_DropdownHeader);

	var _DropdownMenu = __webpack_require__(525);

	var _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('dropdown');

	var getKeyOrValue = function getKeyOrValue(key, value) {
	  return (0, _isNil3.default)(key) ? value : key;
	};

	/**
	 * A dropdown allows a user to select a value from a series of options.
	 * @see Form
	 * @see Select
	 * @see Menu
	 */

	var Dropdown = function (_Component) {
	  (0, _inherits3.default)(Dropdown, _Component);

	  function Dropdown() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Dropdown);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call.apply(_ref, [this].concat(args))), _this), _this.handleChange = function (e, value) {
	      debug('handleChange()');
	      debug(value);
	      var onChange = _this.props.onChange;

	      if (onChange) onChange(e, (0, _extends3.default)({}, _this.props, { value: value }));
	    }, _this.closeOnChange = function (e) {
	      var _this$props = _this.props,
	          closeOnChange = _this$props.closeOnChange,
	          multiple = _this$props.multiple;

	      var shouldClose = (0, _isUndefined3.default)(closeOnChange) ? !multiple : closeOnChange;

	      if (shouldClose) _this.close(e);
	    }, _this.closeOnEscape = function (e) {
	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;
	      e.preventDefault();
	      _this.close();
	    }, _this.moveSelectionOnKeyDown = function (e) {
	      debug('moveSelectionOnKeyDown()');
	      debug(_lib.keyboardKey.getName(e));
	      switch (_lib.keyboardKey.getCode(e)) {
	        case _lib.keyboardKey.ArrowDown:
	          e.preventDefault();
	          _this.moveSelectionBy(1);
	          break;
	        case _lib.keyboardKey.ArrowUp:
	          e.preventDefault();
	          _this.moveSelectionBy(-1);
	          break;
	        default:
	          break;
	      }
	    }, _this.openOnSpace = function (e) {
	      debug('openOnSpace()');

	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Spacebar) return;
	      if (_this.state.open) return;

	      e.preventDefault();

	      _this.open(e);
	    }, _this.openOnArrow = function (e) {
	      debug('openOnArrow()');

	      var code = _lib.keyboardKey.getCode(e);
	      if (!(0, _includes3.default)([_lib.keyboardKey.ArrowDown, _lib.keyboardKey.ArrowUp], code)) return;
	      if (_this.state.open) return;

	      e.preventDefault();

	      _this.open(e);
	    }, _this.makeSelectedItemActive = function (e) {
	      var open = _this.state.open;
	      var _this$props2 = _this.props,
	          multiple = _this$props2.multiple,
	          onAddItem = _this$props2.onAddItem;

	      var item = _this.getSelectedItem();
	      var value = (0, _get6.default)(item, 'value');

	      // prevent selecting null if there was no selected item value
	      // prevent selecting duplicate items when the dropdown is closed
	      if (!value || !open) return;

	      // notify the onAddItem prop if this is a new value
	      if (onAddItem && item['data-additional']) {
	        onAddItem(e, (0, _extends3.default)({}, _this.props, { value: value }));
	      }
	      // notify the onChange prop that the user is trying to change value
	      if (multiple) {
	        // state value may be undefined
	        var newValue = (0, _union3.default)(_this.state.value, [value]);
	        _this.setValue(newValue);
	        _this.handleChange(e, newValue);
	      } else {
	        _this.setValue(value);
	        _this.handleChange(e, value);
	      }
	    }, _this.selectItemOnEnter = function (e) {
	      debug('selectItemOnEnter()');
	      debug(_lib.keyboardKey.getName(e));
	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;
	      e.preventDefault();

	      _this.makeSelectedItemActive(e);
	      _this.closeOnChange(e);
	    }, _this.removeItemOnBackspace = function (e) {
	      debug('removeItemOnBackspace()');
	      debug(_lib.keyboardKey.getName(e));
	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Backspace) return;

	      var _this$props3 = _this.props,
	          multiple = _this$props3.multiple,
	          search = _this$props3.search;
	      var _this$state = _this.state,
	          searchQuery = _this$state.searchQuery,
	          value = _this$state.value;


	      if (searchQuery || !search || !multiple || (0, _isEmpty3.default)(value)) return;

	      e.preventDefault();

	      // remove most recent value
	      var newValue = (0, _dropRight3.default)(value);

	      _this.setValue(newValue);
	      _this.handleChange(e, newValue);
	    }, _this.closeOnDocumentClick = function (e) {
	      debug('closeOnDocumentClick()');
	      debug(e);

	      // If event happened in the dropdown, ignore it
	      if (_this.ref && (0, _isFunction3.default)(_this.ref.contains) && _this.ref.contains(e.target)) return;

	      _this.close();
	    }, _this.handleMouseDown = function (e) {
	      debug('handleMouseDown()');
	      var onMouseDown = _this.props.onMouseDown;

	      if (onMouseDown) onMouseDown(e, _this.props);
	      _this.isMouseDown = true;
	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;
	      document.addEventListener('mouseup', _this.handleDocumentMouseUp);
	    }, _this.handleDocumentMouseUp = function () {
	      debug('handleDocumentMouseUp()');
	      _this.isMouseDown = false;
	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;
	      document.removeEventListener('mouseup', _this.handleDocumentMouseUp);
	    }, _this.handleClick = function (e) {
	      debug('handleClick()', e);
	      var onClick = _this.props.onClick;

	      if (onClick) onClick(e, _this.props);
	      // prevent closeOnDocumentClick()
	      e.stopPropagation();
	      _this.toggle(e);
	    }, _this.handleItemClick = function (e, item) {
	      debug('handleItemClick()');
	      debug(item);
	      var _this$props4 = _this.props,
	          multiple = _this$props4.multiple,
	          onAddItem = _this$props4.onAddItem;
	      var value = item.value;

	      // prevent toggle() in handleClick()

	      e.stopPropagation();
	      // prevent closeOnDocumentClick() if multiple or item is disabled
	      if (multiple || item.disabled) {
	        e.nativeEvent.stopImmediatePropagation();
	      }

	      if (item.disabled) return;

	      // notify the onAddItem prop if this is a new value
	      if (onAddItem && item['data-additional']) {
	        onAddItem(e, (0, _extends3.default)({}, _this.props, { value: value }));
	      }

	      // notify the onChange prop that the user is trying to change value
	      if (multiple) {
	        var newValue = (0, _union3.default)(_this.state.value, [value]);
	        _this.setValue(newValue);
	        _this.handleChange(e, newValue);
	      } else {
	        _this.setValue(value);
	        _this.handleChange(e, value);
	      }
	      _this.closeOnChange(e);
	    }, _this.handleFocus = function (e) {
	      debug('handleFocus()');
	      var onFocus = _this.props.onFocus;
	      var focus = _this.state.focus;

	      if (focus) return;
	      if (onFocus) onFocus(e, _this.props);
	      _this.setState({ focus: true });
	    }, _this.handleBlur = function (e) {
	      debug('handleBlur()');

	      // Heads up! Don't remove this.
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/1315
	      var currentTarget = (0, _get6.default)(e, 'currentTarget');
	      if (currentTarget && currentTarget.contains(document.activeElement)) return;

	      var _this$props5 = _this.props,
	          closeOnBlur = _this$props5.closeOnBlur,
	          multiple = _this$props5.multiple,
	          onBlur = _this$props5.onBlur,
	          selectOnBlur = _this$props5.selectOnBlur;
	      // do not "blur" when the mouse is down inside of the Dropdown

	      if (_this.isMouseDown) return;
	      if (onBlur) onBlur(e, _this.props);
	      if (selectOnBlur && !multiple) {
	        _this.makeSelectedItemActive(e);
	        if (closeOnBlur) _this.close();
	      }
	      _this.setState({ focus: false, searchQuery: '' });
	    }, _this.handleSearchChange = function (e) {
	      debug('handleSearchChange()');
	      debug(e.target.value);
	      // prevent propagating to this.props.onChange()
	      e.stopPropagation();
	      var _this$props6 = _this.props,
	          search = _this$props6.search,
	          onSearchChange = _this$props6.onSearchChange,
	          minCharacters = _this$props6.minCharacters;
	      var open = _this.state.open;

	      var newQuery = e.target.value;

	      if (onSearchChange) onSearchChange(e, newQuery);

	      if (newQuery.length >= minCharacters) {
	        // open search dropdown on search query
	        if (search && newQuery && !open) _this.open();

	        _this.setState({
	          selectedIndex: 0,
	          searchQuery: newQuery
	        });
	      }
	    }, _this.getMenuOptions = function () {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
	      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
	      var _this$props7 = _this.props,
	          multiple = _this$props7.multiple,
	          search = _this$props7.search,
	          allowAdditions = _this$props7.allowAdditions,
	          additionPosition = _this$props7.additionPosition,
	          additionLabel = _this$props7.additionLabel;
	      var searchQuery = _this.state.searchQuery;


	      var filteredOptions = options;

	      // filter out active options
	      if (multiple) {
	        filteredOptions = (0, _filter3.default)(filteredOptions, function (opt) {
	          return !(0, _includes3.default)(value, opt.value);
	        });
	      }

	      // filter by search query
	      if (search && searchQuery) {
	        if ((0, _isFunction3.default)(search)) {
	          filteredOptions = search(filteredOptions, searchQuery);
	        } else {
	          var re = new RegExp((0, _escapeRegExp3.default)(searchQuery), 'i');
	          filteredOptions = (0, _filter3.default)(filteredOptions, function (opt) {
	            return re.test(opt.text);
	          });
	        }
	      }

	      // insert the "add" item
	      if (allowAdditions && search && searchQuery && !(0, _some3.default)(filteredOptions, { text: searchQuery })) {
	        var additionLabelElement = _react2.default.isValidElement(additionLabel) ? _react2.default.cloneElement(additionLabel, { key: 'addition-label' }) : additionLabel || '';

	        var addItem = {
	          key: 'addition',
	          // by using an array, we can pass multiple elements, but when doing so
	          // we must specify a `key` for React to know which one is which
	          text: [additionLabelElement, _react2.default.createElement(
	            'b',
	            { key: 'addition-query' },
	            searchQuery
	          )],
	          value: searchQuery,
	          className: 'addition',
	          'data-additional': true
	        };
	        if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);
	      }

	      return filteredOptions;
	    }, _this.getSelectedItem = function () {
	      var selectedIndex = _this.state.selectedIndex;

	      var options = _this.getMenuOptions();

	      return (0, _get6.default)(options, '[' + selectedIndex + ']');
	    }, _this.getEnabledIndices = function (givenOptions) {
	      var options = givenOptions || _this.getMenuOptions();

	      return (0, _reduce3.default)(options, function (memo, item, index) {
	        if (!item.disabled) memo.push(index);
	        return memo;
	      }, []);
	    }, _this.getItemByValue = function (value) {
	      var options = _this.props.options;


	      return (0, _find3.default)(options, { value: value });
	    }, _this.getMenuItemIndexByValue = function (value, givenOptions) {
	      var options = givenOptions || _this.getMenuOptions();

	      return (0, _findIndex3.default)(options, ['value', value]);
	    }, _this.getDropdownAriaOptions = function (ElementType) {
	      var _this$props8 = _this.props,
	          loading = _this$props8.loading,
	          disabled = _this$props8.disabled,
	          search = _this$props8.search,
	          multiple = _this$props8.multiple;
	      var open = _this.state.open;

	      var ariaOptions = {
	        role: search ? 'combobox' : 'listbox',
	        'aria-busy': loading,
	        'aria-disabled': disabled,
	        'aria-expanded': !!open
	      };
	      if (ariaOptions.role === 'listbox') {
	        ariaOptions['aria-multiselectable'] = multiple;
	      }
	      return ariaOptions;
	    }, _this.setValue = function (value) {
	      debug('setValue()');
	      debug('value', value);
	      var newState = {
	        searchQuery: ''
	      };

	      var _this$props9 = _this.props,
	          multiple = _this$props9.multiple,
	          search = _this$props9.search;

	      if (multiple && search && _this.searchRef) _this.searchRef.focus();

	      _this.trySetState({ value: value }, newState);
	      _this.setSelectedIndex(value);
	    }, _this.setSelectedIndex = function () {
	      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
	      var optionsProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
	      var multiple = _this.props.multiple;
	      var selectedIndex = _this.state.selectedIndex;

	      var options = _this.getMenuOptions(value, optionsProps);
	      var enabledIndicies = _this.getEnabledIndices(options);

	      var newSelectedIndex = void 0;

	      // update the selected index
	      if (!selectedIndex || selectedIndex < 0) {
	        var firstIndex = enabledIndicies[0];

	        // Select the currently active item, if none, use the first item.
	        // Multiple selects remove active items from the list,
	        // their initial selected index should be 0.
	        newSelectedIndex = multiple ? firstIndex : _this.getMenuItemIndexByValue(value, options) || enabledIndicies[0];
	      } else if (multiple) {
	        // multiple selects remove options from the menu as they are made active
	        // keep the selected index within range of the remaining items
	        if (selectedIndex >= options.length - 1) {
	          newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];
	        }
	      } else {
	        var activeIndex = _this.getMenuItemIndexByValue(value, options);

	        // regular selects can only have one active item
	        // set the selected index to the currently active item
	        newSelectedIndex = (0, _includes3.default)(enabledIndicies, activeIndex) ? activeIndex : undefined;
	      }

	      if (!newSelectedIndex || newSelectedIndex < 0) {
	        newSelectedIndex = enabledIndicies[0];
	      }

	      _this.setState({ selectedIndex: newSelectedIndex });
	    }, _this.handleLabelClick = function (e, labelProps) {
	      debug('handleLabelClick()');
	      // prevent focusing search input on click
	      e.stopPropagation();

	      _this.setState({ selectedLabel: labelProps.value });

	      var onLabelClick = _this.props.onLabelClick;

	      if (onLabelClick) onLabelClick(e, labelProps);
	    }, _this.handleLabelRemove = function (e, labelProps) {
	      debug('handleLabelRemove()');
	      // prevent focusing search input on click
	      e.stopPropagation();
	      var value = _this.state.value;

	      var newValue = (0, _without3.default)(value, labelProps.value);
	      debug('label props:', labelProps);
	      debug('current value:', value);
	      debug('remove value:', labelProps.value);
	      debug('new value:', newValue);

	      _this.setValue(newValue);
	      _this.handleChange(e, newValue);
	    }, _this.moveSelectionBy = function (offset) {
	      var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.selectedIndex;

	      debug('moveSelectionBy()');
	      debug('offset: ' + offset);

	      var options = _this.getMenuOptions();
	      var lastIndex = options.length - 1;

	      // Prevent infinite loop
	      if ((0, _every3.default)(options, 'disabled')) return;

	      // next is after last, wrap to beginning
	      // next is before first, wrap to end
	      var nextIndex = startIndex + offset;
	      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

	      if (options[nextIndex].disabled) return _this.moveSelectionBy(offset, nextIndex);

	      _this.setState({ selectedIndex: nextIndex });
	      _this.scrollSelectedItemIntoView();
	    }, _this.handleSearchRef = function (c) {
	      return _this.searchRef = c;
	    }, _this.handleSizerRef = function (c) {
	      return _this.sizerRef = c;
	    }, _this.handleRef = function (c) {
	      return _this.ref = c;
	    }, _this.scrollSelectedItemIntoView = function () {
	      debug('scrollSelectedItemIntoView()');
	      if (!_this.ref) return;
	      var menu = _this.ref.querySelector('.menu.visible');
	      if (!menu) return;
	      var item = menu.querySelector('.item.selected');
	      if (!item) return;
	      debug('menu: ' + menu);
	      debug('item: ' + item);
	      var isOutOfUpperView = item.offsetTop < menu.scrollTop;
	      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

	      if (isOutOfUpperView) {
	        menu.scrollTop = item.offsetTop;
	      } else if (isOutOfLowerView) {
	        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
	      }
	    }, _this.open = function (e) {
	      debug('open()');

	      var _this$props10 = _this.props,
	          disabled = _this$props10.disabled,
	          onOpen = _this$props10.onOpen,
	          search = _this$props10.search;

	      if (disabled) return;
	      if (search && _this.searchRef) _this.searchRef.focus();
	      if (onOpen) onOpen(e, _this.props);

	      _this.trySetState({ open: true });
	      _this.scrollSelectedItemIntoView();
	    }, _this.close = function (e) {
	      debug('close()');

	      var onClose = _this.props.onClose;

	      if (onClose) onClose(e, _this.props);

	      _this.trySetState({ open: false });
	    }, _this.handleClose = function () {
	      debug('handleClose()');
	      var hasSearchFocus = document.activeElement === _this.searchRef;
	      var hasDropdownFocus = document.activeElement === _this.ref;
	      var hasFocus = hasSearchFocus || hasDropdownFocus;
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/627
	      // Blur the Dropdown on close so it is blurred after selecting an item.
	      // This is to prevent it from re-opening when switching tabs after selecting an item.
	      if (!hasSearchFocus) {
	        _this.ref.blur();
	      }

	      // We need to keep the virtual model in sync with the browser focus change
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/692
	      _this.setState({ focus: hasFocus });
	    }, _this.toggle = function (e) {
	      if (!_this.state.open) {
	        _this.open(e);
	        return;
	      }

	      var search = _this.props.search;

	      var options = _this.getMenuOptions();

	      if (search && (0, _isEmpty3.default)(options)) {
	        e.preventDefault();
	        return;
	      }

	      _this.close(e);
	    }, _this.renderText = function () {
	      var _this$props11 = _this.props,
	          multiple = _this$props11.multiple,
	          placeholder = _this$props11.placeholder,
	          search = _this$props11.search,
	          text = _this$props11.text;
	      var _this$state2 = _this.state,
	          searchQuery = _this$state2.searchQuery,
	          value = _this$state2.value,
	          open = _this$state2.open;

	      var hasValue = multiple ? !(0, _isEmpty3.default)(value) : !(0, _isNil3.default)(value) && value !== '';

	      var classes = (0, _classnames2.default)(placeholder && !hasValue && 'default', 'text', search && searchQuery && 'filtered');
	      var _text = placeholder;
	      if (searchQuery) {
	        _text = null;
	      } else if (text) {
	        _text = text;
	      } else if (open && !multiple) {
	        _text = (0, _get6.default)(_this.getSelectedItem(), 'text');
	      } else if (hasValue) {
	        _text = (0, _get6.default)(_this.getItemByValue(value), 'text');
	      }

	      return _react2.default.createElement(
	        'div',
	        { className: classes },
	        _text
	      );
	    }, _this.renderHiddenInput = function () {
	      debug('renderHiddenInput()');
	      var value = _this.state.value;
	      var _this$props12 = _this.props,
	          multiple = _this$props12.multiple,
	          name = _this$props12.name,
	          options = _this$props12.options,
	          selection = _this$props12.selection;

	      debug('name:      ' + name);
	      debug('selection: ' + selection);
	      debug('value:     ' + value);
	      if (!selection) return null;

	      // a dropdown without an active item will have an empty string value
	      return _react2.default.createElement(
	        'select',
	        { type: 'hidden', 'aria-hidden': 'true', name: name, value: value, multiple: multiple },
	        _react2.default.createElement('option', { value: '' }),
	        (0, _map3.default)(options, function (option, i) {
	          return _react2.default.createElement(
	            'option',
	            { key: getKeyOrValue(option.key, option.value), value: option.value },
	            option.text
	          );
	        })
	      );
	    }, _this.renderSearchInput = function () {
	      var _this$props13 = _this.props,
	          disabled = _this$props13.disabled,
	          search = _this$props13.search,
	          name = _this$props13.name,
	          tabIndex = _this$props13.tabIndex;
	      var searchQuery = _this.state.searchQuery;


	      if (!search) return null;

	      // tabIndex
	      var computedTabIndex = void 0;
	      if (!(0, _isNil3.default)(tabIndex)) computedTabIndex = tabIndex;else computedTabIndex = disabled ? -1 : 0;

	      // resize the search input, temporarily show the sizer so we can measure it
	      var searchWidth = void 0;
	      if (_this.sizerRef && searchQuery) {
	        _this.sizerRef.style.display = 'inline';
	        _this.sizerRef.textContent = searchQuery;
	        searchWidth = Math.ceil(_this.sizerRef.getBoundingClientRect().width);
	        _this.sizerRef.style.removeProperty('display');
	      }

	      return _react2.default.createElement('input', {
	        value: searchQuery,
	        type: 'text',
	        'aria-autocomplete': 'list',
	        onChange: _this.handleSearchChange,
	        className: 'search',
	        name: [name, 'search'].join('-'),
	        autoComplete: 'off',
	        tabIndex: computedTabIndex,
	        style: { width: searchWidth },
	        ref: _this.handleSearchRef
	      });
	    }, _this.renderSearchSizer = function () {
	      var _this$props14 = _this.props,
	          search = _this$props14.search,
	          multiple = _this$props14.multiple;


	      if (!(search && multiple)) return null;
	      return _react2.default.createElement('span', { className: 'sizer', ref: _this.handleSizerRef });
	    }, _this.renderLabels = function () {
	      debug('renderLabels()');
	      var _this$props15 = _this.props,
	          multiple = _this$props15.multiple,
	          renderLabel = _this$props15.renderLabel;
	      var _this$state3 = _this.state,
	          selectedLabel = _this$state3.selectedLabel,
	          value = _this$state3.value;

	      if (!multiple || (0, _isEmpty3.default)(value)) {
	        return;
	      }
	      var selectedItems = (0, _map3.default)(value, _this.getItemByValue);
	      debug('selectedItems', selectedItems);

	      // if no item could be found for a given state value the selected item will be undefined
	      // compact the selectedItems so we only have actual objects left
	      return (0, _map3.default)((0, _compact3.default)(selectedItems), function (item, index) {
	        var defaultProps = {
	          active: item.value === selectedLabel,
	          as: 'a',
	          key: getKeyOrValue(item.key, item.value),
	          onClick: _this.handleLabelClick,
	          onRemove: _this.handleLabelRemove,
	          value: item.value
	        };

	        return _Label2.default.create(renderLabel(item, index, defaultProps), { defaultProps: defaultProps });
	      });
	    }, _this.renderOptions = function () {
	      var _this$props16 = _this.props,
	          multiple = _this$props16.multiple,
	          search = _this$props16.search,
	          noResultsMessage = _this$props16.noResultsMessage;
	      var _this$state4 = _this.state,
	          selectedIndex = _this$state4.selectedIndex,
	          value = _this$state4.value;

	      var options = _this.getMenuOptions();

	      if (noResultsMessage !== null && search && (0, _isEmpty3.default)(options)) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'message' },
	          noResultsMessage
	        );
	      }

	      var isActive = multiple ? function (optValue) {
	        return (0, _includes3.default)(value, optValue);
	      } : function (optValue) {
	        return optValue === value;
	      };

	      return (0, _map3.default)(options, function (opt, i) {
	        return _DropdownItem2.default.create((0, _extends3.default)({
	          active: isActive(opt.value),
	          onClick: _this.handleItemClick,
	          selected: selectedIndex === i
	        }, opt, {
	          key: getKeyOrValue(opt.key, opt.value),
	          // Needed for handling click events on disabled items
	          style: (0, _extends3.default)({}, opt.style, { pointerEvents: 'all' })
	        }));
	      });
	    }, _this.renderMenu = function () {
	      var _this$props17 = _this.props,
	          children = _this$props17.children,
	          header = _this$props17.header;
	      var open = _this.state.open;

	      var menuClasses = open ? 'visible' : '';
	      var ariaOptions = _this.getDropdownMenuAriaOptions();

	      // single menu child
	      if (!(0, _isNil3.default)(children)) {
	        var menuChild = _react.Children.only(children);
	        var className = (0, _classnames2.default)(menuClasses, menuChild.props.className);

	        return (0, _react.cloneElement)(menuChild, (0, _extends3.default)({ className: className }, ariaOptions));
	      }

	      return _react2.default.createElement(
	        _DropdownMenu2.default,
	        (0, _extends3.default)({}, ariaOptions, { className: menuClasses }),
	        _DropdownHeader2.default.create(header),
	        _this.renderOptions()
	      );
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Dropdown, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if ((0, _get4.default)(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillMount', this)) (0, _get4.default)(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillMount', this).call(this);
	      debug('componentWillMount()');
	      var _state = this.state,
	          open = _state.open,
	          value = _state.value;


	      this.setValue(value);
	      if (open) this.open();
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !(0, _isEqual3.default)(nextProps, this.props) || !(0, _isEqual3.default)(nextState, this.state);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      (0, _get4.default)(Dropdown.prototype.__proto__ || Object.getPrototypeOf(Dropdown.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
	      debug('componentWillReceiveProps()');
	      // TODO objectDiff still runs in prod, stop it
	      debug('to props:', (0, _lib.objectDiff)(this.props, nextProps));

	      /* eslint-disable no-console */
	      if (process.env.NODE_ENV !== 'production') {
	        // in development, validate value type matches dropdown type
	        var isNextValueArray = Array.isArray(nextProps.value);
	        var hasValue = (0, _has3.default)(nextProps, 'value');

	        if (hasValue && nextProps.multiple && !isNextValueArray) {
	          console.error('Dropdown `value` must be an array when `multiple` is set.' + (' Received type: `' + Object.prototype.toString.call(nextProps.value) + '`.'));
	        } else if (hasValue && !nextProps.multiple && isNextValueArray) {
	          console.error('Dropdown `value` must not be an array when `multiple` is not set.' + ' Either set `multiple={true}` or use a string or number value.');
	        }
	      }
	      /* eslint-enable no-console */

	      if (!(0, _isEqual3.default)(nextProps.value, this.props.value)) {
	        debug('value changed, setting', nextProps.value);
	        this.setValue(nextProps.value);
	      }

	      if (!(0, _isEqual3.default)(nextProps.options, this.props.options)) {
	        this.setSelectedIndex(undefined, nextProps.options);
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      // eslint-disable-line complexity
	      debug('componentDidUpdate()');
	      // TODO objectDiff still runs in prod, stop it
	      debug('to state:', (0, _lib.objectDiff)(prevState, this.state));

	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;

	      // focused / blurred
	      if (!prevState.focus && this.state.focus) {
	        debug('dropdown focused');
	        if (!this.isMouseDown) {
	          var openOnFocus = this.props.openOnFocus;

	          debug('mouse is not down, opening');
	          if (openOnFocus) this.open();
	        }
	        if (!this.state.open) {
	          document.addEventListener('keydown', this.openOnArrow);
	          document.addEventListener('keydown', this.openOnSpace);
	        } else {
	          document.addEventListener('keydown', this.moveSelectionOnKeyDown);
	          document.addEventListener('keydown', this.selectItemOnEnter);
	        }
	        document.addEventListener('keydown', this.removeItemOnBackspace);
	      } else if (prevState.focus && !this.state.focus) {
	        debug('dropdown blurred');
	        var closeOnBlur = this.props.closeOnBlur;

	        if (!this.isMouseDown && closeOnBlur) {
	          debug('mouse is not down and closeOnBlur=true, closing');
	          this.close();
	        }
	        document.removeEventListener('keydown', this.openOnArrow);
	        document.removeEventListener('keydown', this.openOnSpace);
	        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
	        document.removeEventListener('keydown', this.selectItemOnEnter);
	        document.removeEventListener('keydown', this.removeItemOnBackspace);
	      }

	      // opened / closed
	      if (!prevState.open && this.state.open) {
	        debug('dropdown opened');
	        document.addEventListener('keydown', this.closeOnEscape);
	        document.addEventListener('keydown', this.moveSelectionOnKeyDown);
	        document.addEventListener('keydown', this.selectItemOnEnter);
	        document.addEventListener('keydown', this.removeItemOnBackspace);
	        document.addEventListener('click', this.closeOnDocumentClick);
	        document.removeEventListener('keydown', this.openOnArrow);
	        document.removeEventListener('keydown', this.openOnSpace);
	        this.scrollSelectedItemIntoView();
	      } else if (prevState.open && !this.state.open) {
	        debug('dropdown closed');
	        this.handleClose();
	        document.removeEventListener('keydown', this.closeOnEscape);
	        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
	        document.removeEventListener('keydown', this.selectItemOnEnter);
	        document.removeEventListener('click', this.closeOnDocumentClick);
	        if (!this.state.focus) {
	          document.removeEventListener('keydown', this.removeItemOnBackspace);
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      debug('componentWillUnmount()');

	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;

	      document.removeEventListener('keydown', this.openOnArrow);
	      document.removeEventListener('keydown', this.openOnSpace);
	      document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
	      document.removeEventListener('keydown', this.selectItemOnEnter);
	      document.removeEventListener('keydown', this.removeItemOnBackspace);
	      document.removeEventListener('keydown', this.closeOnEscape);
	      document.removeEventListener('click', this.closeOnDocumentClick);
	    }

	    // ----------------------------------------
	    // Document Event Handlers
	    // ----------------------------------------

	    // onChange needs to receive a value
	    // can't rely on props.value if we are controlled


	    // ----------------------------------------
	    // Component Event Handlers
	    // ----------------------------------------

	    // ----------------------------------------
	    // Getters
	    // ----------------------------------------

	    // There are times when we need to calculate the options based on a value
	    // that hasn't yet been persisted to state.

	  }, {
	    key: 'getDropdownMenuAriaOptions',
	    value: function getDropdownMenuAriaOptions() {
	      var _props = this.props,
	          search = _props.search,
	          multiple = _props.multiple;

	      var ariaOptions = {};

	      if (search) {
	        ariaOptions['aria-multiselectable'] = multiple;
	        ariaOptions.role = 'listbox';
	      }
	      return ariaOptions;
	    }

	    // ----------------------------------------
	    // Setters
	    // ----------------------------------------

	    // ----------------------------------------
	    // Refs
	    // ----------------------------------------

	    // ----------------------------------------
	    // Behavior
	    // ----------------------------------------

	    // ----------------------------------------
	    // Render
	    // ----------------------------------------

	  }, {
	    key: 'render',
	    value: function render() {
	      debug('render()');
	      debug('props', this.props);
	      debug('state', this.state);
	      var open = this.state.open;
	      var _props2 = this.props,
	          basic = _props2.basic,
	          button = _props2.button,
	          className = _props2.className,
	          compact = _props2.compact,
	          disabled = _props2.disabled,
	          error = _props2.error,
	          fluid = _props2.fluid,
	          floating = _props2.floating,
	          icon = _props2.icon,
	          inline = _props2.inline,
	          item = _props2.item,
	          labeled = _props2.labeled,
	          loading = _props2.loading,
	          multiple = _props2.multiple,
	          pointing = _props2.pointing,
	          search = _props2.search,
	          selection = _props2.selection,
	          scrolling = _props2.scrolling,
	          simple = _props2.simple,
	          tabIndex = _props2.tabIndex,
	          trigger = _props2.trigger,
	          upward = _props2.upward;

	      // Classes

	      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(open, 'active visible'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(button, 'button'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(inline, 'inline'),
	      // TODO: consider augmentation to render Dropdowns as Button/Menu, solves icon/link item issues
	      // https://github.com/Semantic-Org/Semantic-UI-React/issues/401#issuecomment-240487229
	      // TODO: the icon class is only required when a dropdown is a button
	      // useKeyOnly(icon, 'icon'),
	      (0, _lib.useKeyOnly)(labeled, 'labeled'), (0, _lib.useKeyOnly)(item, 'item'), (0, _lib.useKeyOnly)(multiple, 'multiple'), (0, _lib.useKeyOnly)(search, 'search'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOnly)(simple, 'simple'), (0, _lib.useKeyOnly)(scrolling, 'scrolling'), (0, _lib.useKeyOnly)(upward, 'upward'), (0, _lib.useKeyOrValueAndKey)(pointing, 'pointing'), className, 'dropdown');
	      var rest = (0, _lib.getUnhandledProps)(Dropdown, this.props);
	      var ElementType = (0, _lib.getElementType)(Dropdown, this.props);
	      var ariaOptions = this.getDropdownAriaOptions(ElementType, this.props);

	      var computedTabIndex = void 0;
	      if (!(0, _isNil3.default)(tabIndex)) {
	        computedTabIndex = tabIndex;
	      } else if (!search) {
	        // don't set a root node tabIndex as the search input has its own tabIndex
	        computedTabIndex = disabled ? -1 : 0;
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, ariaOptions, {
	          className: classes,
	          onBlur: this.handleBlur,
	          onClick: this.handleClick,
	          onMouseDown: this.handleMouseDown,
	          onFocus: this.handleFocus,
	          onChange: this.handleChange,
	          tabIndex: computedTabIndex,
	          ref: this.handleRef
	        }),
	        this.renderHiddenInput(),
	        this.renderLabels(),
	        this.renderSearchInput(),
	        this.renderSearchSizer(),
	        trigger || this.renderText(),
	        _Icon2.default.create(icon),
	        this.renderMenu()
	      );
	    }
	  }]);
	  return Dropdown;
	}(_lib.AutoControlledComponent);

	Dropdown.defaultProps = {
	  additionLabel: 'Add ',
	  additionPosition: 'top',
	  icon: 'dropdown',
	  noResultsMessage: 'No results found.',
	  renderLabel: function renderLabel(_ref2) {
	    var text = _ref2.text;
	    return text;
	  },
	  selectOnBlur: true,
	  openOnFocus: true,
	  closeOnBlur: true,
	  minCharacters: 1
	};
	Dropdown.autoControlledProps = ['open', 'value', 'selectedLabel'];
	Dropdown._meta = {
	  name: 'Dropdown',
	  type: _lib.META.TYPES.MODULE
	};
	Dropdown.Divider = _DropdownDivider2.default;
	Dropdown.Header = _DropdownHeader2.default;
	Dropdown.Item = _DropdownItem2.default;
	Dropdown.Menu = _DropdownMenu2.default;
	Dropdown.handledProps = ['additionLabel', 'additionPosition', 'allowAdditions', 'as', 'basic', 'button', 'children', 'className', 'closeOnBlur', 'closeOnChange', 'compact', 'defaultOpen', 'defaultSelectedLabel', 'defaultValue', 'disabled', 'error', 'floating', 'fluid', 'header', 'icon', 'inline', 'item', 'labeled', 'loading', 'minCharacters', 'multiple', 'name', 'noResultsMessage', 'onAddItem', 'onBlur', 'onChange', 'onClick', 'onClose', 'onFocus', 'onLabelClick', 'onMouseDown', 'onOpen', 'onSearchChange', 'open', 'openOnFocus', 'options', 'placeholder', 'pointing', 'renderLabel', 'scrolling', 'search', 'selectOnBlur', 'selectedLabel', 'selection', 'simple', 'tabIndex', 'text', 'trigger', 'upward', 'value'];
	exports.default = Dropdown;
	process.env.NODE_ENV !== "production" ? Dropdown.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Label prefixed to an option added by a user. */
	  additionLabel: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]),

	  /** Position of the `Add: ...` option in the dropdown list ('top' or 'bottom'). */
	  additionPosition: _propTypes2.default.oneOf(['top', 'bottom']),

	  /**
	   * Allow user additions to the list of options (boolean).
	   * Requires the use of `selection`, `options` and `search`.
	   */
	  allowAdditions: _lib.customPropTypes.every([_lib.customPropTypes.demand(['options', 'selection', 'search']), _propTypes2.default.bool]),

	  /** A Dropdown can reduce its complexity. */
	  basic: _propTypes2.default.bool,

	  /** Format the Dropdown to appear as a button. */
	  button: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['options', 'selection']), _lib.customPropTypes.givenProps({ children: _propTypes2.default.any.isRequired }, _propTypes2.default.element.isRequired)]),

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Whether or not the menu should close when the dropdown is blurred. */
	  closeOnBlur: _propTypes2.default.bool,

	  /**
	   * Whether or not the menu should close when a value is selected from the dropdown.
	   * By default, multiple selection dropdowns will remain open on change, while single
	   * selection dropdowns will close on change.
	   */
	  closeOnChange: _propTypes2.default.bool,

	  /** A compact dropdown has no minimum width. */
	  compact: _propTypes2.default.bool,

	  /** Initial value of open. */
	  defaultOpen: _propTypes2.default.bool,

	  /** Currently selected label in multi-select. */
	  defaultSelectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),

	  /** Initial value or value array if multiple. */
	  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))]),

	  /** A disabled dropdown menu or item does not allow user interaction. */
	  disabled: _propTypes2.default.bool,

	  /** An errored dropdown can alert a user to a problem. */
	  error: _propTypes2.default.bool,

	  /** A dropdown menu can contain floated content. */
	  floating: _propTypes2.default.bool,

	  /** A dropdown can take the full width of its parent */
	  fluid: _propTypes2.default.bool,

	  /** A dropdown menu can contain a header. */
	  header: _propTypes2.default.node,

	  /** Shorthand for Icon. */
	  icon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),

	  /** A dropdown can be formatted to appear inline in other content. */
	  inline: _propTypes2.default.bool,

	  /** A dropdown can be formatted as a Menu item. */
	  item: _propTypes2.default.bool,

	  /** A dropdown can be labeled. */
	  labeled: _propTypes2.default.bool,

	  /** A dropdown can show that it is currently loading data. */
	  loading: _propTypes2.default.bool,

	  /** The minimum characters for a search to begin showing results. */
	  minCharacters: _propTypes2.default.number,

	  /** A selection dropdown can allow multiple selections. */
	  multiple: _propTypes2.default.bool,

	  /** Name of the hidden input which holds the value. */
	  name: _propTypes2.default.string,

	  /** Message to display when there are no results. */
	  noResultsMessage: _propTypes2.default.string,

	  /**
	   * Called when a user adds a new item. Use this to update the options list.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and the new item's value.
	   */
	  onAddItem: _propTypes2.default.func,

	  /**
	   * Called on blur.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onBlur: _propTypes2.default.func,

	  /**
	   * Called when the user attempts to change the value.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed value.
	   */
	  onChange: _propTypes2.default.func,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes2.default.func,

	  /**
	   * Called on focus.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onFocus: _propTypes2.default.func,

	  /**
	   * Called when a multi-select label is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All label props.
	   */
	  onLabelClick: _propTypes2.default.func,

	  /**
	   * Called on mousedown.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onMouseDown: _propTypes2.default.func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes2.default.func,

	  /**
	   * Called on search input change.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {string} value - Current value of search input.
	   */
	  onSearchChange: _propTypes2.default.func,

	  /** Controls whether or not the dropdown menu is displayed. */
	  open: _propTypes2.default.bool,

	  /** Whether or not the menu should open when the dropdown is focused. */
	  openOnFocus: _propTypes2.default.bool,

	  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
	  options: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.arrayOf(_propTypes2.default.shape(_DropdownItem2.default.propTypes))]),

	  /** Placeholder text. */
	  placeholder: _propTypes2.default.string,

	  /** A dropdown can be formatted so that its menu is pointing. */
	  pointing: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['left', 'right', 'top', 'top left', 'top right', 'bottom', 'bottom left', 'bottom right'])]),

	  /**
	   * Mapped over the active items and returns shorthand for the active item Labels.
	   * Only applies to `multiple` Dropdowns.
	   *
	   * @param {object} item - A currently active dropdown item.
	   * @param {number} index - The current index.
	   * @param {object} defaultLabelProps - The default props for an active item Label.
	   * @returns {*} Shorthand for a Label.
	   */
	  renderLabel: _propTypes2.default.func,

	  /** A dropdown can have its menu scroll. */
	  scrolling: _propTypes2.default.bool,

	  /**
	   * A selection dropdown can allow a user to search through a large list of choices.
	   * Pass a function here to replace the default search.
	   */
	  search: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.func]),

	  // TODO 'searchInMenu' or 'search='in menu' or ???  How to handle this markup and functionality?

	  /** Define whether the highlighted item should be selected on blur. */
	  selectOnBlur: _propTypes2.default.bool,

	  /** Currently selected label in multi-select. */
	  selectedLabel: _lib.customPropTypes.every([_lib.customPropTypes.demand(['multiple']), _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])]),

	  /** A dropdown can be used to select between choices in a form. */
	  selection: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['options']), _propTypes2.default.bool]),

	  /** A simple dropdown can open without Javascript. */
	  simple: _propTypes2.default.bool,

	  /** A dropdown can receive focus. */
	  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** The text displayed in the dropdown, usually for the active item. */
	  text: _propTypes2.default.string,

	  /** Custom element to trigger the menu to become visible. Takes place of 'text'. */
	  trigger: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['selection', 'text']), _propTypes2.default.node]),

	  /** Current value or value array if multiple. Creates a controlled component. */
	  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number, _propTypes2.default.arrayOf(_propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]))]),

	  /** A dropdown can open upward. */
	  upward: _propTypes2.default.bool
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _getPrototypeOf = __webpack_require__(502);

	var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

	var _getOwnPropertyDescriptor = __webpack_require__(506);

	var _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function get(object, property, receiver) {
	  if (object === null) object = Function.prototype;
	  var desc = (0, _getOwnPropertyDescriptor2.default)(object, property);

	  if (desc === undefined) {
	    var parent = (0, _getPrototypeOf2.default)(object);

	    if (parent === null) {
	      return undefined;
	    } else {
	      return get(parent, property, receiver);
	    }
	  } else if ("value" in desc) {
	    return desc.value;
	  } else {
	    var getter = desc.get;

	    if (getter === undefined) {
	      return undefined;
	    }

	    return getter.call(receiver);
	  }
	};

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(503), __esModule: true };

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(504);
	module.exports = __webpack_require__(40).Object.getPrototypeOf;


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject = __webpack_require__(72);
	var $getPrototypeOf = __webpack_require__(93);

	__webpack_require__(505)('getPrototypeOf', function () {
	  return function getPrototypeOf(it) {
	    return $getPrototypeOf(toObject(it));
	  };
	});


/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(38);
	var core = __webpack_require__(40);
	var fails = __webpack_require__(49);
	module.exports = function (KEY, exec) {
	  var fn = (core.Object || {})[KEY] || Object[KEY];
	  var exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
	};


/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(507), __esModule: true };

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(508);
	var $Object = __webpack_require__(40).Object;
	module.exports = function getOwnPropertyDescriptor(it, key) {
	  return $Object.getOwnPropertyDescriptor(it, key);
	};


/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject = __webpack_require__(57);
	var $getOwnPropertyDescriptor = __webpack_require__(108).f;

	__webpack_require__(505)('getOwnPropertyDescriptor', function () {
	  return function getOwnPropertyDescriptor(it, key) {
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});


/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayEvery = __webpack_require__(510),
	    baseEvery = __webpack_require__(511),
	    baseIteratee = __webpack_require__(244),
	    isArray = __webpack_require__(124),
	    isIterateeCall = __webpack_require__(327);

	/**
	 * Checks if `predicate` returns truthy for **all** elements of `collection`.
	 * Iteration is stopped once `predicate` returns falsey. The predicate is
	 * invoked with three arguments: (value, index|key, collection).
	 *
	 * **Note:** This method returns `true` for
	 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
	 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
	 * elements of empty collections.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [predicate=_.identity] The function invoked per iteration.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check,
	 *  else `false`.
	 * @example
	 *
	 * _.every([true, 1, null, 'yes'], Boolean);
	 * // => false
	 *
	 * var users = [
	 *   { 'user': 'barney', 'age': 36, 'active': false },
	 *   { 'user': 'fred',   'age': 40, 'active': false }
	 * ];
	 *
	 * // The `_.matches` iteratee shorthand.
	 * _.every(users, { 'user': 'barney', 'active': false });
	 * // => false
	 *
	 * // The `_.matchesProperty` iteratee shorthand.
	 * _.every(users, ['active', false]);
	 * // => true
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.every(users, 'active');
	 * // => false
	 */
	function every(collection, predicate, guard) {
	  var func = isArray(collection) ? arrayEvery : baseEvery;
	  if (guard && isIterateeCall(collection, predicate, guard)) {
	    predicate = undefined;
	  }
	  return func(collection, baseIteratee(predicate, 3));
	}

	module.exports = every;


/***/ }),
/* 510 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.every` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check,
	 *  else `false`.
	 */
	function arrayEvery(array, predicate) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  while (++index < length) {
	    if (!predicate(array[index], index, array)) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = arrayEvery;


/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

	var baseEach = __webpack_require__(226);

	/**
	 * The base implementation of `_.every` without support for iteratee shorthands.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} predicate The function invoked per iteration.
	 * @returns {boolean} Returns `true` if all elements pass the predicate check,
	 *  else `false`
	 */
	function baseEvery(collection, predicate) {
	  var result = true;
	  baseEach(collection, function(value, index, collection) {
	    result = !!predicate(value, index, collection);
	    return result;
	  });
	  return result;
	}

	module.exports = baseEvery;


/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(513),
	    baseEach = __webpack_require__(226),
	    baseIteratee = __webpack_require__(244),
	    baseReduce = __webpack_require__(514),
	    isArray = __webpack_require__(124);

	/**
	 * Reduces `collection` to a value which is the accumulated result of running
	 * each element in `collection` thru `iteratee`, where each successive
	 * invocation is supplied the return value of the previous. If `accumulator`
	 * is not given, the first element of `collection` is used as the initial
	 * value. The iteratee is invoked with four arguments:
	 * (accumulator, value, index|key, collection).
	 *
	 * Many lodash methods are guarded to work as iteratees for methods like
	 * `_.reduce`, `_.reduceRight`, and `_.transform`.
	 *
	 * The guarded methods are:
	 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
	 * and `sortBy`
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Collection
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @returns {*} Returns the accumulated value.
	 * @see _.reduceRight
	 * @example
	 *
	 * _.reduce([1, 2], function(sum, n) {
	 *   return sum + n;
	 * }, 0);
	 * // => 3
	 *
	 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
	 *   (result[value] || (result[value] = [])).push(key);
	 *   return result;
	 * }, {});
	 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
	 */
	function reduce(collection, iteratee, accumulator) {
	  var func = isArray(collection) ? arrayReduce : baseReduce,
	      initAccum = arguments.length < 3;

	  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
	}

	module.exports = reduce;


/***/ }),
/* 513 */
/***/ (function(module, exports) {

	/**
	 * A specialized version of `_.reduce` for arrays without support for
	 * iteratee shorthands.
	 *
	 * @private
	 * @param {Array} [array] The array to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} [accumulator] The initial value.
	 * @param {boolean} [initAccum] Specify using the first element of `array` as
	 *  the initial value.
	 * @returns {*} Returns the accumulated value.
	 */
	function arrayReduce(array, iteratee, accumulator, initAccum) {
	  var index = -1,
	      length = array == null ? 0 : array.length;

	  if (initAccum && length) {
	    accumulator = array[++index];
	  }
	  while (++index < length) {
	    accumulator = iteratee(accumulator, array[index], index, array);
	  }
	  return accumulator;
	}

	module.exports = arrayReduce;


/***/ }),
/* 514 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.reduce` and `_.reduceRight`, without support
	 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
	 *
	 * @private
	 * @param {Array|Object} collection The collection to iterate over.
	 * @param {Function} iteratee The function invoked per iteration.
	 * @param {*} accumulator The initial value.
	 * @param {boolean} initAccum Specify using the first or last element of
	 *  `collection` as the initial value.
	 * @param {Function} eachFunc The function to iterate over `collection`.
	 * @returns {*} Returns the accumulated value.
	 */
	function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
	  eachFunc(collection, function(value, index, collection) {
	    accumulator = initAccum
	      ? (initAccum = false, value)
	      : iteratee(accumulator, value, index, collection);
	  });
	  return accumulator;
	}

	module.exports = baseReduce;


/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

	var toString = __webpack_require__(169);

	/**
	 * Used to match `RegExp`
	 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
	 */
	var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
	    reHasRegExpChar = RegExp(reRegExpChar.source);

	/**
	 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
	 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to escape.
	 * @returns {string} Returns the escaped string.
	 * @example
	 *
	 * _.escapeRegExp('[lodash](https://lodash.com/)');
	 * // => '\[lodash\]\(https://lodash\.com/\)'
	 */
	function escapeRegExp(string) {
	  string = toString(string);
	  return (string && reHasRegExpChar.test(string))
	    ? string.replace(reRegExpChar, '\\$&')
	    : string;
	}

	module.exports = escapeRegExp;


/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

	var baseSlice = __webpack_require__(183),
	    toInteger = __webpack_require__(220);

	/**
	 * Creates a slice of `array` with `n` elements dropped from the end.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category Array
	 * @param {Array} array The array to query.
	 * @param {number} [n=1] The number of elements to drop.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Array} Returns the slice of `array`.
	 * @example
	 *
	 * _.dropRight([1, 2, 3]);
	 * // => [1, 2]
	 *
	 * _.dropRight([1, 2, 3], 2);
	 * // => [1]
	 *
	 * _.dropRight([1, 2, 3], 5);
	 * // => []
	 *
	 * _.dropRight([1, 2, 3], 0);
	 * // => [1, 2, 3]
	 */
	function dropRight(array, n, guard) {
	  var length = array == null ? 0 : array.length;
	  if (!length) {
	    return [];
	  }
	  n = (guard || n === undefined) ? 1 : toInteger(n);
	  n = length - n;
	  return baseSlice(array, 0, n < 0 ? 0 : n);
	}

	module.exports = dropRight;


/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

	var baseFlatten = __webpack_require__(212),
	    baseRest = __webpack_require__(184),
	    baseUniq = __webpack_require__(298),
	    isArrayLikeObject = __webpack_require__(215);

	/**
	 * Creates an array of unique values, in order, from all given arrays using
	 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
	 * for equality comparisons.
	 *
	 * @static
	 * @memberOf _
	 * @since 0.1.0
	 * @category Array
	 * @param {...Array} [arrays] The arrays to inspect.
	 * @returns {Array} Returns the new array of combined values.
	 * @example
	 *
	 * _.union([2], [1, 2]);
	 * // => [2, 1]
	 */
	var union = baseRest(function(arrays) {
	  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
	});

	module.exports = union;


/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Label = __webpack_require__(469);

	var _Label2 = _interopRequireDefault(_Label);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Label2.default;

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A dropdown menu can contain dividers to separate related content.
	 */
	function DropdownDivider(props) {
	  var className = props.className;

	  var classes = (0, _classnames2.default)('divider', className);
	  var rest = (0, _lib.getUnhandledProps)(DropdownDivider, props);
	  var ElementType = (0, _lib.getElementType)(DropdownDivider, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }));
	}

	DropdownDivider.handledProps = ['as', 'className'];
	DropdownDivider._meta = {
	  name: 'DropdownDivider',
	  parent: 'Dropdown',
	  type: _lib.META.TYPES.MODULE
	};

	process.env.NODE_ENV !== "production" ? DropdownDivider.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = DropdownDivider;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Flag = __webpack_require__(521);

	var _Flag2 = _interopRequireDefault(_Flag);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Image = __webpack_require__(523);

	var _Image2 = _interopRequireDefault(_Image);

	var _Label = __webpack_require__(518);

	var _Label2 = _interopRequireDefault(_Label);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item sub-component for Dropdown component.
	 */
	var DropdownItem = function (_Component) {
	  (0, _inherits3.default)(DropdownItem, _Component);

	  function DropdownItem() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, DropdownItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = DropdownItem.__proto__ || Object.getPrototypeOf(DropdownItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(DropdownItem, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          content = _props.content,
	          disabled = _props.disabled,
	          description = _props.description,
	          flag = _props.flag,
	          icon = _props.icon,
	          image = _props.image,
	          label = _props.label,
	          selected = _props.selected,
	          text = _props.text;


	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(selected, 'selected'), 'item', className);
	      // add default dropdown icon if item contains another menu
	      var iconName = (0, _isNil3.default)(icon) ? _lib.childrenUtils.someByType(children, 'DropdownMenu') && 'dropdown' : icon;
	      var rest = (0, _lib.getUnhandledProps)(DropdownItem, this.props);
	      var ElementType = (0, _lib.getElementType)(DropdownItem, this.props);
	      var ariaOptions = {
	        role: 'option',
	        'aria-disabled': disabled,
	        'aria-checked': active,
	        'aria-selected': selected
	      };

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),
	          children
	        );
	      }

	      var flagElement = _Flag2.default.create(flag);
	      var iconElement = _Icon2.default.create(iconName);
	      var imageElement = _Image2.default.create(image);
	      var labelElement = _Label2.default.create(label);
	      var descriptionElement = (0, _lib.createShorthand)('span', function (val) {
	        return { children: val };
	      }, description, { defaultProps: { className: 'description' } });
	      var textElement = (0, _lib.createShorthand)('span', function (val) {
	        return { children: val };
	      }, content || text, { defaultProps: { className: 'text' } });

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, ariaOptions, { className: classes, onClick: this.handleClick }),
	        imageElement,
	        iconElement,
	        flagElement,
	        labelElement,
	        descriptionElement,
	        textElement
	      );
	    }
	  }]);
	  return DropdownItem;
	}(_react.Component);

	DropdownItem._meta = {
	  name: 'DropdownItem',
	  parent: 'Dropdown',
	  type: _lib.META.TYPES.MODULE
	};
	DropdownItem.handledProps = ['active', 'as', 'children', 'className', 'content', 'description', 'disabled', 'flag', 'icon', 'image', 'label', 'onClick', 'selected', 'text', 'value'];
	process.env.NODE_ENV !== "production" ? DropdownItem.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Style as the currently chosen item. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Additional text with less emphasis. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** A dropdown item can be disabled. */
	  disabled: _propTypes2.default.bool,

	  /** Shorthand for Flag. */
	  flag: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for Image. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for Label. */
	  label: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /**
	   * The item currently selected by keyboard shortcut.
	   * This is not the active item.
	   */
	  selected: _propTypes2.default.bool,

	  /** Display text. */
	  text: _lib.customPropTypes.contentShorthand,

	  /** Stored value. */
	  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
	} : void 0;


	DropdownItem.create = (0, _lib.createShorthandFactory)(DropdownItem, function (opts) {
	  return opts;
	});

	exports.default = DropdownItem;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Flag = __webpack_require__(522);

	var _Flag2 = _interopRequireDefault(_Flag);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Flag2.default;

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var names = ['ad', 'andorra', 'ae', 'united arab emirates', 'uae', 'af', 'afghanistan', 'ag', 'antigua', 'ai', 'anguilla', 'al', 'albania', 'am', 'armenia', 'an', 'netherlands antilles', 'ao', 'angola', 'ar', 'argentina', 'as', 'american samoa', 'at', 'austria', 'au', 'australia', 'aw', 'aruba', 'ax', 'aland islands', 'az', 'azerbaijan', 'ba', 'bosnia', 'bb', 'barbados', 'bd', 'bangladesh', 'be', 'belgium', 'bf', 'burkina faso', 'bg', 'bulgaria', 'bh', 'bahrain', 'bi', 'burundi', 'bj', 'benin', 'bm', 'bermuda', 'bn', 'brunei', 'bo', 'bolivia', 'br', 'brazil', 'bs', 'bahamas', 'bt', 'bhutan', 'bv', 'bouvet island', 'bw', 'botswana', 'by', 'belarus', 'bz', 'belize', 'ca', 'canada', 'cc', 'cocos islands', 'cd', 'congo', 'cf', 'central african republic', 'cg', 'congo brazzaville', 'ch', 'switzerland', 'ci', 'cote divoire', 'ck', 'cook islands', 'cl', 'chile', 'cm', 'cameroon', 'cn', 'china', 'co', 'colombia', 'cr', 'costa rica', 'cs', 'cu', 'cuba', 'cv', 'cape verde', 'cx', 'christmas island', 'cy', 'cyprus', 'cz', 'czech republic', 'de', 'germany', 'dj', 'djibouti', 'dk', 'denmark', 'dm', 'dominica', 'do', 'dominican republic', 'dz', 'algeria', 'ec', 'ecuador', 'ee', 'estonia', 'eg', 'egypt', 'eh', 'western sahara', 'er', 'eritrea', 'es', 'spain', 'et', 'ethiopia', 'eu', 'european union', 'fi', 'finland', 'fj', 'fiji', 'fk', 'falkland islands', 'fm', 'micronesia', 'fo', 'faroe islands', 'fr', 'france', 'ga', 'gabon', 'gb', 'united kingdom', 'gd', 'grenada', 'ge', 'georgia', 'gf', 'french guiana', 'gh', 'ghana', 'gi', 'gibraltar', 'gl', 'greenland', 'gm', 'gambia', 'gn', 'guinea', 'gp', 'guadeloupe', 'gq', 'equatorial guinea', 'gr', 'greece', 'gs', 'sandwich islands', 'gt', 'guatemala', 'gu', 'guam', 'gw', 'guinea-bissau', 'gy', 'guyana', 'hk', 'hong kong', 'hm', 'heard island', 'hn', 'honduras', 'hr', 'croatia', 'ht', 'haiti', 'hu', 'hungary', 'id', 'indonesia', 'ie', 'ireland', 'il', 'israel', 'in', 'india', 'io', 'indian ocean territory', 'iq', 'iraq', 'ir', 'iran', 'is', 'iceland', 'it', 'italy', 'jm', 'jamaica', 'jo', 'jordan', 'jp', 'japan', 'ke', 'kenya', 'kg', 'kyrgyzstan', 'kh', 'cambodia', 'ki', 'kiribati', 'km', 'comoros', 'kn', 'saint kitts and nevis', 'kp', 'north korea', 'kr', 'south korea', 'kw', 'kuwait', 'ky', 'cayman islands', 'kz', 'kazakhstan', 'la', 'laos', 'lb', 'lebanon', 'lc', 'saint lucia', 'li', 'liechtenstein', 'lk', 'sri lanka', 'lr', 'liberia', 'ls', 'lesotho', 'lt', 'lithuania', 'lu', 'luxembourg', 'lv', 'latvia', 'ly', 'libya', 'ma', 'morocco', 'mc', 'monaco', 'md', 'moldova', 'me', 'montenegro', 'mg', 'madagascar', 'mh', 'marshall islands', 'mk', 'macedonia', 'ml', 'mali', 'mm', 'myanmar', 'burma', 'mn', 'mongolia', 'mo', 'macau', 'mp', 'northern mariana islands', 'mq', 'martinique', 'mr', 'mauritania', 'ms', 'montserrat', 'mt', 'malta', 'mu', 'mauritius', 'mv', 'maldives', 'mw', 'malawi', 'mx', 'mexico', 'my', 'malaysia', 'mz', 'mozambique', 'na', 'namibia', 'nc', 'new caledonia', 'ne', 'niger', 'nf', 'norfolk island', 'ng', 'nigeria', 'ni', 'nicaragua', 'nl', 'netherlands', 'no', 'norway', 'np', 'nepal', 'nr', 'nauru', 'nu', 'niue', 'nz', 'new zealand', 'om', 'oman', 'pa', 'panama', 'pe', 'peru', 'pf', 'french polynesia', 'pg', 'new guinea', 'ph', 'philippines', 'pk', 'pakistan', 'pl', 'poland', 'pm', 'saint pierre', 'pn', 'pitcairn islands', 'pr', 'puerto rico', 'ps', 'palestine', 'pt', 'portugal', 'pw', 'palau', 'py', 'paraguay', 'qa', 'qatar', 're', 'reunion', 'ro', 'romania', 'rs', 'serbia', 'ru', 'russia', 'rw', 'rwanda', 'sa', 'saudi arabia', 'sb', 'solomon islands', 'sc', 'seychelles', 'gb sct', 'scotland', 'sd', 'sudan', 'se', 'sweden', 'sg', 'singapore', 'sh', 'saint helena', 'si', 'slovenia', 'sj', 'svalbard', 'jan mayen', 'sk', 'slovakia', 'sl', 'sierra leone', 'sm', 'san marino', 'sn', 'senegal', 'so', 'somalia', 'sr', 'suriname', 'st', 'sao tome', 'sv', 'el salvador', 'sy', 'syria', 'sz', 'swaziland', 'tc', 'caicos islands', 'td', 'chad', 'tf', 'french territories', 'tg', 'togo', 'th', 'thailand', 'tj', 'tajikistan', 'tk', 'tokelau', 'tl', 'timorleste', 'tm', 'turkmenistan', 'tn', 'tunisia', 'to', 'tonga', 'tr', 'turkey', 'tt', 'trinidad', 'tv', 'tuvalu', 'tw', 'taiwan', 'tz', 'tanzania', 'ua', 'ukraine', 'ug', 'uganda', 'um', 'us minor islands', 'us', 'america', 'united states', 'uy', 'uruguay', 'uz', 'uzbekistan', 'va', 'vatican city', 'vc', 'saint vincent', 've', 'venezuela', 'vg', 'british virgin islands', 'vi', 'us virgin islands', 'vn', 'vietnam', 'vu', 'vanuatu', 'gb wls', 'wales', 'wf', 'wallis and futuna', 'ws', 'samoa', 'ye', 'yemen', 'yt', 'mayotte', 'za', 'south africa', 'zm', 'zambia', 'zw', 'zimbabwe'];

	/**
	 * A flag is is used to represent a political state.
	 */
	function Flag(props) {
	  var className = props.className,
	      name = props.name;

	  var classes = (0, _classnames2.default)(name, 'flag', className);
	  var rest = (0, _lib.getUnhandledProps)(Flag, props);
	  var ElementType = (0, _lib.getElementType)(Flag, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { className: classes }));
	}

	Flag.handledProps = ['as', 'className', 'name'];
	Flag._meta = {
	  name: 'Flag',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Flag.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Flag name, can use the two digit country code, the full name, or a common alias. */
	  name: _lib.customPropTypes.suggest(names)
	} : void 0;

	Flag.defaultProps = {
	  as: 'i'
	};

	Flag.create = (0, _lib.createShorthandFactory)(Flag, function (value) {
	  return { name: value };
	});

	exports.default = Flag;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Image = __webpack_require__(470);

	var _Image2 = _interopRequireDefault(_Image);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Image2.default;

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A dropdown menu can contain a header.
	 */
	function DropdownHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon;


	  var classes = (0, _classnames2.default)('header', className);
	  var rest = (0, _lib.getUnhandledProps)(DropdownHeader, props);
	  var ElementType = (0, _lib.getElementType)(DropdownHeader, props);

	  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _Icon2.default.create(icon),
	    content
	  );
	}

	DropdownHeader.handledProps = ['as', 'children', 'className', 'content', 'icon'];
	DropdownHeader._meta = {
	  name: 'DropdownHeader',
	  parent: 'Dropdown',
	  type: _lib.META.TYPES.MODULE
	};

	process.env.NODE_ENV !== "production" ? DropdownHeader.propTypes = {
	  /** An element type to render as (string or function) */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand
	} : void 0;

	DropdownHeader.create = (0, _lib.createShorthandFactory)(DropdownHeader, function (content) {
	  return { content: content };
	});

	exports.default = DropdownHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A dropdown menu can contain a menu.
	 */
	function DropdownMenu(props) {
	  var children = props.children,
	      className = props.className,
	      scrolling = props.scrolling;

	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(scrolling, 'scrolling'), 'menu transition', className);
	  var rest = (0, _lib.getUnhandledProps)(DropdownMenu, props);
	  var ElementType = (0, _lib.getElementType)(DropdownMenu, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	DropdownMenu.handledProps = ['as', 'children', 'className', 'scrolling'];
	DropdownMenu._meta = {
	  name: 'DropdownMenu',
	  parent: 'Dropdown',
	  type: _lib.META.TYPES.MODULE
	};

	process.env.NODE_ENV !== "production" ? DropdownMenu.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A dropdown menu can scroll. */
	  scrolling: _propTypes2.default.bool
	} : void 0;

	exports.default = DropdownMenu;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _TextArea = __webpack_require__(527);

	var _TextArea2 = _interopRequireDefault(_TextArea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _TextArea2.default;

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A TextArea can be used to allow for extended user input.
	 * @see Form
	 */
	var TextArea = function (_Component) {
	  (0, _inherits3.default)(TextArea, _Component);

	  function TextArea() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, TextArea);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TextArea.__proto__ || Object.getPrototypeOf(TextArea)).call.apply(_ref, [this].concat(args))), _this), _this.focus = function () {
	      return _this.ref.focus();
	    }, _this.handleChange = function (e) {
	      var onChange = _this.props.onChange;

	      if (onChange) onChange(e, (0, _extends3.default)({}, _this.props, { value: e.target && e.target.value }));

	      _this.updateHeight(e.target);
	    }, _this.handleRef = function (c) {
	      return _this.ref = c;
	    }, _this.removeAutoHeightStyles = function () {
	      _this.ref.removeAttribute('rows');
	      _this.ref.style.height = null;
	      _this.ref.style.minHeight = null;
	      _this.ref.style.resize = null;
	    }, _this.updateHeight = function () {
	      if (!_this.ref) return;

	      var autoHeight = _this.props.autoHeight;

	      if (!autoHeight) return;

	      var _window$getComputedSt = window.getComputedStyle(_this.ref),
	          borderTopWidth = _window$getComputedSt.borderTopWidth,
	          borderBottomWidth = _window$getComputedSt.borderBottomWidth;

	      borderTopWidth = parseInt(borderTopWidth, 10);
	      borderBottomWidth = parseInt(borderBottomWidth, 10);

	      _this.ref.rows = '1';
	      _this.ref.style.minHeight = '0';
	      _this.ref.style.resize = 'none';
	      _this.ref.style.height = 'auto';
	      _this.ref.style.height = _this.ref.scrollHeight + borderTopWidth + borderBottomWidth + 'px';
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(TextArea, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updateHeight();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      // removed autoHeight
	      if (!this.props.autoHeight && prevProps.autoHeight) {
	        this.removeAutoHeightStyles();
	      }
	      // added autoHeight or value changed
	      if (this.props.autoHeight && !prevProps.autoHeight || prevProps.value !== this.props.value) {
	        this.updateHeight();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var value = this.props.value;

	      var rest = (0, _lib.getUnhandledProps)(TextArea, this.props);
	      var ElementType = (0, _lib.getElementType)(TextArea, this.props);

	      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { onChange: this.handleChange, ref: this.handleRef, value: value }));
	    }
	  }]);
	  return TextArea;
	}(_react.Component);

	TextArea._meta = {
	  name: 'TextArea',
	  type: _lib.META.TYPES.ADDON
	};
	TextArea.defaultProps = {
	  as: 'textarea'
	};
	TextArea.handledProps = ['as', 'autoHeight', 'onChange', 'value'];
	process.env.NODE_ENV !== "production" ? TextArea.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Indicates whether height of the textarea fits the content or not. */
	  autoHeight: _propTypes2.default.bool,

	  /**
	   * Called on change.
	   * @param {SyntheticEvent} event - The React SyntheticEvent object
	   * @param {object} data - All props and the event value.
	   */
	  onChange: _propTypes2.default.func,

	  /** The value of the textarea. */
	  value: _propTypes2.default.string
	} : void 0;
	exports.default = TextArea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Visibility = __webpack_require__(529);

	var _Visibility2 = _interopRequireDefault(_Visibility);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Visibility2.default;

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _forEach2 = __webpack_require__(286);

	var _forEach3 = _interopRequireDefault(_forEach2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _includes2 = __webpack_require__(311);

	var _includes3 = _interopRequireDefault(_includes2);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Visibility provides a set of callbacks for when a content appears in the viewport.
	 */
	var Visibility = function (_Component) {
	  (0, _inherits3.default)(Visibility, _Component);

	  function Visibility() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Visibility);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Visibility.__proto__ || Object.getPrototypeOf(Visibility)).call.apply(_ref, [this].concat(args))), _this), _this.calculations = {
	      topPassed: false,
	      bottomPassed: false,
	      topVisible: false,
	      bottomVisible: false,
	      fits: false,
	      passing: false,
	      onScreen: false,
	      offScreen: false
	    }, _this.firedCallbacks = [], _this.execute = function (callback, name) {
	      var _this$props = _this.props,
	          continuous = _this$props.continuous,
	          once = _this$props.once;


	      if (!callback) return;
	      // Reverse callbacks aren't fired continuously
	      if (_this.calculations[name] === false) return;

	      // Always fire callback if continuous = true
	      if (continuous) {
	        callback(null, (0, _extends3.default)({}, _this.props, { calculations: _this.calculations }));
	        return;
	      }

	      // If once = true, fire callback only if it wasn't fired before
	      if (once) {
	        if (!(0, _includes3.default)(_this.firedCallbacks, name)) {
	          _this.firedCallbacks.push(name);
	          callback(null, (0, _extends3.default)({}, _this.props, { calculations: _this.calculations }));
	        }

	        return;
	      }

	      // Fire callback only if the value changed
	      if (_this.calculations[name] !== _this.oldCalculations[name]) {
	        callback(null, (0, _extends3.default)({}, _this.props, { calculations: _this.calculations }));
	      }
	    }, _this.fireOnPassed = function () {
	      var _this$calculations = _this.calculations,
	          percentagePassed = _this$calculations.percentagePassed,
	          pixelsPassed = _this$calculations.pixelsPassed;
	      var onPassed = _this.props.onPassed;


	      (0, _forEach3.default)(onPassed, function (callback, passed) {
	        var pixelsValue = Number(passed);

	        if (pixelsValue && pixelsPassed >= pixelsValue) {
	          _this.execute(callback, passed);
	          return;
	        }

	        var matchPercentage = ('' + passed).match(/^(\d+)%$/);
	        if (!matchPercentage) return;

	        var percentageValue = Number(matchPercentage[1]) / 100;
	        if (percentagePassed >= percentageValue) _this.execute(callback, passed);
	      });
	    }, _this.handleRef = function (c) {
	      return _this.ref = c;
	    }, _this.handleScroll = function () {
	      var _this$ref$getBounding = _this.ref.getBoundingClientRect(),
	          bottom = _this$ref$getBounding.bottom,
	          height = _this$ref$getBounding.height,
	          top = _this$ref$getBounding.top,
	          width = _this$ref$getBounding.width;

	      var topPassed = top < 0;
	      var bottomPassed = bottom < 0;

	      var pixelsPassed = bottomPassed ? 0 : Math.max(top * -1, 0);
	      var percentagePassed = pixelsPassed / height;

	      var bottomVisible = bottom >= 0 && bottom <= window.innerHeight;
	      var topVisible = top >= 0 && top <= window.innerHeight;

	      var fits = topVisible && bottomVisible;
	      var passing = topPassed && !bottomPassed;

	      var onScreen = (topVisible || topPassed) && !bottomPassed;
	      var offScreen = !onScreen;

	      _this.oldCalculations = _this.calculations;
	      _this.calculations = {
	        bottomPassed: bottomPassed,
	        bottomVisible: bottomVisible,
	        fits: fits,
	        height: height,
	        passing: passing,
	        percentagePassed: percentagePassed,
	        pixelsPassed: pixelsPassed,
	        offScreen: offScreen,
	        onScreen: onScreen,
	        topPassed: topPassed,
	        topVisible: topVisible,
	        width: width
	      };

	      _this.fireCallbacks();
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Visibility, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(_ref2) {
	      var continuous = _ref2.continuous,
	          once = _ref2.once;

	      var cleanOut = continuous !== this.props.continuous || once !== this.props.once;
	      if (cleanOut) this.firedCallbacks = [];
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      window.addEventListener('scroll', this.handleScroll);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      window.removeEventListener('scroll', this.handleScroll);
	    }
	  }, {
	    key: 'fireCallbacks',
	    value: function fireCallbacks() {
	      var _this2 = this;

	      var _props = this.props,
	          onBottomPassed = _props.onBottomPassed,
	          onBottomPassedReverse = _props.onBottomPassedReverse,
	          onBottomVisible = _props.onBottomVisible,
	          onBottomVisibleReverse = _props.onBottomVisibleReverse,
	          onPassing = _props.onPassing,
	          onPassingReverse = _props.onPassingReverse,
	          onTopPassed = _props.onTopPassed,
	          onTopPassedReverse = _props.onTopPassedReverse,
	          onTopVisible = _props.onTopVisible,
	          onTopVisibleReverse = _props.onTopVisibleReverse,
	          onOffScreen = _props.onOffScreen,
	          onOnScreen = _props.onOnScreen;

	      var callbacks = {
	        bottomPassed: onBottomPassed,
	        bottomVisible: onBottomVisible,
	        passing: onPassing,
	        offScreen: onOffScreen,
	        onScreen: onOnScreen,
	        topPassed: onTopPassed,
	        topVisible: onTopVisible
	      };
	      var reverse = {
	        bottomPassed: onBottomPassedReverse,
	        bottomVisible: onBottomVisibleReverse,
	        passing: onPassingReverse,
	        topPassed: onTopPassedReverse,
	        topVisible: onTopVisibleReverse
	      };

	      (0, _invoke3.default)(this.props, 'onUpdate', null, (0, _extends3.default)({}, this.props, { calculations: this.calculations }));
	      this.fireOnPassed();

	      (0, _forEach3.default)(callbacks, function (callback, name) {
	        return _this2.execute(callback, name);
	      });
	      (0, _forEach3.default)(reverse, function (callback, name) {
	        return _this2.execute(callback, name);
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var children = this.props.children;

	      var ElementType = (0, _lib.getElementType)(Visibility, this.props);
	      var rest = (0, _lib.getUnhandledProps)(Visibility, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { ref: this.handleRef }),
	        children
	      );
	    }
	  }]);
	  return Visibility;
	}(_react.Component);

	Visibility.defaultProps = {
	  continuous: false,
	  once: true
	};
	Visibility._meta = {
	  name: 'Visibility',
	  type: _lib.META.TYPES.BEHAVIOR
	};
	Visibility.handledProps = ['as', 'children', 'continuous', 'onBottomPassed', 'onBottomPassedReverse', 'onBottomVisible', 'onBottomVisibleReverse', 'onOffScreen', 'onOnScreen', 'onPassed', 'onPassing', 'onPassingReverse', 'onTopPassed', 'onTopPassedReverse', 'onTopVisible', 'onTopVisibleReverse', 'onUpdate', 'once'];
	exports.default = Visibility;
	process.env.NODE_ENV !== "production" ? Visibility.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /**
	   * When set to true a callback will occur anytime an element passes a condition not just immediately after the
	   * threshold is met.
	   */
	  continuous: _propTypes2.default.bool,

	  /**
	   * Element's bottom edge has passed top of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomPassed: _propTypes2.default.func,

	  /**
	   * Element's bottom edge has not passed top of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomPassedReverse: _propTypes2.default.func,

	  /**
	   * Element's bottom edge has passed bottom of screen
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomVisible: _propTypes2.default.func,

	  /**
	   * Element's bottom edge has not passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onBottomVisibleReverse: _propTypes2.default.func,

	  /** When set to false a callback will occur each time an element passes the threshold for a condition. */
	  once: _propTypes2.default.bool,

	  /** Element is not visible on the screen. */
	  onPassed: _propTypes2.default.object,

	  /**
	   * Any part of an element is visible on screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onPassing: _propTypes2.default.func,

	  /**
	   * Element's top has not passed top of screen but bottom has.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onPassingReverse: _propTypes2.default.func,

	  /**
	   * Element is not visible on the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onOffScreen: _propTypes2.default.func,

	  /**
	   * Element is visible on the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onOnScreen: _propTypes2.default.func,

	  /**
	   * Element's top edge has passed top of the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopPassed: _propTypes2.default.func,

	  /**
	   * Element's top edge has not passed top of the screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopPassedReverse: _propTypes2.default.func,

	  /**
	   * Element's top edge has passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopVisible: _propTypes2.default.func,

	  /**
	   * Element's top edge has not passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onTopVisibleReverse: _propTypes2.default.func,

	  /**
	   * Element's top edge has passed bottom of screen.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUpdate: _propTypes2.default.func
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Breadcrumb = __webpack_require__(531);

	var _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Breadcrumb2.default;

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _each2 = __webpack_require__(285);

	var _each3 = _interopRequireDefault(_each2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _BreadcrumbDivider = __webpack_require__(532);

	var _BreadcrumbDivider2 = _interopRequireDefault(_BreadcrumbDivider);

	var _BreadcrumbSection = __webpack_require__(533);

	var _BreadcrumbSection2 = _interopRequireDefault(_BreadcrumbSection);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A breadcrumb is used to show hierarchy between content.
	 */
	function Breadcrumb(props) {
	  var children = props.children,
	      className = props.className,
	      divider = props.divider,
	      icon = props.icon,
	      sections = props.sections,
	      size = props.size;


	  var classes = (0, _classnames2.default)('ui', size, 'breadcrumb', className);
	  var rest = (0, _lib.getUnhandledProps)(Breadcrumb, props);
	  var ElementType = (0, _lib.getElementType)(Breadcrumb, props);

	  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );

	  var childElements = [];

	  (0, _each3.default)(sections, function (section, index) {
	    // section
	    var breadcrumbElement = _BreadcrumbSection2.default.create(section);
	    childElements.push(breadcrumbElement);

	    // divider
	    if (index !== sections.length - 1) {
	      var key = breadcrumbElement.key + '_divider' || JSON.stringify(section);
	      childElements.push(_BreadcrumbDivider2.default.create({ content: divider, icon: icon, key: key }));
	    }
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    childElements
	  );
	}

	Breadcrumb.handledProps = ['as', 'children', 'className', 'divider', 'icon', 'sections', 'size'];
	Breadcrumb._meta = {
	  name: 'Breadcrumb',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? Breadcrumb.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content of the Breadcrumb.Divider. */
	  divider: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.contentShorthand]),

	  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in
	   *  Breadcrumb.Divider. */
	  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['divider']), _lib.customPropTypes.itemShorthand]),

	  /** Shorthand array of props for Breadcrumb.Section. */
	  sections: _lib.customPropTypes.collectionShorthand,

	  /** Size of Breadcrumb. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))
	} : void 0;

	Breadcrumb.Divider = _BreadcrumbDivider2.default;
	Breadcrumb.Section = _BreadcrumbSection2.default;

	exports.default = Breadcrumb;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A divider sub-component for Breadcrumb component.
	 */
	function BreadcrumbDivider(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon;


	  var classes = (0, _classnames2.default)('divider', className);
	  var rest = (0, _lib.getUnhandledProps)(BreadcrumbDivider, props);
	  var ElementType = (0, _lib.getElementType)(BreadcrumbDivider, props);

	  if (!(0, _isNil3.default)(icon)) return _Icon2.default.create(icon, { defaultProps: (0, _extends3.default)({}, rest, { className: classes }) });
	  if (!(0, _isNil3.default)(content)) return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    content
	  );

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? '/' : children
	  );
	}

	BreadcrumbDivider.handledProps = ['as', 'children', 'className', 'content', 'icon'];
	BreadcrumbDivider._meta = {
	  name: 'BreadcrumbDivider',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Breadcrumb'
	};

	process.env.NODE_ENV !== "production" ? BreadcrumbDivider.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Render as an `Icon` component with `divider` class instead of a `div`. */
	  icon: _lib.customPropTypes.itemShorthand
	} : void 0;

	BreadcrumbDivider.create = (0, _lib.createShorthandFactory)(BreadcrumbDivider, function (icon) {
	  return { icon: icon };
	});

	exports.default = BreadcrumbDivider;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A section sub-component for Breadcrumb component.
	 */
	var BreadcrumbSection = function (_Component) {
	  (0, _inherits3.default)(BreadcrumbSection, _Component);

	  function BreadcrumbSection() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, BreadcrumbSection);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = BreadcrumbSection.__proto__ || Object.getPrototypeOf(BreadcrumbSection)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(BreadcrumbSection, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          content = _props.content,
	          href = _props.href,
	          link = _props.link,
	          onClick = _props.onClick;


	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'section', className);
	      var rest = (0, _lib.getUnhandledProps)(BreadcrumbSection, this.props);
	      var ElementType = (0, _lib.getElementType)(BreadcrumbSection, this.props, function () {
	        if (link || onClick) return 'a';
	      });

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),
	        (0, _isNil3.default)(children) ? content : children
	      );
	    }
	  }]);
	  return BreadcrumbSection;
	}(_react.Component);

	BreadcrumbSection._meta = {
	  name: 'BreadcrumbSection',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Breadcrumb'
	};
	BreadcrumbSection.handledProps = ['active', 'as', 'children', 'className', 'content', 'href', 'link', 'onClick'];
	exports.default = BreadcrumbSection;
	process.env.NODE_ENV !== "production" ? BreadcrumbSection.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Style as the currently active section. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
	  href: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['link']), _propTypes2.default.string]),

	  /** Render as an `a` tag instead of a `div`. */
	  link: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['href']), _propTypes2.default.bool]),

	  /**
	   * Called on click. When passed, the component will render as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func
	} : void 0;


	BreadcrumbSection.create = (0, _lib.createShorthandFactory)(BreadcrumbSection, function (content) {
	  return { content: content, link: true };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Form = __webpack_require__(535);

	var _Form2 = _interopRequireDefault(_Form);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Form2.default;

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _FormButton = __webpack_require__(536);

	var _FormButton2 = _interopRequireDefault(_FormButton);

	var _FormCheckbox = __webpack_require__(538);

	var _FormCheckbox2 = _interopRequireDefault(_FormCheckbox);

	var _FormDropdown = __webpack_require__(539);

	var _FormDropdown2 = _interopRequireDefault(_FormDropdown);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	var _FormGroup = __webpack_require__(540);

	var _FormGroup2 = _interopRequireDefault(_FormGroup);

	var _FormInput = __webpack_require__(541);

	var _FormInput2 = _interopRequireDefault(_FormInput);

	var _FormRadio = __webpack_require__(551);

	var _FormRadio2 = _interopRequireDefault(_FormRadio);

	var _FormSelect = __webpack_require__(552);

	var _FormSelect2 = _interopRequireDefault(_FormSelect);

	var _FormTextArea = __webpack_require__(553);

	var _FormTextArea2 = _interopRequireDefault(_FormTextArea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A Form displays a set of related user input fields in a structured way.
	 * @see Button
	 * @see Checkbox
	 * @see Dropdown
	 * @see Input
	 * @see Message
	 * @see Radio
	 * @see Select
	 * @see Visibility
	 */
	function Form(props) {
	  var children = props.children,
	      className = props.className,
	      error = props.error,
	      inverted = props.inverted,
	      loading = props.loading,
	      reply = props.reply,
	      size = props.size,
	      success = props.success,
	      warning = props.warning,
	      widths = props.widths;


	  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(reply, 'reply'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useWidthProp)(widths, null, true), 'form', className);
	  var rest = (0, _lib.getUnhandledProps)(Form, props);
	  var ElementType = (0, _lib.getElementType)(Form, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Form.handledProps = ['as', 'children', 'className', 'error', 'inverted', 'loading', 'reply', 'size', 'success', 'warning', 'widths'];
	process.env.NODE_ENV !== "production" ? Form.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Automatically show any error Message children. */
	  error: _propTypes2.default.bool,

	  /** A form can have its color inverted for contrast. */
	  inverted: _propTypes2.default.bool,

	  /** Automatically show a loading indicator. */
	  loading: _propTypes2.default.bool,

	  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */
	  reply: _propTypes2.default.bool,

	  /** A form can vary in size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),

	  /** Automatically show any success Message children. */
	  success: _propTypes2.default.bool,

	  /** Automatically show any warning Message children .*/
	  warning: _propTypes2.default.bool,

	  /** Forms can automatically divide fields to be equal width. */
	  widths: _propTypes2.default.oneOf(['equal'])
	} : void 0;

	Form.defaultProps = {
	  as: 'form'
	};

	Form._meta = {
	  name: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	Form.Field = _FormField2.default;
	Form.Button = _FormButton2.default;
	Form.Checkbox = _FormCheckbox2.default;
	Form.Dropdown = _FormDropdown2.default;
	Form.Group = _FormGroup2.default;
	Form.Input = _FormInput2.default;
	Form.Radio = _FormRadio2.default;
	Form.Select = _FormSelect2.default;
	Form.TextArea = _FormTextArea2.default;

	exports.default = Form;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Button = __webpack_require__(464);

	var _Button2 = _interopRequireDefault(_Button);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={Button} />.
	 * @see Button
	 * @see Form
	 */
	function FormButton(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormButton, props);
	  var ElementType = (0, _lib.getElementType)(FormButton, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormButton.handledProps = ['as', 'control'];
	FormButton._meta = {
	  name: 'FormButton',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormButton.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormButton.defaultProps = {
	  as: _FormField2.default,
	  control: _Button2.default
	};

	exports.default = FormButton;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _get2 = __webpack_require__(275);

	var _get3 = _interopRequireDefault(_get2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Checkbox = __webpack_require__(494);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _Radio = __webpack_require__(492);

	var _Radio2 = _interopRequireDefault(_Radio);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A field is a form element containing a label and an input.
	 * @see Form
	 * @see Button
	 * @see Checkbox
	 * @see Dropdown
	 * @see Input
	 * @see Radio
	 * @see Select
	 * @see Visibility
	 */
	function FormField(props) {
	  var children = props.children,
	      className = props.className,
	      control = props.control,
	      disabled = props.disabled,
	      error = props.error,
	      inline = props.inline,
	      label = props.label,
	      required = props.required,
	      type = props.type,
	      width = props.width;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useKeyOnly)(required, 'required'), (0, _lib.useWidthProp)(width, 'wide'), 'field', className);
	  var rest = (0, _lib.getUnhandledProps)(FormField, props);
	  var ElementType = (0, _lib.getElementType)(FormField, props);

	  // ----------------------------------------
	  // No Control
	  // ----------------------------------------

	  if ((0, _isNil3.default)(control)) {
	    if ((0, _isNil3.default)(label)) return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );

	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      (0, _lib.createHTMLLabel)(label)
	    );
	  }

	  // ----------------------------------------
	  // Checkbox/Radio Control
	  // ----------------------------------------
	  var controlProps = (0, _extends3.default)({}, rest, { children: children, required: required, type: type });

	  // wrap HTML checkboxes/radios in the label
	  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {
	    return _react2.default.createElement(
	      ElementType,
	      { className: classes },
	      _react2.default.createElement(
	        'label',
	        null,
	        (0, _react.createElement)(control, controlProps),
	        ' ',
	        label
	      )
	    );
	  }

	  // pass label prop to controls that support it
	  if (control === _Checkbox2.default || control === _Radio2.default) {
	    return _react2.default.createElement(
	      ElementType,
	      { className: classes },
	      (0, _react.createElement)(control, (0, _extends3.default)({}, controlProps, { label: label }))
	    );
	  }

	  // ----------------------------------------
	  // Other Control
	  // ----------------------------------------

	  return _react2.default.createElement(
	    ElementType,
	    { className: classes },
	    (0, _lib.createHTMLLabel)(label, { defaultProps: {
	        htmlFor: (0, _get3.default)(controlProps, 'id') }
	    }),
	    (0, _react.createElement)(control, controlProps)
	  );
	}

	FormField.handledProps = ['as', 'children', 'className', 'control', 'disabled', 'error', 'inline', 'label', 'required', 'type', 'width'];
	FormField._meta = {
	  name: 'FormField',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormField.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /**
	   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').
	   * Extra FormField props are passed to the control component.
	   * Mutually exclusive with children.
	   */
	  control: _lib.customPropTypes.some([_propTypes2.default.func, _propTypes2.default.oneOf(['button', 'input', 'select', 'textarea'])]),

	  /** Individual fields may be disabled. */
	  disabled: _propTypes2.default.bool,

	  /** Individual fields may display an error state. */
	  error: _propTypes2.default.bool,

	  /** A field can have its label next to instead of above it. */
	  inline: _propTypes2.default.bool,

	  // Heads Up!
	  // Do not disallow children with `label` shorthand
	  // The `control` might accept a `label` prop and `children`
	  /** Mutually exclusive with children. */
	  label: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),

	  /** A field can show that input is mandatory. */
	  required: _propTypes2.default.bool,

	  /** Passed to the control component (i.e. <input type='password' />) */
	  type: _lib.customPropTypes.every([_lib.customPropTypes.demand(['control'])]),

	  /** A field can specify its width in grid columns */
	  width: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)
	} : void 0;

	exports.default = FormField;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Checkbox = __webpack_require__(494);

	var _Checkbox2 = _interopRequireDefault(_Checkbox);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={Checkbox} />.
	 * @see Checkbox
	 * @see Form
	 */
	function FormCheckbox(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormCheckbox, props);
	  var ElementType = (0, _lib.getElementType)(FormCheckbox, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormCheckbox.handledProps = ['as', 'control'];
	FormCheckbox._meta = {
	  name: 'FormCheckbox',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormCheckbox.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormCheckbox.defaultProps = {
	  as: _FormField2.default,
	  control: _Checkbox2.default
	};

	exports.default = FormCheckbox;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Dropdown = __webpack_require__(499);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={Dropdown} />.
	 * @see Dropdown
	 * @see Form
	 */
	function FormDropdown(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormDropdown, props);
	  var ElementType = (0, _lib.getElementType)(FormDropdown, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormDropdown.handledProps = ['as', 'control'];
	FormDropdown._meta = {
	  name: 'FormDropdown',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormDropdown.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormDropdown.defaultProps = {
	  as: _FormField2.default,
	  control: _Dropdown2.default
	};

	exports.default = FormDropdown;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A set of fields can appear grouped together.
	 * @see Form
	 */
	function FormGroup(props) {
	  var children = props.children,
	      className = props.className,
	      grouped = props.grouped,
	      inline = props.inline,
	      widths = props.widths;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(grouped, 'grouped'), (0, _lib.useKeyOnly)(inline, 'inline'), (0, _lib.useWidthProp)(widths, null, true), 'fields', className);
	  var rest = (0, _lib.getUnhandledProps)(FormGroup, props);
	  var ElementType = (0, _lib.getElementType)(FormGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	FormGroup.handledProps = ['as', 'children', 'className', 'grouped', 'inline', 'widths'];
	FormGroup._meta = {
	  name: 'FormGroup',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Fields can show related choices. */
	  grouped: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['inline']), _propTypes2.default.bool]),

	  /** Multiple fields may be inline in a row. */
	  inline: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['grouped']), _propTypes2.default.bool]),

	  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */
	  widths: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.WIDTHS), ['equal']))
	} : void 0;

	exports.default = FormGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Input = __webpack_require__(542);

	var _Input2 = _interopRequireDefault(_Input);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={Input} />.
	 * @see Form
	 * @see Input
	 */
	function FormInput(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormInput, props);
	  var ElementType = (0, _lib.getElementType)(FormInput, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormInput.handledProps = ['as', 'control'];
	FormInput._meta = {
	  name: 'FormInput',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormInput.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormInput.defaultProps = {
	  as: _FormField2.default,
	  control: _Input2.default
	};

	exports.default = FormInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Input = __webpack_require__(543);

	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Input2.default;

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray2 = __webpack_require__(544);

	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _includes2 = __webpack_require__(311);

	var _includes3 = _interopRequireDefault(_includes2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _get2 = __webpack_require__(275);

	var _get3 = _interopRequireDefault(_get2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Button = __webpack_require__(464);

	var _Button2 = _interopRequireDefault(_Button);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Label = __webpack_require__(518);

	var _Label2 = _interopRequireDefault(_Label);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An Input is a field used to elicit a response from a user.
	 * @see Button
	 * @see Form
	 * @see Icon
	 * @see Label
	 */
	var Input = function (_Component) {
	  (0, _inherits3.default)(Input, _Component);

	  function Input() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Input);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Input.__proto__ || Object.getPrototypeOf(Input)).call.apply(_ref, [this].concat(args))), _this), _this.computeTabIndex = function () {
	      var _this$props = _this.props,
	          disabled = _this$props.disabled,
	          tabIndex = _this$props.tabIndex;


	      if (!(0, _isNil3.default)(tabIndex)) return tabIndex;
	      if (disabled) return -1;
	    }, _this.focus = function () {
	      return _this.inputRef.focus();
	    }, _this.handleChange = function (e) {
	      var onChange = _this.props.onChange;

	      var value = (0, _get3.default)(e, 'target.value');

	      onChange(e, (0, _extends3.default)({}, _this.props, { value: value }));
	    }, _this.handleChildOverrides = function (child, defaultProps) {
	      return (0, _extends3.default)({}, defaultProps, child.props, {
	        ref: function ref(c) {
	          (0, _invoke3.default)(child, 'ref', c);
	          _this.handleInputRef(c);
	        }
	      });
	    }, _this.handleInputRef = function (c) {
	      return _this.inputRef = c;
	    }, _this.partitionProps = function () {
	      var _this$props2 = _this.props,
	          disabled = _this$props2.disabled,
	          onChange = _this$props2.onChange,
	          type = _this$props2.type;


	      var tabIndex = _this.computeTabIndex();
	      var unhandled = (0, _lib.getUnhandledProps)(Input, _this.props);

	      var _partitionHTMLInputPr = (0, _lib.partitionHTMLInputProps)(unhandled),
	          _partitionHTMLInputPr2 = (0, _slicedToArray3.default)(_partitionHTMLInputPr, 2),
	          htmlInputProps = _partitionHTMLInputPr2[0],
	          rest = _partitionHTMLInputPr2[1];

	      htmlInputProps.ref = _this.handleInputRef;
	      htmlInputProps.type = type;

	      if (disabled) htmlInputProps.disabled = disabled;
	      if (onChange) htmlInputProps.onChange = _this.handleChange;
	      if (tabIndex) htmlInputProps.tabIndex = tabIndex;

	      return [htmlInputProps, rest];
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Input, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          action = _props.action,
	          actionPosition = _props.actionPosition,
	          children = _props.children,
	          className = _props.className,
	          disabled = _props.disabled,
	          error = _props.error,
	          fluid = _props.fluid,
	          focus = _props.focus,
	          icon = _props.icon,
	          iconPosition = _props.iconPosition,
	          input = _props.input,
	          inverted = _props.inverted,
	          label = _props.label,
	          labelPosition = _props.labelPosition,
	          loading = _props.loading,
	          size = _props.size,
	          transparent = _props.transparent,
	          type = _props.type;


	      var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(transparent, 'transparent'), (0, _lib.useValueAndKey)(actionPosition, 'action') || (0, _lib.useKeyOnly)(action, 'action'), (0, _lib.useValueAndKey)(iconPosition, 'icon') || (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useValueAndKey)(labelPosition, 'labeled') || (0, _lib.useKeyOnly)(label, 'labeled'), 'input', className);
	      var ElementType = (0, _lib.getElementType)(Input, this.props);

	      var _partitionProps = this.partitionProps(),
	          _partitionProps2 = (0, _slicedToArray3.default)(_partitionProps, 2),
	          htmlInputProps = _partitionProps2[0],
	          rest = _partitionProps2[1];

	      // Render with children
	      // ----------------------------------------


	      if (!(0, _isNil3.default)(children)) {
	        // add htmlInputProps to the `<input />` child
	        var childElements = (0, _map3.default)(_react.Children.toArray(children), function (child) {
	          if (child.type !== 'input') return child;
	          return (0, _react.cloneElement)(child, _this2.handleChildOverrides(child, htmlInputProps));
	        });

	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes }),
	          childElements
	        );
	      }

	      // Render Shorthand
	      // ----------------------------------------
	      var actionElement = _Button2.default.create(action, { defaultProps: { className: 'button' } });
	      var iconElement = _Icon2.default.create(icon);
	      var labelElement = _Label2.default.create(label, {
	        defaultProps: {
	          className: (0, _classnames2.default)('label',
	          // add 'left|right corner'
	          (0, _includes3.default)(labelPosition, 'corner') && labelPosition)
	        }
	      });

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        actionPosition === 'left' && actionElement,
	        iconPosition === 'left' && iconElement,
	        labelPosition !== 'right' && labelElement,
	        (0, _lib.createHTMLInput)(input || type, { defaultProps: htmlInputProps }),
	        actionPosition !== 'left' && actionElement,
	        iconPosition !== 'left' && iconElement,
	        labelPosition === 'right' && labelElement
	      );
	    }
	  }]);
	  return Input;
	}(_react.Component);

	Input.defaultProps = {
	  type: 'text'
	};
	Input._meta = {
	  name: 'Input',
	  type: _lib.META.TYPES.ELEMENT
	};
	Input.handledProps = ['action', 'actionPosition', 'as', 'children', 'className', 'disabled', 'error', 'fluid', 'focus', 'icon', 'iconPosition', 'input', 'inverted', 'label', 'labelPosition', 'loading', 'onChange', 'size', 'tabIndex', 'transparent', 'type'];
	process.env.NODE_ENV !== "production" ? Input.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An Input can be formatted to alert the user to an action they may perform. */
	  action: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),

	  /** An action can appear along side an Input on the left or right. */
	  actionPosition: _propTypes2.default.oneOf(['left']),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** An Input field can show that it is disabled. */
	  disabled: _propTypes2.default.bool,

	  /** An Input field can show the data contains errors. */
	  error: _propTypes2.default.bool,

	  /** Take on the size of it's container. */
	  fluid: _propTypes2.default.bool,

	  /** An Input field can show a user is currently interacting with it. */
	  focus: _propTypes2.default.bool,

	  /** Optional Icon to display inside the Input. */
	  icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),

	  /** An Icon can appear inside an Input on the left or right. */
	  iconPosition: _propTypes2.default.oneOf(['left']),

	  /** Shorthand for creating the HTML Input. */
	  input: _lib.customPropTypes.itemShorthand,

	  /** Format to appear on dark backgrounds. */
	  inverted: _propTypes2.default.bool,

	  /** Optional Label to display along side the Input. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** A Label can appear outside an Input on the left or right. */
	  labelPosition: _propTypes2.default.oneOf(['left', 'right', 'left corner', 'right corner']),

	  /** An Icon Input field can show that it is currently loading data. */
	  loading: _propTypes2.default.bool,

	  /**
	   * Called on change.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed value.
	   */
	  onChange: _propTypes2.default.func,

	  /** An Input can vary in size. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** An Input can receive focus. */
	  tabIndex: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** Transparent Input has no background. */
	  transparent: _propTypes2.default.bool,

	  /** The HTML input type. */
	  type: _propTypes2.default.string
	} : void 0;


	Input.create = (0, _lib.createShorthandFactory)(Input, function (type) {
	  return { type: type };
	});

	exports.default = Input;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _isIterable2 = __webpack_require__(545);

	var _isIterable3 = _interopRequireDefault(_isIterable2);

	var _getIterator2 = __webpack_require__(548);

	var _getIterator3 = _interopRequireDefault(_getIterator2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  function sliceIterator(arr, i) {
	    var _arr = [];
	    var _n = true;
	    var _d = false;
	    var _e = undefined;

	    try {
	      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
	        _arr.push(_s.value);

	        if (i && _arr.length === i) break;
	      }
	    } catch (err) {
	      _d = true;
	      _e = err;
	    } finally {
	      try {
	        if (!_n && _i["return"]) _i["return"]();
	      } finally {
	        if (_d) throw _e;
	      }
	    }

	    return _arr;
	  }

	  return function (arr, i) {
	    if (Array.isArray(arr)) {
	      return arr;
	    } else if ((0, _isIterable3.default)(Object(arr))) {
	      return sliceIterator(arr, i);
	    } else {
	      throw new TypeError("Invalid attempt to destructure non-iterable instance");
	    }
	  };
	}();

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(546), __esModule: true };

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(94);
	__webpack_require__(82);
	module.exports = __webpack_require__(547);


/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

	var classof = __webpack_require__(337);
	var ITERATOR = __webpack_require__(92)('iterator');
	var Iterators = __webpack_require__(86);
	module.exports = __webpack_require__(40).isIterable = function (it) {
	  var O = Object(it);
	  return O[ITERATOR] !== undefined
	    || '@@iterator' in O
	    // eslint-disable-next-line no-prototype-builtins
	    || Iterators.hasOwnProperty(classof(O));
	};


/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(549), __esModule: true };

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(94);
	__webpack_require__(82);
	module.exports = __webpack_require__(550);


/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(45);
	var get = __webpack_require__(336);
	module.exports = __webpack_require__(40).getIterator = function (it) {
	  var iterFn = get(it);
	  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
	  return anObject(iterFn.call(it));
	};


/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Radio = __webpack_require__(492);

	var _Radio2 = _interopRequireDefault(_Radio);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={Radio} />.
	 * @see Form
	 * @see Radio
	 */
	function FormRadio(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormRadio, props);
	  var ElementType = (0, _lib.getElementType)(FormRadio, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormRadio.handledProps = ['as', 'control'];
	FormRadio._meta = {
	  name: 'FormRadio',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormRadio.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormRadio.defaultProps = {
	  as: _FormField2.default,
	  control: _Radio2.default
	};

	exports.default = FormRadio;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Select = __webpack_require__(497);

	var _Select2 = _interopRequireDefault(_Select);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={Select} />.
	 * @see Form
	 * @see Select
	 */
	function FormSelect(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormSelect, props);
	  var ElementType = (0, _lib.getElementType)(FormSelect, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormSelect.handledProps = ['as', 'control'];
	FormSelect._meta = {
	  name: 'FormSelect',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormSelect.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormSelect.defaultProps = {
	  as: _FormField2.default,
	  control: _Select2.default
	};

	exports.default = FormSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _TextArea = __webpack_require__(526);

	var _TextArea2 = _interopRequireDefault(_TextArea);

	var _FormField = __webpack_require__(537);

	var _FormField2 = _interopRequireDefault(_FormField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Sugar for <Form.Field control={TextArea} />.
	 * @see Form
	 * @see TextArea
	 */
	function FormTextArea(props) {
	  var control = props.control;

	  var rest = (0, _lib.getUnhandledProps)(FormTextArea, props);
	  var ElementType = (0, _lib.getElementType)(FormTextArea, props);

	  return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, { control: control }));
	}

	FormTextArea.handledProps = ['as', 'control'];
	FormTextArea._meta = {
	  name: 'FormTextArea',
	  parent: 'Form',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? FormTextArea.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A FormField control prop. */
	  control: _FormField2.default.propTypes.control
	} : void 0;

	FormTextArea.defaultProps = {
	  as: _FormField2.default,
	  control: _TextArea2.default
	};

	exports.default = FormTextArea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Grid = __webpack_require__(555);

	var _Grid2 = _interopRequireDefault(_Grid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Grid2.default;

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _GridColumn = __webpack_require__(556);

	var _GridColumn2 = _interopRequireDefault(_GridColumn);

	var _GridRow = __webpack_require__(557);

	var _GridRow2 = _interopRequireDefault(_GridRow);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A grid is used to harmonize negative space in a layout.
	 */
	function Grid(props) {
	  var celled = props.celled,
	      centered = props.centered,
	      children = props.children,
	      className = props.className,
	      columns = props.columns,
	      container = props.container,
	      divided = props.divided,
	      doubling = props.doubling,
	      inverted = props.inverted,
	      padded = props.padded,
	      relaxed = props.relaxed,
	      reversed = props.reversed,
	      stackable = props.stackable,
	      stretched = props.stretched,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign;


	  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(container, 'container'), (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useKeyOrValueAndKey)(celled, 'celled'), (0, _lib.useKeyOrValueAndKey)(divided, 'divided'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(reversed, 'reversed'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'grid', className);
	  var rest = (0, _lib.getUnhandledProps)(Grid, props);
	  var ElementType = (0, _lib.getElementType)(Grid, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Grid.handledProps = ['as', 'celled', 'centered', 'children', 'className', 'columns', 'container', 'divided', 'doubling', 'inverted', 'padded', 'relaxed', 'reversed', 'stackable', 'stretched', 'textAlign', 'verticalAlign'];
	Grid.Column = _GridColumn2.default;
	Grid.Row = _GridRow2.default;

	Grid._meta = {
	  name: 'Grid',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? Grid.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A grid can have rows divided into cells. */
	  celled: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['internally'])]),

	  /** A grid can have its columns centered. */
	  centered: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Represents column count per row in Grid. */
	  columns: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.WIDTHS), ['equal'])),

	  /** A grid can be combined with a container to use the available layout and alignment. */
	  container: _propTypes2.default.bool,

	  /** A grid can have dividers between its columns. */
	  divided: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['vertically'])]),

	  /** A grid can double its column width on tablet and mobile sizes. */
	  doubling: _propTypes2.default.bool,

	  /** A grid's colors can be inverted. */
	  inverted: _propTypes2.default.bool,

	  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */
	  padded: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['horizontally', 'vertically'])]),

	  /** A grid can increase its gutters to allow for more negative space. */
	  relaxed: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /** A grid can specify that its columns should reverse order at different device sizes. */
	  reversed: _propTypes2.default.oneOf(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),

	  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */
	  stackable: _propTypes2.default.bool,

	  /** A grid can stretch its contents to take up the entire grid height. */
	  stretched: _propTypes2.default.bool,

	  /** A grid can specify its text alignment. */
	  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),

	  /** A grid can specify its vertical alignment to have all its columns vertically centered. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;

	exports.default = Grid;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A column sub-component for Grid.
	 */
	function GridColumn(props) {
	  var children = props.children,
	      className = props.className,
	      computer = props.computer,
	      color = props.color,
	      floated = props.floated,
	      largeScreen = props.largeScreen,
	      mobile = props.mobile,
	      only = props.only,
	      stretched = props.stretched,
	      tablet = props.tablet,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign,
	      widescreen = props.widescreen,
	      width = props.width;


	  var classes = (0, _classnames2.default)(color, (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useOnlyProp)(only, 'only'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(computer, 'wide computer'), (0, _lib.useWidthProp)(largeScreen, 'wide large screen'), (0, _lib.useWidthProp)(mobile, 'wide mobile'), (0, _lib.useWidthProp)(tablet, 'wide tablet'), (0, _lib.useWidthProp)(widescreen, 'wide widescreen'), (0, _lib.useWidthProp)(width, 'wide'), 'column', className);
	  var rest = (0, _lib.getUnhandledProps)(GridColumn, props);
	  var ElementType = (0, _lib.getElementType)(GridColumn, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	GridColumn.handledProps = ['as', 'children', 'className', 'color', 'computer', 'floated', 'largeScreen', 'mobile', 'only', 'stretched', 'tablet', 'textAlign', 'verticalAlign', 'widescreen', 'width'];
	GridColumn._meta = {
	  name: 'GridColumn',
	  parent: 'Grid',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? GridColumn.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A grid column can be colored. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A column can specify a width for a computer. */
	  computer: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** A column can sit flush against the left or right edge of a row. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** A column can specify a width for a large screen device. */
	  largeScreen: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** A column can specify a width for a mobile device. */
	  mobile: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** A row can appear only for a specific device, or screen sizes. */
	  only: _lib.customPropTypes.onlyProp(_lib.SUI.VISIBILITY),

	  /** A column can stretch its contents to take up the entire grid or row height. */
	  stretched: _propTypes2.default.bool,

	  /** A column can specify a width for a tablet device. */
	  tablet: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** A column can specify its text alignment. */
	  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),

	  /** A column can specify its vertical alignment to have all its columns vertically centered. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** A column can specify a width for a wide screen device. */
	  widescreen: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** Represents width of column. */
	  width: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)
	} : void 0;

	exports.default = GridColumn;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A row sub-component for Grid.
	 */
	function GridRow(props) {
	  var centered = props.centered,
	      children = props.children,
	      className = props.className,
	      color = props.color,
	      columns = props.columns,
	      divided = props.divided,
	      only = props.only,
	      reversed = props.reversed,
	      stretched = props.stretched,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign;


	  var classes = (0, _classnames2.default)(color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(stretched, 'stretched'), (0, _lib.useOnlyProp)(only), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(reversed, 'reversed'), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column', true), 'row', className);
	  var rest = (0, _lib.getUnhandledProps)(GridRow, props);
	  var ElementType = (0, _lib.getElementType)(GridRow, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	GridRow.handledProps = ['as', 'centered', 'children', 'className', 'color', 'columns', 'divided', 'only', 'reversed', 'stretched', 'textAlign', 'verticalAlign'];
	GridRow._meta = {
	  name: 'GridRow',
	  parent: 'Grid',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? GridRow.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A row can have its columns centered. */
	  centered: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A grid row can be colored. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Represents column count per line in Row. */
	  columns: _propTypes2.default.oneOf([].concat((0, _toConsumableArray3.default)(_lib.SUI.WIDTHS), ['equal'])),

	  /** A row can have dividers between its columns. */
	  divided: _propTypes2.default.bool,

	  /** A row can appear only for a specific device, or screen sizes. */
	  only: _lib.customPropTypes.onlyProp(_lib.SUI.VISIBILITY),

	  /** A row can specify that its columns should reverse order at different device sizes. */
	  reversed: _propTypes2.default.oneOf(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),

	  /** A row can stretch its contents to take up the entire column height. */
	  stretched: _propTypes2.default.bool,

	  /** A row can specify its text alignment. */
	  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS),

	  /** A row can specify its vertical alignment to have all its columns vertically centered. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;

	exports.default = GridRow;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Menu = __webpack_require__(559);

	var _Menu2 = _interopRequireDefault(_Menu);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Menu2.default;

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _MenuHeader = __webpack_require__(560);

	var _MenuHeader2 = _interopRequireDefault(_MenuHeader);

	var _MenuItem = __webpack_require__(561);

	var _MenuItem2 = _interopRequireDefault(_MenuItem);

	var _MenuMenu = __webpack_require__(573);

	var _MenuMenu2 = _interopRequireDefault(_MenuMenu);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A menu displays grouped navigation actions.
	 * @see Dropdown
	 */
	var Menu = function (_Component) {
	  (0, _inherits3.default)(Menu, _Component);

	  function Menu() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Menu);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Menu.__proto__ || Object.getPrototypeOf(Menu)).call.apply(_ref, [this].concat(args))), _this), _this.handleItemOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e, itemProps) {
	          var index = itemProps.index;


	          _this.trySetState({ activeIndex: index });

	          (0, _invoke3.default)(predefinedProps, 'onClick', e, itemProps);
	          (0, _invoke3.default)(_this.props, 'onItemClick', e, itemProps);
	        }
	      };
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Menu, [{
	    key: 'renderItems',
	    value: function renderItems() {
	      var _this2 = this;

	      var items = this.props.items;
	      var activeIndex = this.state.activeIndex;


	      return (0, _map3.default)(items, function (item, index) {
	        return _MenuItem2.default.create(item, {
	          defaultProps: {
	            active: activeIndex === index,
	            index: index
	          },
	          overrideProps: _this2.handleItemOverrides
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          attached = _props.attached,
	          borderless = _props.borderless,
	          children = _props.children,
	          className = _props.className,
	          color = _props.color,
	          compact = _props.compact,
	          fixed = _props.fixed,
	          floated = _props.floated,
	          fluid = _props.fluid,
	          icon = _props.icon,
	          inverted = _props.inverted,
	          pagination = _props.pagination,
	          pointing = _props.pointing,
	          secondary = _props.secondary,
	          size = _props.size,
	          stackable = _props.stackable,
	          tabular = _props.tabular,
	          text = _props.text,
	          vertical = _props.vertical,
	          widths = _props.widths;

	      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(borderless, 'borderless'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(pagination, 'pagination'), (0, _lib.useKeyOnly)(pointing, 'pointing'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(floated, 'floated'), (0, _lib.useKeyOrValueAndKey)(icon, 'icon'), (0, _lib.useKeyOrValueAndKey)(tabular, 'tabular'), (0, _lib.useValueAndKey)(fixed, 'fixed'), (0, _lib.useWidthProp)(widths, 'item'), className, 'menu');
	      var rest = (0, _lib.getUnhandledProps)(Menu, this.props);
	      var ElementType = (0, _lib.getElementType)(Menu, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        (0, _isNil3.default)(children) ? this.renderItems() : children
	      );
	    }
	  }]);
	  return Menu;
	}(_lib.AutoControlledComponent);

	Menu._meta = {
	  name: 'Menu',
	  type: _lib.META.TYPES.COLLECTION
	};
	Menu.autoControlledProps = ['activeIndex'];
	Menu.Header = _MenuHeader2.default;
	Menu.Item = _MenuItem2.default;
	Menu.Menu = _MenuMenu2.default;
	Menu.handledProps = ['activeIndex', 'as', 'attached', 'borderless', 'children', 'className', 'color', 'compact', 'defaultActiveIndex', 'fixed', 'floated', 'fluid', 'icon', 'inverted', 'items', 'onItemClick', 'pagination', 'pointing', 'secondary', 'size', 'stackable', 'tabular', 'text', 'vertical', 'widths'];
	process.env.NODE_ENV !== "production" ? Menu.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Index of the currently active item. */
	  activeIndex: _propTypes2.default.number,

	  /** A menu may be attached to other content segments. */
	  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),

	  /** A menu item or menu can have no borders. */
	  borderless: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Additional colors can be specified. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A menu can take up only the space necessary to fit its content. */
	  compact: _propTypes2.default.bool,

	  /** Initial activeIndex value. */
	  defaultActiveIndex: _propTypes2.default.number,

	  /** A menu can be fixed to a side of its context. */
	  fixed: _propTypes2.default.oneOf(['left', 'right', 'bottom', 'top']),

	  /** A menu can be floated. */
	  floated: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['right'])]),

	  /** A vertical menu may take the size of its container. */
	  fluid: _propTypes2.default.bool,

	  /** A menu may have just icons (bool) or labeled icons. */
	  icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['labeled'])]),

	  /** A menu may have its colors inverted to show greater contrast. */
	  inverted: _propTypes2.default.bool,

	  /** Shorthand array of props for Menu. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /**
	   * onClick handler for MenuItem. Mutually exclusive with children.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.func]),

	  /** A pagination menu is specially formatted to present links to pages of content. */
	  pagination: _propTypes2.default.bool,

	  /** A menu can point to show its relationship to nearby content. */
	  pointing: _propTypes2.default.bool,

	  /** A menu can adjust its appearance to de-emphasize its contents. */
	  secondary: _propTypes2.default.bool,

	  /** A menu can vary in size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big')),

	  /** A menu can stack at mobile resolutions. */
	  stackable: _propTypes2.default.bool,

	  /** A menu can be formatted to show tabs of information. */
	  tabular: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['right'])]),

	  /** A menu can be formatted for text content. */
	  text: _propTypes2.default.bool,

	  /** A vertical menu displays elements vertically. */
	  vertical: _propTypes2.default.bool,

	  /** A menu can have its items divided evenly. */
	  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)
	} : void 0;
	exports.default = Menu;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A menu item may include a header or may itself be a header.
	 */
	function MenuHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('header', className);
	  var rest = (0, _lib.getUnhandledProps)(MenuHeader, props);
	  var ElementType = (0, _lib.getElementType)(MenuHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	MenuHeader.handledProps = ['as', 'children', 'className', 'content'];
	MenuHeader._meta = {
	  name: 'MenuHeader',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Menu'
	};

	process.env.NODE_ENV !== "production" ? MenuHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = MenuHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _startCase2 = __webpack_require__(562);

	var _startCase3 = _interopRequireDefault(_startCase2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A menu can contain an item.
	 */
	var MenuItem = function (_Component) {
	  (0, _inherits3.default)(MenuItem, _Component);

	  function MenuItem() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, MenuItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = MenuItem.__proto__ || Object.getPrototypeOf(MenuItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(MenuItem, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          color = _props.color,
	          content = _props.content,
	          disabled = _props.disabled,
	          fitted = _props.fitted,
	          header = _props.header,
	          icon = _props.icon,
	          link = _props.link,
	          name = _props.name,
	          onClick = _props.onClick,
	          position = _props.position;


	      var classes = (0, _classnames2.default)(color, position, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(icon === true || icon && !(name || content), 'icon'), (0, _lib.useKeyOnly)(header, 'header'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOrValueAndKey)(fitted, 'fitted'), 'item', className);
	      var ElementType = (0, _lib.getElementType)(MenuItem, this.props, function () {
	        if (onClick) return 'a';
	      });
	      var rest = (0, _lib.getUnhandledProps)(MenuItem, this.props);

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	        _Icon2.default.create(icon),
	        content || (0, _startCase3.default)(name)
	      );
	    }
	  }]);
	  return MenuItem;
	}(_react.Component);

	MenuItem._meta = {
	  name: 'MenuItem',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Menu'
	};
	MenuItem.handledProps = ['active', 'as', 'children', 'className', 'color', 'content', 'disabled', 'fitted', 'header', 'icon', 'index', 'link', 'name', 'onClick', 'position'];
	exports.default = MenuItem;
	process.env.NODE_ENV !== "production" ? MenuItem.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A menu item can be active. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Additional colors can be specified. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A menu item can be disabled. */
	  disabled: _propTypes2.default.bool,

	  /** A menu item or menu can remove element padding, vertically or horizontally. */
	  fitted: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['horizontally', 'vertically'])]),

	  /** A menu item may include a header or may itself be a header. */
	  header: _propTypes2.default.bool,

	  /** MenuItem can be only icon. */
	  icon: _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand]),

	  /** MenuItem index inside Menu. */
	  index: _propTypes2.default.number,

	  /** A menu item can be link. */
	  link: _propTypes2.default.bool,

	  /** Internal name of the MenuItem. */
	  name: _propTypes2.default.string,

	  /**
	   * Called on click. When passed, the component will render as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /** A menu item can take right position. */
	  position: _propTypes2.default.oneOf(['right'])
	} : void 0;


	MenuItem.create = (0, _lib.createShorthandFactory)(MenuItem, function (val) {
	  return { content: val, name: val };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

	var createCompounder = __webpack_require__(563),
	    upperFirst = __webpack_require__(571);

	/**
	 * Converts `string` to
	 * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.1.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the start cased string.
	 * @example
	 *
	 * _.startCase('--foo-bar--');
	 * // => 'Foo Bar'
	 *
	 * _.startCase('fooBar');
	 * // => 'Foo Bar'
	 *
	 * _.startCase('__FOO_BAR__');
	 * // => 'FOO BAR'
	 */
	var startCase = createCompounder(function(result, word, index) {
	  return result + (index ? ' ' : '') + upperFirst(word);
	});

	module.exports = startCase;


/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

	var arrayReduce = __webpack_require__(513),
	    deburr = __webpack_require__(564),
	    words = __webpack_require__(567);

	/** Used to compose unicode capture groups. */
	var rsApos = "['\u2019]";

	/** Used to match apostrophes. */
	var reApos = RegExp(rsApos, 'g');

	/**
	 * Creates a function like `_.camelCase`.
	 *
	 * @private
	 * @param {Function} callback The function to combine each word.
	 * @returns {Function} Returns the new compounder function.
	 */
	function createCompounder(callback) {
	  return function(string) {
	    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
	  };
	}

	module.exports = createCompounder;


/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

	var deburrLetter = __webpack_require__(565),
	    toString = __webpack_require__(169);

	/** Used to match Latin Unicode letters (excluding mathematical operators). */
	var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

	/** Used to compose unicode character classes. */
	var rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

	/** Used to compose unicode capture groups. */
	var rsCombo = '[' + rsComboRange + ']';

	/**
	 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
	 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
	 */
	var reComboMark = RegExp(rsCombo, 'g');

	/**
	 * Deburrs `string` by converting
	 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
	 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
	 * letters to basic Latin letters and removing
	 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to deburr.
	 * @returns {string} Returns the deburred string.
	 * @example
	 *
	 * _.deburr('déjà vu');
	 * // => 'deja vu'
	 */
	function deburr(string) {
	  string = toString(string);
	  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
	}

	module.exports = deburr;


/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

	var basePropertyOf = __webpack_require__(566);

	/** Used to map Latin Unicode letters to basic Latin letters. */
	var deburredLetters = {
	  // Latin-1 Supplement block.
	  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
	  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
	  '\xc7': 'C',  '\xe7': 'c',
	  '\xd0': 'D',  '\xf0': 'd',
	  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
	  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
	  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
	  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
	  '\xd1': 'N',  '\xf1': 'n',
	  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
	  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
	  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
	  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
	  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
	  '\xc6': 'Ae', '\xe6': 'ae',
	  '\xde': 'Th', '\xfe': 'th',
	  '\xdf': 'ss',
	  // Latin Extended-A block.
	  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
	  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
	  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
	  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
	  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
	  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
	  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
	  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
	  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
	  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
	  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
	  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
	  '\u0134': 'J',  '\u0135': 'j',
	  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
	  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
	  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
	  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
	  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
	  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
	  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
	  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
	  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
	  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
	  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
	  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
	  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
	  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
	  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
	  '\u0174': 'W',  '\u0175': 'w',
	  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
	  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
	  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
	  '\u0132': 'IJ', '\u0133': 'ij',
	  '\u0152': 'Oe', '\u0153': 'oe',
	  '\u0149': "'n", '\u017f': 's'
	};

	/**
	 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
	 * letters to basic Latin letters.
	 *
	 * @private
	 * @param {string} letter The matched letter to deburr.
	 * @returns {string} Returns the deburred letter.
	 */
	var deburrLetter = basePropertyOf(deburredLetters);

	module.exports = deburrLetter;


/***/ }),
/* 566 */
/***/ (function(module, exports) {

	/**
	 * The base implementation of `_.propertyOf` without support for deep paths.
	 *
	 * @private
	 * @param {Object} object The object to query.
	 * @returns {Function} Returns the new accessor function.
	 */
	function basePropertyOf(object) {
	  return function(key) {
	    return object == null ? undefined : object[key];
	  };
	}

	module.exports = basePropertyOf;


/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

	var asciiWords = __webpack_require__(568),
	    hasUnicodeWord = __webpack_require__(569),
	    toString = __webpack_require__(169),
	    unicodeWords = __webpack_require__(570);

	/**
	 * Splits `string` into an array of its words.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.0.0
	 * @category String
	 * @param {string} [string=''] The string to inspect.
	 * @param {RegExp|string} [pattern] The pattern to match words.
	 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
	 * @returns {Array} Returns the words of `string`.
	 * @example
	 *
	 * _.words('fred, barney, & pebbles');
	 * // => ['fred', 'barney', 'pebbles']
	 *
	 * _.words('fred, barney, & pebbles', /[^, ]+/g);
	 * // => ['fred', 'barney', '&', 'pebbles']
	 */
	function words(string, pattern, guard) {
	  string = toString(string);
	  pattern = guard ? undefined : pattern;

	  if (pattern === undefined) {
	    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
	  }
	  return string.match(pattern) || [];
	}

	module.exports = words;


/***/ }),
/* 568 */
/***/ (function(module, exports) {

	/** Used to match words composed of alphanumeric characters. */
	var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

	/**
	 * Splits an ASCII `string` into an array of its words.
	 *
	 * @private
	 * @param {string} The string to inspect.
	 * @returns {Array} Returns the words of `string`.
	 */
	function asciiWords(string) {
	  return string.match(reAsciiWord) || [];
	}

	module.exports = asciiWords;


/***/ }),
/* 569 */
/***/ (function(module, exports) {

	/** Used to detect strings that need a more robust regexp to match words. */
	var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

	/**
	 * Checks if `string` contains a word composed of Unicode symbols.
	 *
	 * @private
	 * @param {string} string The string to inspect.
	 * @returns {boolean} Returns `true` if a word is found, else `false`.
	 */
	function hasUnicodeWord(string) {
	  return reHasUnicodeWord.test(string);
	}

	module.exports = hasUnicodeWord;


/***/ }),
/* 570 */
/***/ (function(module, exports) {

	/** Used to compose unicode character classes. */
	var rsAstralRange = '\\ud800-\\udfff',
	    rsComboMarksRange = '\\u0300-\\u036f',
	    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
	    rsComboSymbolsRange = '\\u20d0-\\u20ff',
	    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
	    rsDingbatRange = '\\u2700-\\u27bf',
	    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
	    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
	    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
	    rsPunctuationRange = '\\u2000-\\u206f',
	    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
	    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
	    rsVarRange = '\\ufe0e\\ufe0f',
	    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

	/** Used to compose unicode capture groups. */
	var rsApos = "['\u2019]",
	    rsBreak = '[' + rsBreakRange + ']',
	    rsCombo = '[' + rsComboRange + ']',
	    rsDigits = '\\d+',
	    rsDingbat = '[' + rsDingbatRange + ']',
	    rsLower = '[' + rsLowerRange + ']',
	    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
	    rsFitz = '\\ud83c[\\udffb-\\udfff]',
	    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
	    rsNonAstral = '[^' + rsAstralRange + ']',
	    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
	    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
	    rsUpper = '[' + rsUpperRange + ']',
	    rsZWJ = '\\u200d';

	/** Used to compose unicode regexes. */
	var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
	    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
	    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
	    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
	    reOptMod = rsModifier + '?',
	    rsOptVar = '[' + rsVarRange + ']?',
	    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
	    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
	    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
	    rsSeq = rsOptVar + reOptMod + rsOptJoin,
	    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

	/** Used to match complex or compound words. */
	var reUnicodeWord = RegExp([
	  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
	  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
	  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
	  rsUpper + '+' + rsOptContrUpper,
	  rsOrdUpper,
	  rsOrdLower,
	  rsDigits,
	  rsEmoji
	].join('|'), 'g');

	/**
	 * Splits a Unicode `string` into an array of its words.
	 *
	 * @private
	 * @param {string} The string to inspect.
	 * @returns {Array} Returns the words of `string`.
	 */
	function unicodeWords(string) {
	  return string.match(reUnicodeWord) || [];
	}

	module.exports = unicodeWords;


/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

	var createCaseFirst = __webpack_require__(572);

	/**
	 * Converts the first character of `string` to upper case.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category String
	 * @param {string} [string=''] The string to convert.
	 * @returns {string} Returns the converted string.
	 * @example
	 *
	 * _.upperFirst('fred');
	 * // => 'Fred'
	 *
	 * _.upperFirst('FRED');
	 * // => 'FRED'
	 */
	var upperFirst = createCaseFirst('toUpperCase');

	module.exports = upperFirst;


/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

	var castSlice = __webpack_require__(414),
	    hasUnicode = __webpack_require__(419),
	    stringToArray = __webpack_require__(417),
	    toString = __webpack_require__(169);

	/**
	 * Creates a function like `_.lowerFirst`.
	 *
	 * @private
	 * @param {string} methodName The name of the `String` case method to use.
	 * @returns {Function} Returns the new case function.
	 */
	function createCaseFirst(methodName) {
	  return function(string) {
	    string = toString(string);

	    var strSymbols = hasUnicode(string)
	      ? stringToArray(string)
	      : undefined;

	    var chr = strSymbols
	      ? strSymbols[0]
	      : string.charAt(0);

	    var trailing = strSymbols
	      ? castSlice(strSymbols, 1).join('')
	      : string.slice(1);

	    return chr[methodName]() + trailing;
	  };
	}

	module.exports = createCaseFirst;


/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A menu can contain a sub menu.
	 */
	function MenuMenu(props) {
	  var children = props.children,
	      className = props.className,
	      position = props.position;


	  var classes = (0, _classnames2.default)(position, 'menu', className);
	  var rest = (0, _lib.getUnhandledProps)(MenuMenu, props);
	  var ElementType = (0, _lib.getElementType)(MenuMenu, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	MenuMenu.handledProps = ['as', 'children', 'className', 'position'];
	MenuMenu._meta = {
	  name: 'MenuMenu',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Menu'
	};

	process.env.NODE_ENV !== "production" ? MenuMenu.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A sub menu can take right position. */
	  position: _propTypes2.default.oneOf(['right'])
	} : void 0;

	exports.default = MenuMenu;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Message = __webpack_require__(575);

	var _Message2 = _interopRequireDefault(_Message);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Message2.default;

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _MessageContent = __webpack_require__(576);

	var _MessageContent2 = _interopRequireDefault(_MessageContent);

	var _MessageHeader = __webpack_require__(577);

	var _MessageHeader2 = _interopRequireDefault(_MessageHeader);

	var _MessageList = __webpack_require__(578);

	var _MessageList2 = _interopRequireDefault(_MessageList);

	var _MessageItem = __webpack_require__(579);

	var _MessageItem2 = _interopRequireDefault(_MessageItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A message displays information that explains nearby content.
	 * @see Form
	 */
	var Message = function (_Component) {
	  (0, _inherits3.default)(Message, _Component);

	  function Message() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Message);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Message.__proto__ || Object.getPrototypeOf(Message)).call.apply(_ref, [this].concat(args))), _this), _this.handleDismiss = function (e) {
	      var onDismiss = _this.props.onDismiss;


	      if (onDismiss) onDismiss(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Message, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          attached = _props.attached,
	          children = _props.children,
	          className = _props.className,
	          color = _props.color,
	          compact = _props.compact,
	          content = _props.content,
	          error = _props.error,
	          floating = _props.floating,
	          header = _props.header,
	          hidden = _props.hidden,
	          icon = _props.icon,
	          info = _props.info,
	          list = _props.list,
	          negative = _props.negative,
	          onDismiss = _props.onDismiss,
	          positive = _props.positive,
	          size = _props.size,
	          success = _props.success,
	          visible = _props.visible,
	          warning = _props.warning;


	      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(floating, 'floating'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(icon, 'icon'), (0, _lib.useKeyOnly)(info, 'info'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(success, 'success'), (0, _lib.useKeyOnly)(visible, 'visible'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), 'message', className);

	      var dismissIcon = onDismiss && _react2.default.createElement(_Icon2.default, { name: 'close', onClick: this.handleDismiss });
	      var rest = (0, _lib.getUnhandledProps)(Message, this.props);
	      var ElementType = (0, _lib.getElementType)(Message, this.props);

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes }),
	          dismissIcon,
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        dismissIcon,
	        _Icon2.default.create(icon),
	        (!(0, _isNil3.default)(header) || !(0, _isNil3.default)(content) || !(0, _isNil3.default)(list)) && _react2.default.createElement(
	          _MessageContent2.default,
	          null,
	          _MessageHeader2.default.create(header),
	          _MessageList2.default.create(list),
	          (0, _lib.createHTMLParagraph)(content)
	        )
	      );
	    }
	  }]);
	  return Message;
	}(_react.Component);

	Message._meta = {
	  name: 'Message',
	  type: _lib.META.TYPES.COLLECTION
	};
	Message.Content = _MessageContent2.default;
	Message.Header = _MessageHeader2.default;
	Message.List = _MessageList2.default;
	Message.Item = _MessageItem2.default;
	Message.handledProps = ['as', 'attached', 'children', 'className', 'color', 'compact', 'content', 'error', 'floating', 'header', 'hidden', 'icon', 'info', 'list', 'negative', 'onDismiss', 'positive', 'size', 'success', 'visible', 'warning'];
	exports.default = Message;
	process.env.NODE_ENV !== "production" ? Message.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A message can be formatted to attach itself to other content. */
	  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['bottom'])]),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A message can be formatted to be different colors. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A message can only take up the width of its content. */
	  compact: _propTypes2.default.bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A message may be formatted to display a negative message. Same as `negative`. */
	  error: _propTypes2.default.bool,

	  /** A message can float above content that it is related to. */
	  floating: _propTypes2.default.bool,

	  /** Shorthand for MessageHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** A message can be hidden. */
	  hidden: _propTypes2.default.bool,

	  /** A message can contain an icon. */
	  icon: _propTypes2.default.oneOfType([_lib.customPropTypes.itemShorthand, _propTypes2.default.bool]),

	  /** A message may be formatted to display information. */
	  info: _propTypes2.default.bool,

	  /** Array shorthand items for the MessageList. Mutually exclusive with children. */
	  list: _lib.customPropTypes.collectionShorthand,

	  /** A message may be formatted to display a negative message. Same as `error`. */
	  negative: _propTypes2.default.bool,

	  /**
	   * A message that the user can choose to hide.
	   * Called when the user clicks the "x" icon. This also adds the "x" icon.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onDismiss: _propTypes2.default.func,

	  /** A message may be formatted to display a positive message.  Same as `success`. */
	  positive: _propTypes2.default.bool,

	  /** A message can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),

	  /** A message may be formatted to display a positive message.  Same as `positive`. */
	  success: _propTypes2.default.bool,

	  /** A message can be set to visible to force itself to be shown. */
	  visible: _propTypes2.default.bool,

	  /** A message may be formatted to display warning messages. */
	  warning: _propTypes2.default.bool
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A message can contain a content.
	 */
	function MessageContent(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)('content', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageContent, props);
	  var ElementType = (0, _lib.getElementType)(MessageContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	MessageContent.handledProps = ['as', 'children', 'className'];
	MessageContent._meta = {
	  name: 'MessageContent',
	  parent: 'Message',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? MessageContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = MessageContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A message can contain a header.
	 */
	function MessageHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('header', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageHeader, props);
	  var ElementType = (0, _lib.getElementType)(MessageHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	MessageHeader.handledProps = ['as', 'children', 'className', 'content'];
	MessageHeader._meta = {
	  name: 'MessageHeader',
	  parent: 'Message',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? MessageHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.itemShorthand
	} : void 0;

	MessageHeader.create = (0, _lib.createShorthandFactory)(MessageHeader, function (val) {
	  return { content: val };
	});

	exports.default = MessageHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _MessageItem = __webpack_require__(579);

	var _MessageItem2 = _interopRequireDefault(_MessageItem);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A message can contain a list of items.
	 */
	function MessageList(props) {
	  var children = props.children,
	      className = props.className,
	      items = props.items;

	  var classes = (0, _classnames2.default)('list', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageList, props);
	  var ElementType = (0, _lib.getElementType)(MessageList, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? (0, _map3.default)(items, _MessageItem2.default.create) : children
	  );
	}

	MessageList.handledProps = ['as', 'children', 'className', 'items'];
	MessageList._meta = {
	  name: 'MessageList',
	  parent: 'Message',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? MessageList.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand Message.Items. */
	  items: _lib.customPropTypes.collectionShorthand
	} : void 0;

	MessageList.defaultProps = {
	  as: 'ul'
	};

	MessageList.create = (0, _lib.createShorthandFactory)(MessageList, function (val) {
	  return { items: val };
	});

	exports.default = MessageList;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A message list can contain an item.
	 */
	function MessageItem(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('content', className);
	  var rest = (0, _lib.getUnhandledProps)(MessageItem, props);
	  var ElementType = (0, _lib.getElementType)(MessageItem, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	MessageItem.handledProps = ['as', 'children', 'className', 'content'];
	MessageItem._meta = {
	  name: 'MessageItem',
	  parent: 'Message',
	  type: _lib.META.TYPES.COLLECTION
	};

	process.env.NODE_ENV !== "production" ? MessageItem.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.itemShorthand
	} : void 0;

	MessageItem.defaultProps = {
	  as: 'li'
	};

	MessageItem.create = (0, _lib.createShorthandFactory)(MessageItem, function (content) {
	  return { content: content };
	});

	exports.default = MessageItem;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Table = __webpack_require__(581);

	var _Table2 = _interopRequireDefault(_Table);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Table2.default;

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _TableBody = __webpack_require__(582);

	var _TableBody2 = _interopRequireDefault(_TableBody);

	var _TableCell = __webpack_require__(583);

	var _TableCell2 = _interopRequireDefault(_TableCell);

	var _TableFooter = __webpack_require__(584);

	var _TableFooter2 = _interopRequireDefault(_TableFooter);

	var _TableHeader = __webpack_require__(585);

	var _TableHeader2 = _interopRequireDefault(_TableHeader);

	var _TableHeaderCell = __webpack_require__(586);

	var _TableHeaderCell2 = _interopRequireDefault(_TableHeaderCell);

	var _TableRow = __webpack_require__(587);

	var _TableRow2 = _interopRequireDefault(_TableRow);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A table displays a collections of data grouped into rows.
	 */
	function Table(props) {
	  var attached = props.attached,
	      basic = props.basic,
	      celled = props.celled,
	      children = props.children,
	      className = props.className,
	      collapsing = props.collapsing,
	      color = props.color,
	      columns = props.columns,
	      compact = props.compact,
	      definition = props.definition,
	      fixed = props.fixed,
	      footerRow = props.footerRow,
	      headerRow = props.headerRow,
	      inverted = props.inverted,
	      padded = props.padded,
	      renderBodyRow = props.renderBodyRow,
	      selectable = props.selectable,
	      singleLine = props.singleLine,
	      size = props.size,
	      sortable = props.sortable,
	      stackable = props.stackable,
	      striped = props.striped,
	      structured = props.structured,
	      tableData = props.tableData,
	      textAlign = props.textAlign,
	      unstackable = props.unstackable,
	      verticalAlign = props.verticalAlign;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(definition, 'definition'), (0, _lib.useKeyOnly)(fixed, 'fixed'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(sortable, 'sortable'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useKeyOnly)(striped, 'striped'), (0, _lib.useKeyOnly)(structured, 'structured'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(basic, 'basic'), (0, _lib.useKeyOrValueAndKey)(compact, 'compact'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(columns, 'column'), 'table', className);
	  var rest = (0, _lib.getUnhandledProps)(Table, props);
	  var ElementType = (0, _lib.getElementType)(Table, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    headerRow && _react2.default.createElement(
	      _TableHeader2.default,
	      null,
	      _TableRow2.default.create(headerRow, { defaultProps: { cellAs: 'th' } })
	    ),
	    _react2.default.createElement(
	      _TableBody2.default,
	      null,
	      renderBodyRow && (0, _map3.default)(tableData, function (data, index) {
	        return _TableRow2.default.create(renderBodyRow(data, index));
	      })
	    ),
	    footerRow && _react2.default.createElement(
	      _TableFooter2.default,
	      null,
	      _TableRow2.default.create(footerRow)
	    )
	  );
	}

	Table.handledProps = ['as', 'attached', 'basic', 'celled', 'children', 'className', 'collapsing', 'color', 'columns', 'compact', 'definition', 'fixed', 'footerRow', 'headerRow', 'inverted', 'padded', 'renderBodyRow', 'selectable', 'singleLine', 'size', 'sortable', 'stackable', 'striped', 'structured', 'tableData', 'textAlign', 'unstackable', 'verticalAlign'];
	Table._meta = {
	  name: 'Table',
	  type: _lib.META.TYPES.COLLECTION
	};

	Table.defaultProps = {
	  as: 'table'
	};

	process.env.NODE_ENV !== "production" ? Table.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Attach table to other content */
	  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),

	  /** A table can reduce its complexity to increase readability. */
	  basic: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['very']), _propTypes2.default.bool]),

	  /** A table may be divided each row into separate cells. */
	  celled: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A table can be collapsing, taking up only as much space as its rows. */
	  collapsing: _propTypes2.default.bool,

	  /** A table can be given a color to distinguish it from other tables. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A table can specify its column count to divide its content evenly. */
	  columns: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** A table may sometimes need to be more compact to make more rows visible at a time. */
	  compact: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /** A table may be formatted to emphasize a first column that defines a rows content. */
	  definition: _propTypes2.default.bool,

	  /**
	   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content
	   */
	  fixed: _propTypes2.default.bool,

	  /** Shorthand for a TableRow to be placed within Table.Footer. */
	  footerRow: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for a TableRow to be placed within Table.Header. */
	  headerRow: _lib.customPropTypes.itemShorthand,

	  /** A table's colors can be inverted. */
	  inverted: _propTypes2.default.bool,

	  /** A table may sometimes need to be more padded for legibility. */
	  padded: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /**
	   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.
	   *
	   * @param {*} data - An element in the `tableData` array.
	   * @param {number} index - The index of the current element in `tableData`.
	   * @returns {*} Shorthand for a Table.Row.
	   */
	  renderBodyRow: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['tableData']), _propTypes2.default.func]),

	  /** A table can have its rows appear selectable. */
	  selectable: _propTypes2.default.bool,

	  /** A table can specify that its cell contents should remain on a single line and not wrap. */
	  singleLine: _propTypes2.default.bool,

	  /** A table can also be small or large. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),

	  /** A table may allow a user to sort contents by clicking on a table header. */
	  sortable: _propTypes2.default.bool,

	  /** A table can specify how it stacks table content responsively. */
	  stackable: _propTypes2.default.bool,

	  /** A table can stripe alternate rows of content with a darker color to increase contrast. */
	  striped: _propTypes2.default.bool,

	  /** A table can be formatted to display complex structured data. */
	  structured: _propTypes2.default.bool,

	  /** Data to be passed to the renderBodyRow function. */
	  tableData: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _lib.customPropTypes.demand(['renderBodyRow']), _propTypes2.default.array]),

	  /** A table can adjust its text alignment. */
	  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** A table can specify how it stacks table content responsively. */
	  unstackable: _propTypes2.default.bool,

	  /** A table can adjust its text alignment. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;

	Table.Body = _TableBody2.default;
	Table.Cell = _TableCell2.default;
	Table.Footer = _TableFooter2.default;
	Table.Header = _TableHeader2.default;
	Table.HeaderCell = _TableHeaderCell2.default;
	Table.Row = _TableRow2.default;

	exports.default = Table;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function TableBody(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)(className);
	  var rest = (0, _lib.getUnhandledProps)(TableBody, props);
	  var ElementType = (0, _lib.getElementType)(TableBody, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	TableBody.handledProps = ['as', 'children', 'className'];
	TableBody._meta = {
	  name: 'TableBody',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Table'
	};

	TableBody.defaultProps = {
	  as: 'tbody'
	};

	process.env.NODE_ENV !== "production" ? TableBody.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = TableBody;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A table row can have cells.
	 */
	function TableCell(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      collapsing = props.collapsing,
	      content = props.content,
	      disabled = props.disabled,
	      error = props.error,
	      icon = props.icon,
	      negative = props.negative,
	      positive = props.positive,
	      selectable = props.selectable,
	      singleLine = props.singleLine,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign,
	      warning = props.warning,
	      width = props.width;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(collapsing, 'collapsing'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(selectable, 'selectable'), (0, _lib.useKeyOnly)(singleLine, 'single line'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), (0, _lib.useWidthProp)(width, 'wide'), className);
	  var rest = (0, _lib.getUnhandledProps)(TableCell, props);
	  var ElementType = (0, _lib.getElementType)(TableCell, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _Icon2.default.create(icon),
	    content
	  );
	}

	TableCell.handledProps = ['active', 'as', 'children', 'className', 'collapsing', 'content', 'disabled', 'error', 'icon', 'negative', 'positive', 'selectable', 'singleLine', 'textAlign', 'verticalAlign', 'warning', 'width'];
	TableCell._meta = {
	  name: 'TableCell',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Table'
	};

	TableCell.defaultProps = {
	  as: 'td'
	};

	process.env.NODE_ENV !== "production" ? TableCell.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A cell can be active or selected by a user. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A cell can be collapsing so that it only uses as much space as required. */
	  collapsing: _propTypes2.default.bool,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A cell can be disabled. */
	  disabled: _propTypes2.default.bool,

	  /** A cell may call attention to an error or a negative value. */
	  error: _propTypes2.default.bool,

	  /** Add an Icon by name, props object, or pass an <Icon /> */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** A cell may let a user know whether a value is bad. */
	  negative: _propTypes2.default.bool,

	  /** A cell may let a user know whether a value is good. */
	  positive: _propTypes2.default.bool,

	  /** A cell can be selectable. */
	  selectable: _propTypes2.default.bool,

	  /** A cell can specify that its contents should remain on a single line and not wrap. */
	  singleLine: _propTypes2.default.bool,

	  /** A table cell can adjust its text alignment. */
	  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** A table cell can adjust its text alignment. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** A cell may warn a user. */
	  warning: _propTypes2.default.bool,

	  /** A table can specify the width of individual columns independently. */
	  width: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)
	} : void 0;

	TableCell.create = (0, _lib.createShorthandFactory)(TableCell, function (content) {
	  return { content: content };
	});

	exports.default = TableCell;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _TableHeader = __webpack_require__(585);

	var _TableHeader2 = _interopRequireDefault(_TableHeader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A table can have a footer.
	 */
	function TableFooter(props) {
	  var as = props.as;

	  var rest = (0, _lib.getUnhandledProps)(TableFooter, props);

	  return _react2.default.createElement(_TableHeader2.default, (0, _extends3.default)({}, rest, { as: as }));
	}

	TableFooter.handledProps = ['as'];
	TableFooter._meta = {
	  name: 'TableFooter',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Table'
	};

	process.env.NODE_ENV !== "production" ? TableFooter.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as
	} : void 0;

	TableFooter.defaultProps = {
	  as: 'tfoot'
	};

	exports.default = TableFooter;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A table can have a header.
	 */
	function TableHeader(props) {
	  var children = props.children,
	      className = props.className,
	      fullWidth = props.fullWidth;

	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(fullWidth, 'full-width'), className);
	  var rest = (0, _lib.getUnhandledProps)(TableHeader, props);
	  var ElementType = (0, _lib.getElementType)(TableHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	TableHeader.handledProps = ['as', 'children', 'className', 'fullWidth'];
	TableHeader._meta = {
	  name: 'TableHeader',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Table'
	};

	TableHeader.defaultProps = {
	  as: 'thead'
	};

	process.env.NODE_ENV !== "production" ? TableHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */
	  fullWidth: _propTypes2.default.bool
	} : void 0;

	exports.default = TableHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _TableCell = __webpack_require__(583);

	var _TableCell2 = _interopRequireDefault(_TableCell);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A table can have a header cell.
	 */
	function TableHeaderCell(props) {
	  var as = props.as,
	      className = props.className,
	      sorted = props.sorted;

	  var classes = (0, _classnames2.default)((0, _lib.useValueAndKey)(sorted, 'sorted'), className);
	  var rest = (0, _lib.getUnhandledProps)(TableHeaderCell, props);

	  return _react2.default.createElement(_TableCell2.default, (0, _extends3.default)({}, rest, { as: as, className: classes }));
	}

	TableHeaderCell.handledProps = ['as', 'className', 'sorted'];
	TableHeaderCell._meta = {
	  name: 'TableHeaderCell',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Table'
	};

	process.env.NODE_ENV !== "production" ? TableHeaderCell.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A header cell can be sorted in ascending or descending order. */
	  sorted: _propTypes2.default.oneOf(['ascending', 'descending'])
	} : void 0;

	TableHeaderCell.defaultProps = {
	  as: 'th'
	};

	exports.default = TableHeaderCell;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _TableCell = __webpack_require__(583);

	var _TableCell2 = _interopRequireDefault(_TableCell);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A table can have rows.
	 */
	function TableRow(props) {
	  var active = props.active,
	      cellAs = props.cellAs,
	      cells = props.cells,
	      children = props.children,
	      className = props.className,
	      disabled = props.disabled,
	      error = props.error,
	      negative = props.negative,
	      positive = props.positive,
	      textAlign = props.textAlign,
	      verticalAlign = props.verticalAlign,
	      warning = props.warning;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(negative, 'negative'), (0, _lib.useKeyOnly)(positive, 'positive'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useVerticalAlignProp)(verticalAlign), className);
	  var rest = (0, _lib.getUnhandledProps)(TableRow, props);
	  var ElementType = (0, _lib.getElementType)(TableRow, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _map3.default)(cells, function (cell) {
	      return _TableCell2.default.create(cell, { defaultProps: { as: cellAs } });
	    })
	  );
	}

	TableRow.handledProps = ['active', 'as', 'cellAs', 'cells', 'children', 'className', 'disabled', 'error', 'negative', 'positive', 'textAlign', 'verticalAlign', 'warning'];
	TableRow._meta = {
	  name: 'TableRow',
	  type: _lib.META.TYPES.COLLECTION,
	  parent: 'Table'
	};

	TableRow.defaultProps = {
	  as: 'tr',
	  cellAs: 'td'
	};

	process.env.NODE_ENV !== "production" ? TableRow.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A row can be active or selected by a user. */
	  active: _propTypes2.default.bool,

	  /** An element type to render as (string or function). */
	  cellAs: _lib.customPropTypes.as,

	  /** Shorthand array of props for TableCell. */
	  cells: _lib.customPropTypes.collectionShorthand,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A row can be disabled. */
	  disabled: _propTypes2.default.bool,

	  /** A row may call attention to an error or a negative value. */
	  error: _propTypes2.default.bool,

	  /** A row may let a user know whether a value is bad. */
	  negative: _propTypes2.default.bool,

	  /** A row may let a user know whether a value is good. */
	  positive: _propTypes2.default.bool,

	  /** A table row can adjust its text alignment. */
	  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** A table row can adjust its vertical alignment. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS),

	  /** A row may warn a user. */
	  warning: _propTypes2.default.bool
	} : void 0;

	TableRow.create = (0, _lib.createShorthandFactory)(TableRow, function (cells) {
	  return { cells: cells };
	});

	exports.default = TableRow;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Container = __webpack_require__(589);

	var _Container2 = _interopRequireDefault(_Container);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Container2.default;

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A container limits content to a maximum width.
	 */
	function Container(props) {
	  var children = props.children,
	      className = props.className,
	      fluid = props.fluid,
	      text = props.text,
	      textAlign = props.textAlign;

	  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(text, 'text'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useTextAlignProp)(textAlign), 'container', className);
	  var rest = (0, _lib.getUnhandledProps)(Container, props);
	  var ElementType = (0, _lib.getElementType)(Container, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Container.handledProps = ['as', 'children', 'className', 'fluid', 'text', 'textAlign'];
	Container._meta = {
	  name: 'Container',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Container.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Container has no maximum width. */
	  fluid: _propTypes2.default.bool,

	  /** Reduce maximum width to more naturally accommodate text. */
	  text: _propTypes2.default.bool,

	  /** Align container text. */
	  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS)
	} : void 0;

	exports.default = Container;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Divider = __webpack_require__(591);

	var _Divider2 = _interopRequireDefault(_Divider);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Divider2.default;

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A divider visually segments content into groups.
	 */
	function Divider(props) {
	  var children = props.children,
	      className = props.className,
	      clearing = props.clearing,
	      fitted = props.fitted,
	      hidden = props.hidden,
	      horizontal = props.horizontal,
	      inverted = props.inverted,
	      section = props.section,
	      vertical = props.vertical;


	  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(fitted, 'fitted'), (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(section, 'section'), (0, _lib.useKeyOnly)(vertical, 'vertical'), 'divider', className);
	  var rest = (0, _lib.getUnhandledProps)(Divider, props);
	  var ElementType = (0, _lib.getElementType)(Divider, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Divider.handledProps = ['as', 'children', 'className', 'clearing', 'fitted', 'hidden', 'horizontal', 'inverted', 'section', 'vertical'];
	Divider._meta = {
	  name: 'Divider',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Divider.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Divider can clear the content above it. */
	  clearing: _propTypes2.default.bool,

	  /** Divider can be fitted without any space above or below it. */
	  fitted: _propTypes2.default.bool,

	  /** Divider can divide content without creating a dividing line. */
	  hidden: _propTypes2.default.bool,

	  /** Divider can segment content horizontally. */
	  horizontal: _propTypes2.default.bool,

	  /** Divider can have it's colours inverted. */
	  inverted: _propTypes2.default.bool,

	  /** Divider can provide greater margins to divide sections of content. */
	  section: _propTypes2.default.bool,

	  /** Divider can segment content vertically. */
	  vertical: _propTypes2.default.bool
	} : void 0;

	exports.default = Divider;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Header = __webpack_require__(593);

	var _Header2 = _interopRequireDefault(_Header);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Header2.default;

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _Image = __webpack_require__(523);

	var _Image2 = _interopRequireDefault(_Image);

	var _HeaderSubheader = __webpack_require__(594);

	var _HeaderSubheader2 = _interopRequireDefault(_HeaderSubheader);

	var _HeaderContent = __webpack_require__(595);

	var _HeaderContent2 = _interopRequireDefault(_HeaderContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A header provides a short summary of content
	 */
	function Header(props) {
	  var attached = props.attached,
	      block = props.block,
	      children = props.children,
	      className = props.className,
	      color = props.color,
	      content = props.content,
	      disabled = props.disabled,
	      dividing = props.dividing,
	      floated = props.floated,
	      icon = props.icon,
	      image = props.image,
	      inverted = props.inverted,
	      size = props.size,
	      sub = props.sub,
	      subheader = props.subheader,
	      textAlign = props.textAlign;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(block, 'block'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(icon === true, 'icon'), (0, _lib.useKeyOnly)(image === true, 'image'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(sub, 'sub'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useTextAlignProp)(textAlign), 'header', className);
	  var rest = (0, _lib.getUnhandledProps)(Header, props);
	  var ElementType = (0, _lib.getElementType)(Header, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  var iconElement = _Icon2.default.create(icon);
	  var imageElement = _Image2.default.create(image);
	  var subheaderElement = _HeaderSubheader2.default.create(subheader);

	  if (iconElement || imageElement) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      iconElement || imageElement,
	      (content || subheaderElement) && _react2.default.createElement(
	        _HeaderContent2.default,
	        null,
	        content,
	        subheaderElement
	      )
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    content,
	    subheaderElement
	  );
	}

	Header.handledProps = ['as', 'attached', 'block', 'children', 'className', 'color', 'content', 'disabled', 'dividing', 'floated', 'icon', 'image', 'inverted', 'size', 'sub', 'subheader', 'textAlign'];
	Header._meta = {
	  name: 'Header',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Header.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Attach header  to other content, like a segment. */
	  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),

	  /** Format header to appear inside a content block. */
	  block: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Color of the header. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Show that the header is inactive. */
	  disabled: _propTypes2.default.bool,

	  /** Divide header from the content below it. */
	  dividing: _propTypes2.default.bool,

	  /** Header can sit to the left or right of other content. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** Add an icon by icon name or pass an Icon. */
	  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand])]),

	  /** Add an image by img src or pass an Image. */
	  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.itemShorthand])]),

	  /** Inverts the color of the header for dark backgrounds. */
	  inverted: _propTypes2.default.bool,

	  /** Content headings are sized with em and are based on the font-size of their container. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive')),

	  /** Headers may be formatted to label smaller or de-emphasized content. */
	  sub: _propTypes2.default.bool,

	  /** Shorthand for Header.Subheader. */
	  subheader: _lib.customPropTypes.itemShorthand,

	  /** Align header content. */
	  textAlign: _propTypes2.default.oneOf(_lib.SUI.TEXT_ALIGNMENTS)
	} : void 0;

	Header.Content = _HeaderContent2.default;
	Header.Subheader = _HeaderSubheader2.default;

	exports.default = Header;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Headers may contain subheaders.
	 */
	function HeaderSubheader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('sub header', className);
	  var rest = (0, _lib.getUnhandledProps)(HeaderSubheader, props);
	  var ElementType = (0, _lib.getElementType)(HeaderSubheader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	HeaderSubheader.handledProps = ['as', 'children', 'className', 'content'];
	HeaderSubheader._meta = {
	  name: 'HeaderSubheader',
	  parent: 'Header',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? HeaderSubheader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	HeaderSubheader.create = (0, _lib.createShorthandFactory)(HeaderSubheader, function (content) {
	  return { content: content };
	});

	exports.default = HeaderSubheader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Header content wraps the main content when there is an adjacent Icon or Image.
	 */
	function HeaderContent(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)('content', className);
	  var rest = (0, _lib.getUnhandledProps)(HeaderContent, props);
	  var ElementType = (0, _lib.getElementType)(HeaderContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	HeaderContent.handledProps = ['as', 'children', 'className'];
	HeaderContent._meta = {
	  name: 'HeaderContent',
	  parent: 'Header',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? HeaderContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = HeaderContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _List = __webpack_require__(597);

	var _List2 = _interopRequireDefault(_List);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _List2.default;

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _ListContent = __webpack_require__(598);

	var _ListContent2 = _interopRequireDefault(_ListContent);

	var _ListDescription = __webpack_require__(599);

	var _ListDescription2 = _interopRequireDefault(_ListDescription);

	var _ListHeader = __webpack_require__(600);

	var _ListHeader2 = _interopRequireDefault(_ListHeader);

	var _ListIcon = __webpack_require__(601);

	var _ListIcon2 = _interopRequireDefault(_ListIcon);

	var _ListItem = __webpack_require__(602);

	var _ListItem2 = _interopRequireDefault(_ListItem);

	var _ListList = __webpack_require__(603);

	var _ListList2 = _interopRequireDefault(_ListList);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list groups related content.
	 */
	var List = function (_Component) {
	  (0, _inherits3.default)(List, _Component);

	  function List() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, List);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = List.__proto__ || Object.getPrototypeOf(List)).call.apply(_ref, [this].concat(args))), _this), _this.handleItemOverrides = function (predefinedProps) {
	      return {
	        onClick: function onClick(e, itemProps) {
	          (0, _invoke3.default)(predefinedProps, 'onClick', e, itemProps);
	          (0, _invoke3.default)(_this.props, 'onItemClick', e, itemProps);
	        }
	      };
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(List, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          animated = _props.animated,
	          bulleted = _props.bulleted,
	          celled = _props.celled,
	          children = _props.children,
	          className = _props.className,
	          divided = _props.divided,
	          floated = _props.floated,
	          horizontal = _props.horizontal,
	          inverted = _props.inverted,
	          items = _props.items,
	          link = _props.link,
	          ordered = _props.ordered,
	          relaxed = _props.relaxed,
	          selection = _props.selection,
	          size = _props.size,
	          verticalAlign = _props.verticalAlign;


	      var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(animated, 'animated'), (0, _lib.useKeyOnly)(bulleted, 'bulleted'), (0, _lib.useKeyOnly)(celled, 'celled'), (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(selection, 'selection'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'list', className);
	      var rest = (0, _lib.getUnhandledProps)(List, this.props);
	      var ElementType = (0, _lib.getElementType)(List, this.props);

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { role: 'list', className: classes }),
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { role: 'list', className: classes }),
	        (0, _map3.default)(items, function (item) {
	          return _ListItem2.default.create(item, { overrideProps: _this2.handleItemOverrides });
	        })
	      );
	    }
	  }]);
	  return List;
	}(_react.Component);

	List._meta = {
	  name: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};
	List.Content = _ListContent2.default;
	List.Description = _ListDescription2.default;
	List.Header = _ListHeader2.default;
	List.Icon = _ListIcon2.default;
	List.Item = _ListItem2.default;
	List.List = _ListList2.default;
	List.handledProps = ['animated', 'as', 'bulleted', 'celled', 'children', 'className', 'divided', 'floated', 'horizontal', 'inverted', 'items', 'link', 'onItemClick', 'ordered', 'relaxed', 'selection', 'size', 'verticalAlign'];
	process.env.NODE_ENV !== "production" ? List.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A list can animate to set the current item apart from the list. */
	  animated: _propTypes2.default.bool,

	  /** A list can mark items with a bullet. */
	  bulleted: _propTypes2.default.bool,

	  /** A list can divide its items into cells. */
	  celled: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A list can show divisions between content. */
	  divided: _propTypes2.default.bool,

	  /** An list can be floated left or right. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** A list can be formatted to have items appear horizontally. */
	  horizontal: _propTypes2.default.bool,

	  /** A list can be inverted to appear on a dark background. */
	  inverted: _propTypes2.default.bool,

	  /** Shorthand array of props for ListItem. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A list can be specially formatted for navigation links. */
	  link: _propTypes2.default.bool,

	  /**
	   * onClick handler for ListItem. Mutually exclusive with children.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All item props.
	   */
	  onItemClick: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.func]),

	  /** A list can be ordered numerically. */
	  ordered: _propTypes2.default.bool,

	  /** A list can relax its padding to provide more negative space. */
	  relaxed: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /** A selection list formats list items as possible choices. */
	  selection: _propTypes2.default.bool,

	  /** A list can vary in size. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES),

	  /** An element inside a list can be vertically aligned. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;
	exports.default = List;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _ListDescription = __webpack_require__(599);

	var _ListDescription2 = _interopRequireDefault(_ListDescription);

	var _ListHeader = __webpack_require__(600);

	var _ListHeader2 = _interopRequireDefault(_ListHeader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list item can contain a content.
	 */
	function ListContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      floated = props.floated,
	      header = props.header,
	      verticalAlign = props.verticalAlign;


	  var classes = (0, _classnames2.default)((0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(ListContent, props);
	  var ElementType = (0, _lib.getElementType)(ListContent, props);

	  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _ListHeader2.default.create(header),
	    _ListDescription2.default.create(description),
	    content
	  );
	}

	ListContent.handledProps = ['as', 'children', 'className', 'content', 'description', 'floated', 'header', 'verticalAlign'];
	ListContent._meta = {
	  name: 'ListContent',
	  parent: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ListContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for ListDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** An list content can be floated left or right. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** Shorthand for ListHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** An element inside a list can be vertically aligned. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;

	ListContent.create = (0, _lib.createShorthandFactory)(ListContent, function (content) {
	  return { content: content };
	});

	exports.default = ListContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list item can contain a description.
	 */
	function ListDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)(className, 'description');
	  var rest = (0, _lib.getUnhandledProps)(ListDescription, props);
	  var ElementType = (0, _lib.getElementType)(ListDescription, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ListDescription.handledProps = ['as', 'children', 'className', 'content'];
	ListDescription._meta = {
	  name: 'ListDescription',
	  parent: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ListDescription.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ListDescription.create = (0, _lib.createShorthandFactory)(ListDescription, function (content) {
	  return { content: content };
	});

	exports.default = ListDescription;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list item can contain a header.
	 */
	function ListHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('header', className);
	  var rest = (0, _lib.getUnhandledProps)(ListHeader, props);
	  var ElementType = (0, _lib.getElementType)(ListHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ListHeader.handledProps = ['as', 'children', 'className', 'content'];
	ListHeader._meta = {
	  name: 'ListHeader',
	  parent: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ListHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ListHeader.create = (0, _lib.createShorthandFactory)(ListHeader, function (content) {
	  return { content: content };
	});

	exports.default = ListHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(466);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list item can contain an icon.
	 */
	function ListIcon(props) {
	  var className = props.className,
	      verticalAlign = props.verticalAlign;

	  var classes = (0, _classnames2.default)((0, _lib.useVerticalAlignProp)(verticalAlign), className);
	  var rest = (0, _lib.getUnhandledProps)(ListIcon, props);

	  return _react2.default.createElement(_Icon2.default, (0, _extends3.default)({}, rest, { className: classes }));
	}

	ListIcon.handledProps = ['className', 'verticalAlign'];
	ListIcon._meta = {
	  name: 'ListIcon',
	  parent: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ListIcon.propTypes = {
	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** An element inside a list can be vertically aligned. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;

	ListIcon.create = (0, _lib.createShorthandFactory)(ListIcon, function (name) {
	  return { name: name };
	});

	exports.default = ListIcon;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isPlainObject2 = __webpack_require__(301);

	var _isPlainObject3 = _interopRequireDefault(_isPlainObject2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Image = __webpack_require__(523);

	var _Image2 = _interopRequireDefault(_Image);

	var _ListContent = __webpack_require__(598);

	var _ListContent2 = _interopRequireDefault(_ListContent);

	var _ListDescription = __webpack_require__(599);

	var _ListDescription2 = _interopRequireDefault(_ListDescription);

	var _ListHeader = __webpack_require__(600);

	var _ListHeader2 = _interopRequireDefault(_ListHeader);

	var _ListIcon = __webpack_require__(601);

	var _ListIcon2 = _interopRequireDefault(_ListIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list item can contain a set of items.
	 */
	var ListItem = function (_Component) {
	  (0, _inherits3.default)(ListItem, _Component);

	  function ListItem() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, ListItem);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ListItem.__proto__ || Object.getPrototypeOf(ListItem)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(ListItem, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          content = _props.content,
	          description = _props.description,
	          disabled = _props.disabled,
	          header = _props.header,
	          icon = _props.icon,
	          image = _props.image,
	          value = _props.value;


	      var ElementType = (0, _lib.getElementType)(ListItem, this.props);
	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(ElementType !== 'li', 'item'), className);
	      var rest = (0, _lib.getUnhandledProps)(ListItem, this.props);
	      var valueProp = ElementType === 'li' ? { value: value } : { 'data-value': value };

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),
	          children
	        );
	      }

	      var iconElement = _ListIcon2.default.create(icon);
	      var imageElement = _Image2.default.create(image);

	      // See description of `content` prop for explanation about why this is necessary.
	      if (!(0, _react.isValidElement)(content) && (0, _isPlainObject3.default)(content)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),
	          iconElement || imageElement,
	          _ListContent2.default.create(content, { header: header, description: description })
	        );
	      }

	      var headerElement = _ListHeader2.default.create(header);
	      var descriptionElement = _ListDescription2.default.create(description);
	      if (iconElement || imageElement) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),
	          iconElement || imageElement,
	          (content || headerElement || descriptionElement) && _react2.default.createElement(
	            _ListContent2.default,
	            null,
	            headerElement,
	            descriptionElement,
	            content
	          )
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, valueProp, { role: 'listitem', className: classes, onClick: this.handleClick }),
	        headerElement,
	        descriptionElement,
	        content
	      );
	    }
	  }]);
	  return ListItem;
	}(_react.Component);

	ListItem._meta = {
	  name: 'ListItem',
	  parent: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};
	ListItem.handledProps = ['active', 'as', 'children', 'className', 'content', 'description', 'disabled', 'header', 'icon', 'image', 'onClick', 'value'];
	process.env.NODE_ENV !== "production" ? ListItem.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A list item can active. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /**
	   * Shorthand for primary content.
	   *
	   * Heads up!
	   *
	   * This is handled slightly differently than the typical `content` prop since
	   * the wrapping ListContent is not used when there's no icon or image.
	   *
	   * If you pass content as:
	   * - an element/literal, it's treated as the sibling node to
	   * header/description (whether wrapped in Item.Content or not).
	   * - a props object, it forces the presence of Item.Content and passes those
	   * props to it. If you pass a content prop within that props object, it
	   * will be treated as the sibling node to header/description.
	   */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ListDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** A list item can disabled. */
	  disabled: _propTypes2.default.bool,

	  /** Shorthand for ListHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ListIcon. */
	  icon: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['image']), _lib.customPropTypes.itemShorthand]),

	  /** Shorthand for Image. */
	  image: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['icon']), _lib.customPropTypes.itemShorthand]),

	  /** A ListItem can be clicked */
	  onClick: _propTypes2.default.func,

	  /** A value for an ordered list. */
	  value: _propTypes2.default.string
	} : void 0;


	ListItem.create = (0, _lib.createShorthandFactory)(ListItem, function (content) {
	  return { content: content };
	});

	exports.default = ListItem;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A list can contain a sub list.
	 */
	function ListList(props) {
	  var children = props.children,
	      className = props.className;


	  var rest = (0, _lib.getUnhandledProps)(ListList, props);
	  var ElementType = (0, _lib.getElementType)(ListList, props);
	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	ListList.handledProps = ['as', 'children', 'className'];
	ListList._meta = {
	  name: 'ListList',
	  parent: 'List',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? ListList.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = ListList;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Loader = __webpack_require__(605);

	var _Loader2 = _interopRequireDefault(_Loader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Loader2.default;

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A loader alerts a user to wait for an activity to complete.
	 * @see Dimmer
	 */
	function Loader(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      content = props.content,
	      disabled = props.disabled,
	      indeterminate = props.indeterminate,
	      inline = props.inline,
	      inverted = props.inverted,
	      size = props.size;


	  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(indeterminate, 'indeterminate'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(children || content, 'text'), (0, _lib.useKeyOrValueAndKey)(inline, 'inline'), 'loader', className);
	  var rest = (0, _lib.getUnhandledProps)(Loader, props);
	  var ElementType = (0, _lib.getElementType)(Loader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	Loader.handledProps = ['active', 'as', 'children', 'className', 'content', 'disabled', 'indeterminate', 'inline', 'inverted', 'size'];
	Loader._meta = {
	  name: 'Loader',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Loader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A loader can be active or visible. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** A loader can be disabled or hidden. */
	  disabled: _propTypes2.default.bool,

	  /** A loader can show it's unsure of how long a task will take. */
	  indeterminate: _propTypes2.default.bool,

	  /** Loaders can appear inline with content. */
	  inline: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['centered'])]),

	  /** Loaders can have their colors inverted. */
	  inverted: _propTypes2.default.bool,

	  /** Loaders can have different sizes. */
	  size: _propTypes2.default.oneOf(_lib.SUI.SIZES)
	} : void 0;

	exports.default = Loader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Rail = __webpack_require__(607);

	var _Rail2 = _interopRequireDefault(_Rail);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Rail2.default;

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A rail is used to show accompanying content outside the boundaries of the main view of a site.
	 */
	function Rail(props) {
	  var attached = props.attached,
	      children = props.children,
	      className = props.className,
	      close = props.close,
	      dividing = props.dividing,
	      internal = props.internal,
	      position = props.position,
	      size = props.size;


	  var classes = (0, _classnames2.default)('ui', position, size, (0, _lib.useKeyOnly)(attached, 'attached'), (0, _lib.useKeyOnly)(dividing, 'dividing'), (0, _lib.useKeyOnly)(internal, 'internal'), (0, _lib.useKeyOrValueAndKey)(close, 'close'), 'rail', className);
	  var rest = (0, _lib.getUnhandledProps)(Rail, props);
	  var ElementType = (0, _lib.getElementType)(Rail, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Rail.handledProps = ['as', 'attached', 'children', 'className', 'close', 'dividing', 'internal', 'position', 'size'];
	Rail._meta = {
	  name: 'Rail',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Rail.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A rail can appear attached to the main viewport. */
	  attached: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A rail can appear closer to the main viewport. */
	  close: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /** A rail can create a division between itself and a container. */
	  dividing: _propTypes2.default.bool,

	  /** A rail can attach itself to the inside of a container. */
	  internal: _propTypes2.default.bool,

	  /** A rail can be presented on the left or right side of a container. */
	  position: _propTypes2.default.oneOf(_lib.SUI.FLOATS).isRequired,

	  /** A rail can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))
	} : void 0;

	exports.default = Rail;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Reveal = __webpack_require__(609);

	var _Reveal2 = _interopRequireDefault(_Reveal);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Reveal2.default;

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _RevealContent = __webpack_require__(610);

	var _RevealContent2 = _interopRequireDefault(_RevealContent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A reveal displays additional content in place of previous content when activated.
	 */
	function Reveal(props) {
	  var active = props.active,
	      animated = props.animated,
	      children = props.children,
	      className = props.className,
	      disabled = props.disabled,
	      instant = props.instant;


	  var classes = (0, _classnames2.default)('ui', animated, (0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(instant, 'instant'), 'reveal', className);
	  var rest = (0, _lib.getUnhandledProps)(Reveal, props);
	  var ElementType = (0, _lib.getElementType)(Reveal, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Reveal.handledProps = ['active', 'animated', 'as', 'children', 'className', 'disabled', 'instant'];
	Reveal._meta = {
	  name: 'Reveal',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Reveal.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An active reveal displays its hidden content. */
	  active: _propTypes2.default.bool,

	  /** An animation name that will be applied to Reveal. */
	  animated: _propTypes2.default.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A disabled reveal will not animate when hovered. */
	  disabled: _propTypes2.default.bool,

	  /** An element can show its content without delay. */
	  instant: _propTypes2.default.bool
	} : void 0;

	Reveal.Content = _RevealContent2.default;

	exports.default = Reveal;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A content sub-component for the Reveal.
	 */
	function RevealContent(props) {
	  var children = props.children,
	      className = props.className,
	      hidden = props.hidden,
	      visible = props.visible;


	  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(hidden, 'hidden'), (0, _lib.useKeyOnly)(visible, 'visible'), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(RevealContent, props);
	  var ElementType = (0, _lib.getElementType)(RevealContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	RevealContent.handledProps = ['as', 'children', 'className', 'hidden', 'visible'];
	RevealContent._meta = {
	  name: 'RevealContent',
	  parent: 'Reveal',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? RevealContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A reveal may contain content that is visible before interaction. */
	  hidden: _propTypes2.default.bool,

	  /** A reveal may contain content that is hidden before user interaction. */
	  visible: _propTypes2.default.bool
	} : void 0;

	exports.default = RevealContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Segment = __webpack_require__(612);

	var _Segment2 = _interopRequireDefault(_Segment);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Segment2.default;

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _SegmentGroup = __webpack_require__(613);

	var _SegmentGroup2 = _interopRequireDefault(_SegmentGroup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A segment is used to create a grouping of related content.
	 */
	function Segment(props) {
	  var attached = props.attached,
	      basic = props.basic,
	      children = props.children,
	      circular = props.circular,
	      className = props.className,
	      clearing = props.clearing,
	      color = props.color,
	      compact = props.compact,
	      disabled = props.disabled,
	      floated = props.floated,
	      inverted = props.inverted,
	      loading = props.loading,
	      padded = props.padded,
	      piled = props.piled,
	      raised = props.raised,
	      secondary = props.secondary,
	      size = props.size,
	      stacked = props.stacked,
	      tertiary = props.tertiary,
	      textAlign = props.textAlign,
	      vertical = props.vertical;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(circular, 'circular'), (0, _lib.useKeyOnly)(clearing, 'clearing'), (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(secondary, 'secondary'), (0, _lib.useKeyOnly)(stacked, 'stacked'), (0, _lib.useKeyOnly)(tertiary, 'tertiary'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useKeyOrValueAndKey)(attached, 'attached'), (0, _lib.useKeyOrValueAndKey)(padded, 'padded'), (0, _lib.useTextAlignProp)(textAlign), (0, _lib.useValueAndKey)(floated, 'floated'), 'segment', className);
	  var rest = (0, _lib.getUnhandledProps)(Segment, props);
	  var ElementType = (0, _lib.getElementType)(Segment, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Segment.handledProps = ['as', 'attached', 'basic', 'children', 'circular', 'className', 'clearing', 'color', 'compact', 'disabled', 'floated', 'inverted', 'loading', 'padded', 'piled', 'raised', 'secondary', 'size', 'stacked', 'tertiary', 'textAlign', 'vertical'];
	Segment.Group = _SegmentGroup2.default;

	Segment._meta = {
	  name: 'Segment',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? Segment.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Attach segment to other content, like a header. */
	  attached: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['top', 'bottom'])]),

	  /** A basic segment has no special formatting. */
	  basic: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** A segment can be circular. */
	  circular: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A segment can clear floated content. */
	  clearing: _propTypes2.default.bool,

	  /** Segment can be colored. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A segment may take up only as much space as is necessary. */
	  compact: _propTypes2.default.bool,

	  /** A segment may show its content is disabled. */
	  disabled: _propTypes2.default.bool,

	  /** Segment content can be floated to the left or right. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** A segment can have its colors inverted for contrast. */
	  inverted: _propTypes2.default.bool,

	  /** A segment may show its content is being loaded. */
	  loading: _propTypes2.default.bool,

	  /** A segment can increase its padding. */
	  padded: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /** Formatted to look like a pile of pages. */
	  piled: _propTypes2.default.bool,

	  /** A segment may be formatted to raise above the page. */
	  raised: _propTypes2.default.bool,

	  /** A segment can be formatted to appear less noticeable. */
	  secondary: _propTypes2.default.bool,

	  /** A segment can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),

	  /** Formatted to show it contains multiple pages. */
	  stacked: _propTypes2.default.bool,

	  /** A segment can be formatted to appear even less noticeable. */
	  tertiary: _propTypes2.default.bool,

	  /** Formats content to be aligned as part of a vertical group. */
	  textAlign: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.TEXT_ALIGNMENTS, 'justified')),

	  /** Formats content to be aligned vertically. */
	  vertical: _propTypes2.default.bool
	} : void 0;

	exports.default = Segment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A group of segments can be formatted to appear together.
	 */
	function SegmentGroup(props) {
	  var children = props.children,
	      className = props.className,
	      compact = props.compact,
	      horizontal = props.horizontal,
	      piled = props.piled,
	      raised = props.raised,
	      size = props.size,
	      stacked = props.stacked;


	  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(compact, 'compact'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(piled, 'piled'), (0, _lib.useKeyOnly)(raised, 'raised'), (0, _lib.useKeyOnly)(stacked, 'stacked'), 'segments', className);
	  var rest = (0, _lib.getUnhandledProps)(SegmentGroup, props);
	  var ElementType = (0, _lib.getElementType)(SegmentGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	SegmentGroup.handledProps = ['as', 'children', 'className', 'compact', 'horizontal', 'piled', 'raised', 'size', 'stacked'];
	SegmentGroup._meta = {
	  name: 'SegmentGroup',
	  parent: 'Segment',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? SegmentGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A segment may take up only as much space as is necessary. */
	  compact: _propTypes2.default.bool,

	  /** Formats content to be aligned horizontally. */
	  horizontal: _propTypes2.default.bool,

	  /** Formatted to look like a pile of pages. */
	  piled: _propTypes2.default.bool,

	  /** A segment group may be formatted to raise above the page. */
	  raised: _propTypes2.default.bool,

	  /** A segment group can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),

	  /** Formatted to show it contains multiple pages. */
	  stacked: _propTypes2.default.bool
	} : void 0;

	exports.default = SegmentGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Step = __webpack_require__(615);

	var _Step2 = _interopRequireDefault(_Step);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Step2.default;

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	var _StepContent = __webpack_require__(616);

	var _StepContent2 = _interopRequireDefault(_StepContent);

	var _StepDescription = __webpack_require__(617);

	var _StepDescription2 = _interopRequireDefault(_StepDescription);

	var _StepGroup = __webpack_require__(619);

	var _StepGroup2 = _interopRequireDefault(_StepGroup);

	var _StepTitle = __webpack_require__(618);

	var _StepTitle2 = _interopRequireDefault(_StepTitle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A step shows the completion status of an activity in a series of activities.
	 */
	var Step = function (_Component) {
	  (0, _inherits3.default)(Step, _Component);

	  function Step() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Step);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Step.__proto__ || Object.getPrototypeOf(Step)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Step, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          completed = _props.completed,
	          description = _props.description,
	          disabled = _props.disabled,
	          href = _props.href,
	          icon = _props.icon,
	          link = _props.link,
	          onClick = _props.onClick,
	          title = _props.title;


	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(completed, 'completed'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(link, 'link'), 'step', className);
	      var rest = (0, _lib.getUnhandledProps)(Step, this.props);
	      var ElementType = (0, _lib.getElementType)(Step, this.props, function () {
	        if (onClick) return 'a';
	      });

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),
	        _Icon2.default.create(icon),
	        _react2.default.createElement(_StepContent2.default, { description: description, title: title })
	      );
	    }
	  }]);
	  return Step;
	}(_react.Component);

	Step._meta = {
	  name: 'Step',
	  type: _lib.META.TYPES.ELEMENT
	};
	Step.Content = _StepContent2.default;
	Step.Description = _StepDescription2.default;
	Step.Group = _StepGroup2.default;
	Step.Title = _StepTitle2.default;
	Step.handledProps = ['active', 'as', 'children', 'className', 'completed', 'description', 'disabled', 'href', 'icon', 'link', 'onClick', 'ordered', 'title'];
	exports.default = Step;
	process.env.NODE_ENV !== "production" ? Step.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A step can be highlighted as active. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A step can show that a user has completed it. */
	  completed: _propTypes2.default.bool,

	  /** Shorthand for StepDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Show that the Loader is inactive. */
	  disabled: _propTypes2.default.bool,

	  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
	  href: _propTypes2.default.string,

	  /** Shorthand for Icon. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** A step can be link. */
	  link: _propTypes2.default.bool,

	  /**
	   * Called on click. When passed, the component will render as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /** A step can show a ordered sequence of steps. Passed from StepGroup. */
	  ordered: _propTypes2.default.bool,

	  /** Shorthand for StepTitle. */
	  title: _lib.customPropTypes.itemShorthand
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _StepDescription = __webpack_require__(617);

	var _StepDescription2 = _interopRequireDefault(_StepDescription);

	var _StepTitle = __webpack_require__(618);

	var _StepTitle2 = _interopRequireDefault(_StepTitle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A step can contain a content.
	 */
	function StepContent(props) {
	  var children = props.children,
	      className = props.className,
	      description = props.description,
	      title = props.title;

	  var classes = (0, _classnames2.default)('content', className);
	  var rest = (0, _lib.getUnhandledProps)(StepContent, props);
	  var ElementType = (0, _lib.getElementType)(StepContent, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createShorthand)(_StepTitle2.default, function (val) {
	      return { title: val };
	    }, title),
	    (0, _lib.createShorthand)(_StepDescription2.default, function (val) {
	      return { description: val };
	    }, description)
	  );
	}

	StepContent.handledProps = ['as', 'children', 'className', 'description', 'title'];
	StepContent._meta = {
	  name: 'StepContent',
	  parent: 'Step',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? StepContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for StepDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for StepTitle. */
	  title: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = StepContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function StepDescription(props) {
	  var children = props.children,
	      className = props.className,
	      description = props.description;

	  var classes = (0, _classnames2.default)('description', className);
	  var rest = (0, _lib.getUnhandledProps)(StepDescription, props);
	  var ElementType = (0, _lib.getElementType)(StepDescription, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? description : children
	  );
	}

	StepDescription.handledProps = ['as', 'children', 'className', 'description'];
	StepDescription._meta = {
	  name: 'StepDescription',
	  parent: 'Step',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? StepDescription.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  description: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = StepDescription;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A step can contain a title.
	 */
	function StepTitle(props) {
	  var children = props.children,
	      className = props.className,
	      title = props.title;

	  var classes = (0, _classnames2.default)('title', className);
	  var rest = (0, _lib.getUnhandledProps)(StepTitle, props);
	  var ElementType = (0, _lib.getElementType)(StepTitle, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? title : children
	  );
	}

	StepTitle.handledProps = ['as', 'children', 'className', 'title'];
	StepTitle._meta = {
	  name: 'StepTitle',
	  parent: 'Step',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? StepTitle.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  title: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = StepTitle;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Step = __webpack_require__(615);

	var _Step2 = _interopRequireDefault(_Step);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A set of steps.
	 */
	function StepGroup(props) {
	  var children = props.children,
	      className = props.className,
	      fluid = props.fluid,
	      items = props.items,
	      ordered = props.ordered,
	      size = props.size,
	      stackable = props.stackable,
	      vertical = props.vertical;

	  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(ordered, 'ordered'), (0, _lib.useKeyOnly)(vertical, 'vertical'), (0, _lib.useValueAndKey)(stackable, 'stackable'), 'steps', className);
	  var rest = (0, _lib.getUnhandledProps)(StepGroup, props);
	  var ElementType = (0, _lib.getElementType)(StepGroup, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  var content = (0, _map3.default)(items, function (item) {
	    var key = item.key || [item.title, item.description].join('-');
	    return _react2.default.createElement(_Step2.default, (0, _extends3.default)({ key: key }, item));
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    content
	  );
	}

	StepGroup.handledProps = ['as', 'children', 'className', 'fluid', 'items', 'ordered', 'size', 'stackable', 'vertical'];
	StepGroup._meta = {
	  name: 'StepGroup',
	  parent: 'Step',
	  type: _lib.META.TYPES.ELEMENT
	};

	process.env.NODE_ENV !== "production" ? StepGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A fluid step takes up the width of its container. */
	  fluid: _propTypes2.default.bool,

	  /** Shorthand array of props for Step. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A step can show a ordered sequence of steps. */
	  ordered: _propTypes2.default.bool,

	  /** Steps can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),

	  /** A step can stack vertically only on smaller screens. */
	  stackable: _propTypes2.default.oneOf(['tablet']),

	  /** A step can be displayed stacked vertically. */
	  vertical: _propTypes2.default.bool
	} : void 0;

	exports.default = StepGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _toConsumableArray2 = __webpack_require__(329);

	var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _keys2 = __webpack_require__(230);

	var _keys3 = _interopRequireDefault(_keys2);

	var _omit2 = __webpack_require__(484);

	var _omit3 = _interopRequireDefault(_omit2);

	var _isFunction2 = __webpack_require__(144);

	var _isFunction3 = _interopRequireDefault(_isFunction2);

	var _each2 = __webpack_require__(285);

	var _each3 = _interopRequireDefault(_each2);

	var _has2 = __webpack_require__(120);

	var _has3 = _interopRequireDefault(_has2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _includes2 = __webpack_require__(311);

	var _includes3 = _interopRequireDefault(_includes2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _AccordionContent = __webpack_require__(621);

	var _AccordionContent2 = _interopRequireDefault(_AccordionContent);

	var _AccordionTitle = __webpack_require__(622);

	var _AccordionTitle2 = _interopRequireDefault(_AccordionTitle);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An accordion allows users to toggle the display of sections of content.
	 */
	var Accordion = function (_Component) {
	  (0, _inherits3.default)(Accordion, _Component);

	  function Accordion() {
	    var _ref;

	    (0, _classCallCheck3.default)(this, Accordion);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var _this = (0, _possibleConstructorReturn3.default)(this, (_ref = Accordion.__proto__ || Object.getPrototypeOf(Accordion)).call.apply(_ref, [this].concat(args)));

	    _this.state = {};

	    _this.handleTitleClick = function (e, index) {
	      var _this$props = _this.props,
	          onTitleClick = _this$props.onTitleClick,
	          exclusive = _this$props.exclusive;
	      var activeIndex = _this.state.activeIndex;


	      var newIndex = void 0;
	      if (exclusive) {
	        newIndex = index === activeIndex ? -1 : index;
	      } else {
	        // check to see if index is in array, and remove it, if not then add it
	        newIndex = (0, _includes3.default)(activeIndex, index) ? (0, _without3.default)(activeIndex, index) : [].concat((0, _toConsumableArray3.default)(activeIndex), [index]);
	      }
	      _this.trySetState({ activeIndex: newIndex });
	      if (onTitleClick) onTitleClick(e, index);
	    };

	    _this.isIndexActive = function (index) {
	      var exclusive = _this.props.exclusive;
	      var activeIndex = _this.state.activeIndex;

	      return exclusive ? activeIndex === index : (0, _includes3.default)(activeIndex, index);
	    };

	    _this.renderChildren = function () {
	      var children = _this.props.children;

	      var titleIndex = 0;
	      var contentIndex = 0;

	      return _react.Children.map(children, function (child) {
	        var isTitle = child.type === _AccordionTitle2.default;
	        var isContent = child.type === _AccordionContent2.default;

	        if (isTitle) {
	          var currentIndex = titleIndex;
	          var isActive = (0, _has3.default)(child, 'props.active') ? child.props.active : _this.isIndexActive(titleIndex);
	          var onClick = function onClick(e) {
	            _this.handleTitleClick(e, currentIndex);
	            if (child.props.onClick) child.props.onClick(e, currentIndex);
	          };
	          titleIndex++;
	          return (0, _react.cloneElement)(child, (0, _extends3.default)({}, child.props, { active: isActive, onClick: onClick }));
	        }

	        if (isContent) {
	          var _isActive = (0, _has3.default)(child, 'props.active') ? child.props.active : _this.isIndexActive(contentIndex);
	          contentIndex++;
	          return (0, _react.cloneElement)(child, (0, _extends3.default)({}, child.props, { active: _isActive }));
	        }

	        return child;
	      });
	    };

	    _this.renderPanels = function () {
	      var panels = _this.props.panels;

	      var children = [];

	      (0, _each3.default)(panels, function (panel, i) {
	        var isActive = (0, _has3.default)(panel, 'active') ? panel.active : _this.isIndexActive(i);
	        var onClick = function onClick(e) {
	          _this.handleTitleClick(e, i);
	          if (panel.onClick) panel.onClick(e, i);
	        };

	        // implement all methods of creating a key that are supported in factories
	        var key = panel.key || (0, _isFunction3.default)(panel.childKey) && panel.childKey(panel) || panel.childKey && panel.childKey || panel.title;

	        children.push(_AccordionTitle2.default.create({ active: isActive, onClick: onClick, key: key + '-title', content: panel.title }));
	        children.push(_AccordionContent2.default.create({ active: isActive, key: key + '-content', content: panel.content }));
	      });

	      return children;
	    };

	    _this.state = {
	      activeIndex: _this.props.exclusive ? -1 : [-1]
	    };
	    return _this;
	  }

	  (0, _createClass3.default)(Accordion, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          className = _props.className,
	          fluid = _props.fluid,
	          inverted = _props.inverted,
	          panels = _props.panels,
	          styled = _props.styled;


	      var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(styled, 'styled'), 'accordion', className);
	      var rest = (0, _omit3.default)(this.props, (0, _keys3.default)(Accordion.propTypes));
	      var ElementType = (0, _lib.getElementType)(Accordion, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        panels ? this.renderPanels() : this.renderChildren()
	      );
	    }
	  }]);
	  return Accordion;
	}(_lib.AutoControlledComponent);

	Accordion.defaultProps = {
	  exclusive: true
	};
	Accordion.autoControlledProps = ['activeIndex'];
	Accordion._meta = {
	  name: 'Accordion',
	  type: _lib.META.TYPES.MODULE
	};
	Accordion.Content = _AccordionContent2.default;
	Accordion.Title = _AccordionTitle2.default;
	Accordion.handledProps = ['activeIndex', 'as', 'children', 'className', 'defaultActiveIndex', 'exclusive', 'fluid', 'inverted', 'onTitleClick', 'panels', 'styled'];
	exports.default = Accordion;
	process.env.NODE_ENV !== "production" ? Accordion.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Index of the currently active panel. */
	  activeIndex: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.number]),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Initial activeIndex value. */
	  defaultActiveIndex: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.number), _propTypes2.default.number]),

	  /** Only allow one panel open at a time. */
	  exclusive: _propTypes2.default.bool,

	  /** Format to take up the width of it's container. */
	  fluid: _propTypes2.default.bool,

	  /** Format for dark backgrounds. */
	  inverted: _propTypes2.default.bool,

	  /**
	   * Called when a panel title is clicked.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {number} index - The index of the clicked panel.
	   */
	  onTitleClick: _propTypes2.default.func,

	  /**
	   * Create simple accordion panels from an array of { text: <string>, content: <custom> } objects.
	   * Object can optionally define an `active` key to open/close the panel.
	   * Object can opitonally define a `key` key used for title and content nodes' keys.
	   * Mutually exclusive with children.
	   * TODO: AccordionPanel should be a sub-component
	   */
	  panels: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['children']), _propTypes2.default.arrayOf(_propTypes2.default.shape({
	    key: _propTypes2.default.string,
	    active: _propTypes2.default.bool,
	    title: _lib.customPropTypes.contentShorthand,
	    content: _lib.customPropTypes.contentShorthand,
	    onClick: _propTypes2.default.func
	  }))]),

	  /** Adds some basic styling to accordion panels. */
	  styled: _propTypes2.default.bool
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A content sub-component for Accordion component.
	 */
	function AccordionContent(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('content', (0, _lib.useKeyOnly)(active, 'active'), className);
	  var rest = (0, _lib.getUnhandledProps)(AccordionContent, props);
	  var ElementType = (0, _lib.getElementType)(AccordionContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	AccordionContent.handledProps = ['active', 'as', 'children', 'className', 'content'];
	process.env.NODE_ENV !== "production" ? AccordionContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Whether or not the content is visible. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	AccordionContent._meta = {
	  name: 'AccordionContent',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Accordion'
	};

	AccordionContent.create = (0, _lib.createShorthandFactory)(AccordionContent, function (content) {
	  return { content: content };
	});

	exports.default = AccordionContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A title sub-component for Accordion component.
	 */
	var AccordionTitle = function (_Component) {
	  (0, _inherits3.default)(AccordionTitle, _Component);

	  function AccordionTitle() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, AccordionTitle);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = AccordionTitle.__proto__ || Object.getPrototypeOf(AccordionTitle)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(AccordionTitle, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          children = _props.children,
	          className = _props.className,
	          content = _props.content;


	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'title', className);
	      var rest = (0, _lib.getUnhandledProps)(AccordionTitle, this.props);
	      var ElementType = (0, _lib.getElementType)(AccordionTitle, this.props);

	      if ((0, _isNil3.default)(content)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	        _react2.default.createElement(_Icon2.default, { name: 'dropdown' }),
	        content
	      );
	    }
	  }]);
	  return AccordionTitle;
	}(_react.Component);

	AccordionTitle._meta = {
	  name: 'AccordionTitle',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Accordion'
	};
	AccordionTitle.handledProps = ['active', 'as', 'children', 'className', 'content', 'onClick'];
	exports.default = AccordionTitle;
	process.env.NODE_ENV !== "production" ? AccordionTitle.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Whether or not the title is in the open state. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func
	} : void 0;


	AccordionTitle.create = (0, _lib.createShorthandFactory)(AccordionTitle, function (content) {
	  return { content: content };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Embed = __webpack_require__(624);

	var _Embed2 = _interopRequireDefault(_Embed);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Embed2.default;

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An embed displays content from other websites like YouTube videos or Google Maps.
	 */
	var Embed = function (_Component) {
	  (0, _inherits3.default)(Embed, _Component);

	  function Embed() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Embed);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Embed.__proto__ || Object.getPrototypeOf(Embed)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;
	      var active = _this.state.active;


	      if (onClick) onClick(e, (0, _extends3.default)({}, _this.props, { active: true }));
	      if (!active) _this.trySetState({ active: true });
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Embed, [{
	    key: 'getSrc',
	    value: function getSrc() {
	      var _props = this.props,
	          _props$autoplay = _props.autoplay,
	          autoplay = _props$autoplay === undefined ? true : _props$autoplay,
	          _props$brandedUI = _props.brandedUI,
	          brandedUI = _props$brandedUI === undefined ? false : _props$brandedUI,
	          _props$color = _props.color,
	          color = _props$color === undefined ? '#444444' : _props$color,
	          _props$hd = _props.hd,
	          hd = _props$hd === undefined ? true : _props$hd,
	          id = _props.id,
	          source = _props.source,
	          url = _props.url;


	      if (source === 'youtube') {
	        return ['//www.youtube.com/embed/' + id, '?autohide=true', '&amp;autoplay=' + autoplay, '&amp;color=' + encodeURIComponent(color), '&amp;hq=' + hd, '&amp;jsapi=false', '&amp;modestbranding=' + brandedUI].join('');
	      }

	      if (source === 'vimeo') {
	        return ['//player.vimeo.com/video/' + id, '?api=false', '&amp;autoplay=' + autoplay, '&amp;byline=false', '&amp;color=' + encodeURIComponent(color), '&amp;portrait=false', '&amp;title=false'].join('');
	      }

	      return url;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          aspectRatio = _props2.aspectRatio,
	          className = _props2.className,
	          icon = _props2.icon,
	          placeholder = _props2.placeholder;
	      var active = this.state.active;


	      var classes = (0, _classnames2.default)('ui', aspectRatio, (0, _lib.useKeyOnly)(active, 'active'), 'embed', className);
	      var rest = (0, _lib.getUnhandledProps)(Embed, this.props);
	      var ElementType = (0, _lib.getElementType)(Embed, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	        _Icon2.default.create(icon),
	        placeholder && _react2.default.createElement('img', { className: 'placeholder', src: placeholder }),
	        this.renderEmbed()
	      );
	    }
	  }, {
	    key: 'renderEmbed',
	    value: function renderEmbed() {
	      var _props3 = this.props,
	          children = _props3.children,
	          source = _props3.source;
	      var active = this.state.active;


	      if (!active) return null;
	      if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	        'div',
	        { className: 'embed' },
	        children
	      );

	      return _react2.default.createElement(
	        'div',
	        { className: 'embed' },
	        _react2.default.createElement('iframe', {
	          title: 'Embedded content from ' + source + '.',
	          allowFullScreen: '',
	          frameBorder: '0',
	          height: '100%',
	          scrolling: 'no',
	          src: this.getSrc(),
	          width: '100%'
	        })
	      );
	    }
	  }]);
	  return Embed;
	}(_lib.AutoControlledComponent);

	Embed.autoControlledProps = ['active'];
	Embed.defaultProps = {
	  icon: 'video play'
	};
	Embed._meta = {
	  name: 'Embed',
	  type: _lib.META.TYPES.MODULE
	};
	Embed.handledProps = ['active', 'as', 'aspectRatio', 'autoplay', 'brandedUI', 'children', 'className', 'color', 'defaultActive', 'hd', 'icon', 'id', 'onClick', 'placeholder', 'source', 'url'];
	exports.default = Embed;
	process.env.NODE_ENV !== "production" ? Embed.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** An embed can be active. */
	  active: _propTypes2.default.bool,

	  /** An embed can specify an alternative aspect ratio. */
	  aspectRatio: _propTypes2.default.oneOf(['4:3', '16:9', '21:9']),

	  /** Setting to true or false will force autoplay. */
	  autoplay: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.bool]),

	  /** Whether to show networks branded UI like title cards, or after video calls to action. */
	  brandedUI: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.bool]),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Specifies a default chrome color with Vimeo or YouTube. */
	  color: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.string]),

	  /** Initial value of active. */
	  defaultActive: _propTypes2.default.bool,

	  /** Whether to show networks branded UI like title cards, or after video calls to action. */
	  hd: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.bool]),

	  /** Specifies an icon to use with placeholder content. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** Specifies an id for source. */
	  id: _lib.customPropTypes.every([_lib.customPropTypes.demand(['source']), _propTypes2.default.string]),

	  /**
	   * Сalled on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed value.
	   */
	  onClick: _propTypes2.default.func,

	  /** A placeholder image for embed. */
	  placeholder: _propTypes2.default.string,

	  /** Specifies a source to use. */
	  source: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['sourceUrl']), _propTypes2.default.oneOf(['youtube', 'vimeo'])]),

	  /** Specifies a url to use for embed. */
	  url: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['source']), _propTypes2.default.string])
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Popup = __webpack_require__(626);

	var _Popup2 = _interopRequireDefault(_Popup);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Popup2.default;

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.POSITIONS = undefined;

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _pick2 = __webpack_require__(424);

	var _pick3 = _interopRequireDefault(_pick2);

	var _omit2 = __webpack_require__(484);

	var _omit3 = _interopRequireDefault(_omit2);

	var _assign2 = __webpack_require__(627);

	var _assign3 = _interopRequireDefault(_assign2);

	var _mapValues2 = __webpack_require__(629);

	var _mapValues3 = _interopRequireDefault(_mapValues2);

	var _isNumber2 = __webpack_require__(303);

	var _isNumber3 = _interopRequireDefault(_isNumber2);

	var _includes2 = __webpack_require__(311);

	var _includes3 = _interopRequireDefault(_includes2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Portal = __webpack_require__(473);

	var _Portal2 = _interopRequireDefault(_Portal);

	var _PopupContent = __webpack_require__(630);

	var _PopupContent2 = _interopRequireDefault(_PopupContent);

	var _PopupHeader = __webpack_require__(631);

	var _PopupHeader2 = _interopRequireDefault(_PopupHeader);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('popup');

	var POSITIONS = exports.POSITIONS = ['top left', 'top right', 'bottom right', 'bottom left', 'right center', 'left center', 'top center', 'bottom center'];

	/**
	 * A Popup displays additional information on top of a page.
	 */

	var Popup = function (_Component) {
	  (0, _inherits3.default)(Popup, _Component);

	  function Popup() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Popup);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Popup.__proto__ || Object.getPrototypeOf(Popup)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.hideOnScroll = function (e) {
	      _this.setState({ closed: true });
	      window.removeEventListener('scroll', _this.hideOnScroll);
	      setTimeout(function () {
	        return _this.setState({ closed: false });
	      }, 50);
	    }, _this.handleClose = function (e) {
	      debug('handleClose()');
	      var onClose = _this.props.onClose;

	      if (onClose) onClose(e, _this.props);
	    }, _this.handleOpen = function (e) {
	      debug('handleOpen()');
	      _this.coords = e.currentTarget.getBoundingClientRect();

	      var onOpen = _this.props.onOpen;

	      if (onOpen) onOpen(e, _this.props);
	    }, _this.handlePortalMount = function (e) {
	      debug('handlePortalMount()');
	      if (_this.props.hideOnScroll) {
	        window.addEventListener('scroll', _this.hideOnScroll);
	      }

	      var onMount = _this.props.onMount;

	      if (onMount) onMount(e, _this.props);
	    }, _this.handlePortalUnmount = function (e) {
	      debug('handlePortalUnmount()');
	      var onUnmount = _this.props.onUnmount;

	      if (onUnmount) onUnmount(e, _this.props);
	    }, _this.handlePopupRef = function (popupRef) {
	      debug('popupMounted()');
	      _this.popupCoords = popupRef ? popupRef.getBoundingClientRect() : null;
	      _this.setPopupStyle();
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Popup, [{
	    key: 'computePopupStyle',
	    value: function computePopupStyle(positions) {
	      var style = { position: 'absolute' };

	      // Do not access window/document when server side rendering
	      if (!_lib.isBrowser) return style;

	      var offset = this.props.offset;
	      var _window = window,
	          pageYOffset = _window.pageYOffset,
	          pageXOffset = _window.pageXOffset;
	      var _document$documentEle = document.documentElement,
	          clientWidth = _document$documentEle.clientWidth,
	          clientHeight = _document$documentEle.clientHeight;


	      if ((0, _includes3.default)(positions, 'right')) {
	        style.right = Math.round(clientWidth - (this.coords.right + pageXOffset));
	        style.left = 'auto';
	      } else if ((0, _includes3.default)(positions, 'left')) {
	        style.left = Math.round(this.coords.left + pageXOffset);
	        style.right = 'auto';
	      } else {
	        // if not left nor right, we are horizontally centering the element
	        var xOffset = (this.coords.width - this.popupCoords.width) / 2;
	        style.left = Math.round(this.coords.left + xOffset + pageXOffset);
	        style.right = 'auto';
	      }

	      if ((0, _includes3.default)(positions, 'top')) {
	        style.bottom = Math.round(clientHeight - (this.coords.top + pageYOffset));
	        style.top = 'auto';
	      } else if ((0, _includes3.default)(positions, 'bottom')) {
	        style.top = Math.round(this.coords.bottom + pageYOffset);
	        style.bottom = 'auto';
	      } else {
	        // if not top nor bottom, we are vertically centering the element
	        var yOffset = (this.coords.height + this.popupCoords.height) / 2;
	        style.top = Math.round(this.coords.bottom + pageYOffset - yOffset);
	        style.bottom = 'auto';

	        var _xOffset = this.popupCoords.width + 8;
	        if ((0, _includes3.default)(positions, 'right')) {
	          style.right -= _xOffset;
	        } else {
	          style.left -= _xOffset;
	        }
	      }

	      if (offset) {
	        if ((0, _isNumber3.default)(style.right)) {
	          style.right -= offset;
	        } else {
	          style.left -= offset;
	        }
	      }

	      return style;
	    }

	    // check if the style would display
	    // the popup outside of the view port

	  }, {
	    key: 'isStyleInViewport',
	    value: function isStyleInViewport(style) {
	      var _window2 = window,
	          pageYOffset = _window2.pageYOffset,
	          pageXOffset = _window2.pageXOffset;
	      var _document$documentEle2 = document.documentElement,
	          clientWidth = _document$documentEle2.clientWidth,
	          clientHeight = _document$documentEle2.clientHeight;


	      var element = {
	        top: style.top,
	        left: style.left,
	        width: this.popupCoords.width,
	        height: this.popupCoords.height
	      };
	      if ((0, _isNumber3.default)(style.right)) {
	        element.left = clientWidth - style.right - element.width;
	      }
	      if ((0, _isNumber3.default)(style.bottom)) {
	        element.top = clientHeight - style.bottom - element.height;
	      }

	      // hidden on top
	      if (element.top < pageYOffset) return false;
	      // hidden on the bottom
	      if (element.top + element.height > pageYOffset + clientHeight) return false;
	      // hidden the left
	      if (element.left < pageXOffset) return false;
	      // hidden on the right
	      if (element.left + element.width > pageXOffset + clientWidth) return false;

	      return true;
	    }
	  }, {
	    key: 'setPopupStyle',
	    value: function setPopupStyle() {
	      if (!this.coords || !this.popupCoords) return;
	      var position = this.props.position;
	      var style = this.computePopupStyle(position);

	      // Lets detect if the popup is out of the viewport and adjust
	      // the position accordingly
	      var positions = (0, _without3.default)(POSITIONS, position);
	      for (var i = 0; !this.isStyleInViewport(style) && i < positions.length; i++) {
	        style = this.computePopupStyle(positions[i]);
	        position = positions[i];
	      }

	      // Append 'px' to every numerical values in the style
	      style = (0, _mapValues3.default)(style, function (value) {
	        return (0, _isNumber3.default)(value) ? value + 'px' : value;
	      });
	      this.setState({ style: style, position: position });
	    }
	  }, {
	    key: 'getPortalProps',
	    value: function getPortalProps() {
	      var portalProps = {};

	      var _props = this.props,
	          on = _props.on,
	          hoverable = _props.hoverable;


	      if (hoverable) {
	        portalProps.closeOnPortalMouseLeave = true;
	        portalProps.mouseLeaveDelay = 300;
	      }

	      if (on === 'click') {
	        portalProps.openOnTriggerClick = true;
	        portalProps.closeOnTriggerClick = true;
	        portalProps.closeOnDocumentClick = true;
	      } else if (on === 'focus') {
	        portalProps.openOnTriggerFocus = true;
	        portalProps.closeOnTriggerBlur = true;
	      } else if (on === 'hover') {
	        portalProps.openOnTriggerMouseEnter = true;
	        portalProps.closeOnTriggerMouseLeave = true;
	        // Taken from SUI: https://git.io/vPmCm
	        portalProps.mouseLeaveDelay = 70;
	        portalProps.mouseEnterDelay = 50;
	      }

	      return portalProps;
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props2 = this.props,
	          basic = _props2.basic,
	          children = _props2.children,
	          className = _props2.className,
	          content = _props2.content,
	          flowing = _props2.flowing,
	          header = _props2.header,
	          inverted = _props2.inverted,
	          size = _props2.size,
	          trigger = _props2.trigger,
	          wide = _props2.wide;
	      var _state = this.state,
	          position = _state.position,
	          closed = _state.closed;

	      var style = (0, _assign3.default)({}, this.state.style, this.props.style);
	      var classes = (0, _classnames2.default)('ui', position, size, (0, _lib.useKeyOrValueAndKey)(wide, 'wide'), (0, _lib.useKeyOnly)(basic, 'basic'), (0, _lib.useKeyOnly)(flowing, 'flowing'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'popup transition visible', className);

	      if (closed) return trigger;

	      var unhandled = (0, _lib.getUnhandledProps)(Popup, this.props);
	      var portalPropNames = _Portal2.default.handledProps;

	      var rest = (0, _omit3.default)(unhandled, portalPropNames);
	      var portalProps = (0, _pick3.default)(unhandled, portalPropNames);
	      var ElementType = (0, _lib.getElementType)(Popup, this.props);

	      var popupJSX = _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, style: style, ref: this.handlePopupRef }),
	        children,
	        (0, _isNil3.default)(children) && _PopupHeader2.default.create(header),
	        (0, _isNil3.default)(children) && _PopupContent2.default.create(content)
	      );

	      var mergedPortalProps = (0, _extends3.default)({}, this.getPortalProps(), portalProps);
	      debug('portal props:', mergedPortalProps);

	      return _react2.default.createElement(
	        _Portal2.default,
	        (0, _extends3.default)({}, mergedPortalProps, {
	          trigger: trigger,
	          onClose: this.handleClose,
	          onMount: this.handlePortalMount,
	          onOpen: this.handleOpen,
	          onUnmount: this.handlePortalUnmount
	        }),
	        popupJSX
	      );
	    }
	  }]);
	  return Popup;
	}(_react.Component);

	Popup.defaultProps = {
	  position: 'top left',
	  on: 'hover'
	};
	Popup._meta = {
	  name: 'Popup',
	  type: _lib.META.TYPES.MODULE
	};
	Popup.Content = _PopupContent2.default;
	Popup.Header = _PopupHeader2.default;
	Popup.handledProps = ['basic', 'children', 'className', 'content', 'flowing', 'header', 'hideOnScroll', 'hoverable', 'inverted', 'offset', 'on', 'onClose', 'onMount', 'onOpen', 'onUnmount', 'position', 'size', 'style', 'trigger', 'wide'];
	exports.default = Popup;
	process.env.NODE_ENV !== "production" ? Popup.propTypes = {
	  /** Display the popup without the pointing arrow. */
	  basic: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Simple text content for the popover. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** A flowing Popup has no maximum width and continues to flow to fit its content. */
	  flowing: _propTypes2.default.bool,

	  /** Takes up the entire width of its offset container. */
	  // TODO: implement the Popup fluid layout
	  // fluid: PropTypes.bool,

	  /** Header displayed above the content in bold. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Hide the Popup when scrolling the window. */
	  hideOnScroll: _propTypes2.default.bool,

	  /** Whether the popup should not close on hover. */
	  hoverable: _propTypes2.default.bool,

	  /** Invert the colors of the Popup. */
	  inverted: _propTypes2.default.bool,

	  /** Horizontal offset in pixels to be applied to the Popup. */
	  offset: _propTypes2.default.number,

	  /** Event triggering the popup. */
	  on: _propTypes2.default.oneOf(['hover', 'click', 'focus']),

	  /**
	   * Called when a close event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClose: _propTypes2.default.func,

	  /**
	   * Called when the portal is mounted on the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onMount: _propTypes2.default.func,

	  /**
	   * Called when an open event happens.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onOpen: _propTypes2.default.func,

	  /**
	   * Called when the portal is unmounted from the DOM.
	   *
	   * @param {null}
	   * @param {object} data - All props.
	   */
	  onUnmount: _propTypes2.default.func,

	  /** Position for the popover. */
	  position: _propTypes2.default.oneOf(POSITIONS),

	  /** Popup size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big', 'massive')),

	  /** Custom Popup style. */
	  style: _propTypes2.default.object,

	  /** Element to be rendered in-place where the popup is defined. */
	  trigger: _propTypes2.default.node,

	  /** Popup width. */
	  wide: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])])
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

	var assignValue = __webpack_require__(379),
	    copyObject = __webpack_require__(378),
	    createAssigner = __webpack_require__(628),
	    isArrayLike = __webpack_require__(216),
	    isPrototype = __webpack_require__(240),
	    keys = __webpack_require__(230);

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to check objects for own properties. */
	var hasOwnProperty = objectProto.hasOwnProperty;

	/**
	 * Assigns own enumerable string keyed properties of source objects to the
	 * destination object. Source objects are applied from left to right.
	 * Subsequent sources overwrite property assignments of previous sources.
	 *
	 * **Note:** This method mutates `object` and is loosely based on
	 * [`Object.assign`](https://mdn.io/Object/assign).
	 *
	 * @static
	 * @memberOf _
	 * @since 0.10.0
	 * @category Object
	 * @param {Object} object The destination object.
	 * @param {...Object} [sources] The source objects.
	 * @returns {Object} Returns `object`.
	 * @see _.assignIn
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * function Bar() {
	 *   this.c = 3;
	 * }
	 *
	 * Foo.prototype.b = 2;
	 * Bar.prototype.d = 4;
	 *
	 * _.assign({ 'a': 0 }, new Foo, new Bar);
	 * // => { 'a': 1, 'c': 3 }
	 */
	var assign = createAssigner(function(object, source) {
	  if (isPrototype(source) || isArrayLike(source)) {
	    copyObject(source, keys(source), object);
	    return;
	  }
	  for (var key in source) {
	    if (hasOwnProperty.call(source, key)) {
	      assignValue(object, key, source[key]);
	    }
	  }
	});

	module.exports = assign;


/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(184),
	    isIterateeCall = __webpack_require__(327);

	/**
	 * Creates a function like `_.assign`.
	 *
	 * @private
	 * @param {Function} assigner The function to assign values.
	 * @returns {Function} Returns the new assigner function.
	 */
	function createAssigner(assigner) {
	  return baseRest(function(object, sources) {
	    var index = -1,
	        length = sources.length,
	        customizer = length > 1 ? sources[length - 1] : undefined,
	        guard = length > 2 ? sources[2] : undefined;

	    customizer = (assigner.length > 3 && typeof customizer == 'function')
	      ? (length--, customizer)
	      : undefined;

	    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
	      customizer = length < 3 ? undefined : customizer;
	      length = 1;
	    }
	    object = Object(object);
	    while (++index < length) {
	      var source = sources[index];
	      if (source) {
	        assigner(object, source, index, customizer);
	      }
	    }
	    return object;
	  });
	}

	module.exports = createAssigner;


/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

	var baseAssignValue = __webpack_require__(380),
	    baseForOwn = __webpack_require__(227),
	    baseIteratee = __webpack_require__(244);

	/**
	 * Creates an object with the same keys as `object` and values generated
	 * by running each own enumerable string keyed property of `object` thru
	 * `iteratee`. The iteratee is invoked with three arguments:
	 * (value, key, object).
	 *
	 * @static
	 * @memberOf _
	 * @since 2.4.0
	 * @category Object
	 * @param {Object} object The object to iterate over.
	 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
	 * @returns {Object} Returns the new mapped object.
	 * @see _.mapKeys
	 * @example
	 *
	 * var users = {
	 *   'fred':    { 'user': 'fred',    'age': 40 },
	 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
	 * };
	 *
	 * _.mapValues(users, function(o) { return o.age; });
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 *
	 * // The `_.property` iteratee shorthand.
	 * _.mapValues(users, 'age');
	 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
	 */
	function mapValues(object, iteratee) {
	  var result = {};
	  iteratee = baseIteratee(iteratee, 3);

	  baseForOwn(object, function(value, key, object) {
	    baseAssignValue(result, key, iteratee(value, key, object));
	  });
	  return result;
	}

	module.exports = mapValues;


/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	exports.default = PopupContent;

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A PopupContent displays the content body of a Popover.
	 */
	function PopupContent(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)('content', className);
	  var rest = (0, _lib.getUnhandledProps)(PopupContent, props);
	  var ElementType = (0, _lib.getElementType)(PopupContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	PopupContent.handledProps = ['as', 'children', 'className'];
	process.env.NODE_ENV !== "production" ? PopupContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The content of the Popup */
	  children: _propTypes2.default.node,

	  /** Classes to add to the Popup content className. */
	  className: _propTypes2.default.string
	} : void 0;

	PopupContent._meta = {
	  name: 'PopupContent',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Popup'
	};

	PopupContent.create = (0, _lib.createShorthandFactory)(PopupContent, function (children) {
	  return { children: children };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	exports.default = PopupHeader;

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A PopupHeader displays a header in a Popover.
	 */
	function PopupHeader(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)('header', className);
	  var rest = (0, _lib.getUnhandledProps)(PopupHeader, props);
	  var ElementType = (0, _lib.getElementType)(PopupHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	PopupHeader.handledProps = ['as', 'children', 'className'];
	process.env.NODE_ENV !== "production" ? PopupHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	PopupHeader._meta = {
	  name: 'PopupHeader',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Popup'
	};

	PopupHeader.create = (0, _lib.createShorthandFactory)(PopupHeader, function (children) {
	  return { children: children };
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Progress = __webpack_require__(633);

	var _Progress2 = _interopRequireDefault(_Progress);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Progress2.default;

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _round2 = __webpack_require__(634);

	var _round3 = _interopRequireDefault(_round2);

	var _clamp2 = __webpack_require__(636);

	var _clamp3 = _interopRequireDefault(_clamp2);

	var _isUndefined2 = __webpack_require__(217);

	var _isUndefined3 = _interopRequireDefault(_isUndefined2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A progress bar shows the progression of a task.
	 */
	var Progress = function (_Component) {
	  (0, _inherits3.default)(Progress, _Component);

	  function Progress() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Progress);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Progress.__proto__ || Object.getPrototypeOf(Progress)).call.apply(_ref, [this].concat(args))), _this), _this.calculatePercent = function () {
	      var _this$props = _this.props,
	          percent = _this$props.percent,
	          total = _this$props.total,
	          value = _this$props.value;


	      if (!(0, _isUndefined3.default)(percent)) return percent;
	      if (!(0, _isUndefined3.default)(total) && !(0, _isUndefined3.default)(value)) return value / total * 100;
	    }, _this.getPercent = function () {
	      var precision = _this.props.precision;

	      var percent = (0, _clamp3.default)(_this.calculatePercent(), 0, 100);

	      if ((0, _isUndefined3.default)(precision)) return percent;
	      return (0, _round3.default)(percent, precision);
	    }, _this.isAutoSuccess = function () {
	      var _this$props2 = _this.props,
	          autoSuccess = _this$props2.autoSuccess,
	          percent = _this$props2.percent,
	          total = _this$props2.total,
	          value = _this$props2.value;


	      return autoSuccess && (percent >= 100 || value >= total);
	    }, _this.renderLabel = function () {
	      var _this$props3 = _this.props,
	          children = _this$props3.children,
	          label = _this$props3.label;


	      if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	        'div',
	        { className: 'label' },
	        children
	      );
	      return (0, _lib.createHTMLDivision)(label, { defaultProps: { className: 'label' } });
	    }, _this.renderProgress = function (percent) {
	      var _this$props4 = _this.props,
	          precision = _this$props4.precision,
	          progress = _this$props4.progress,
	          total = _this$props4.total,
	          value = _this$props4.value;


	      if (!progress && (0, _isUndefined3.default)(precision)) return;
	      return _react2.default.createElement(
	        'div',
	        { className: 'progress' },
	        progress !== 'ratio' ? percent + '%' : value + '/' + total
	      );
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Progress, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          attached = _props.attached,
	          className = _props.className,
	          color = _props.color,
	          disabled = _props.disabled,
	          error = _props.error,
	          indicating = _props.indicating,
	          inverted = _props.inverted,
	          size = _props.size,
	          success = _props.success,
	          warning = _props.warning;


	      var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(active || indicating, 'active'), (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(error, 'error'), (0, _lib.useKeyOnly)(indicating, 'indicating'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useKeyOnly)(success || this.isAutoSuccess(), 'success'), (0, _lib.useKeyOnly)(warning, 'warning'), (0, _lib.useValueAndKey)(attached, 'attached'), 'progress', className);
	      var rest = (0, _lib.getUnhandledProps)(Progress, this.props);
	      var ElementType = (0, _lib.getElementType)(Progress, this.props);
	      var percent = this.getPercent();

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, 'data-percent': Math.floor(percent) }),
	        _react2.default.createElement(
	          'div',
	          { className: 'bar', style: { width: percent + '%' } },
	          this.renderProgress(percent)
	        ),
	        this.renderLabel()
	      );
	    }
	  }]);
	  return Progress;
	}(_react.Component);

	Progress._meta = {
	  name: 'Progress',
	  type: _lib.META.TYPES.MODULE
	};
	Progress.handledProps = ['active', 'as', 'attached', 'autoSuccess', 'children', 'className', 'color', 'disabled', 'error', 'indicating', 'inverted', 'label', 'percent', 'precision', 'progress', 'size', 'success', 'total', 'value', 'warning'];
	process.env.NODE_ENV !== "production" ? Progress.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A progress bar can show activity. */
	  active: _propTypes2.default.bool,

	  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */
	  attached: _propTypes2.default.oneOf(['top', 'bottom']),

	  /** Whether success state should automatically trigger when progress completes. */
	  autoSuccess: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A progress bar can have different colors. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A progress bar be disabled. */
	  disabled: _propTypes2.default.bool,

	  /** A progress bar can show a error state. */
	  error: _propTypes2.default.bool,

	  /** An indicating progress bar visually indicates the current level of progress of a task. */
	  indicating: _propTypes2.default.bool,

	  /** A progress bar can have its colors inverted. */
	  inverted: _propTypes2.default.bool,

	  /** Can be set to either to display progress as percent or ratio. */
	  label: _lib.customPropTypes.itemShorthand,

	  /** Current percent complete. */
	  percent: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['total', 'value']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),

	  /** Decimal point precision for calculated progress. */
	  precision: _propTypes2.default.number,

	  /** A progress bar can contain a text value indicating current progress. */
	  progress: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['percent', 'ratio'])]),

	  /** A progress bar can vary in size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'mini', 'huge', 'massive')),

	  /** A progress bar can show a success state. */
	  success: _propTypes2.default.bool,

	  /**
	   * For use with value.
	   * Together, these will calculate the percent.
	   * Mutually excludes percent.
	   */
	  total: _lib.customPropTypes.every([_lib.customPropTypes.demand(['value']), _lib.customPropTypes.disallow(['percent']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),

	  /**
	   * For use with total. Together, these will calculate the percent. Mutually excludes percent.
	   */
	  value: _lib.customPropTypes.every([_lib.customPropTypes.demand(['total']), _lib.customPropTypes.disallow(['percent']), _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])]),

	  /** A progress bar can show a warning state. */
	  warning: _propTypes2.default.bool
	} : void 0;
	exports.default = Progress;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

	var createRound = __webpack_require__(635);

	/**
	 * Computes `number` rounded to `precision`.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.10.0
	 * @category Math
	 * @param {number} number The number to round.
	 * @param {number} [precision=0] The precision to round to.
	 * @returns {number} Returns the rounded number.
	 * @example
	 *
	 * _.round(4.006);
	 * // => 4
	 *
	 * _.round(4.006, 2);
	 * // => 4.01
	 *
	 * _.round(4060, -2);
	 * // => 4100
	 */
	var round = createRound('round');

	module.exports = round;


/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(220),
	    toNumber = __webpack_require__(222),
	    toString = __webpack_require__(169);

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMin = Math.min;

	/**
	 * Creates a function like `_.round`.
	 *
	 * @private
	 * @param {string} methodName The name of the `Math` method to use when rounding.
	 * @returns {Function} Returns the new round function.
	 */
	function createRound(methodName) {
	  var func = Math[methodName];
	  return function(number, precision) {
	    number = toNumber(number);
	    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
	    if (precision) {
	      // Shift with exponential notation to avoid floating-point issues.
	      // See [MDN](https://mdn.io/round#Examples) for more details.
	      var pair = (toString(number) + 'e').split('e'),
	          value = func(pair[0] + 'e' + (+pair[1] + precision));

	      pair = (toString(value) + 'e').split('e');
	      return +(pair[0] + 'e' + (+pair[1] - precision));
	    }
	    return func(number);
	  };
	}

	module.exports = createRound;


/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

	var baseClamp = __webpack_require__(219),
	    toNumber = __webpack_require__(222);

	/**
	 * Clamps `number` within the inclusive `lower` and `upper` bounds.
	 *
	 * @static
	 * @memberOf _
	 * @since 4.0.0
	 * @category Number
	 * @param {number} number The number to clamp.
	 * @param {number} [lower] The lower bound.
	 * @param {number} upper The upper bound.
	 * @returns {number} Returns the clamped number.
	 * @example
	 *
	 * _.clamp(-10, -5, 5);
	 * // => -5
	 *
	 * _.clamp(10, -5, 5);
	 * // => 5
	 */
	function clamp(number, lower, upper) {
	  if (upper === undefined) {
	    upper = lower;
	    lower = undefined;
	  }
	  if (upper !== undefined) {
	    upper = toNumber(upper);
	    upper = upper === upper ? upper : 0;
	  }
	  if (lower !== undefined) {
	    lower = toNumber(lower);
	    lower = lower === lower ? lower : 0;
	  }
	  return baseClamp(toNumber(number), lower, upper);
	}

	module.exports = clamp;


/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Rating = __webpack_require__(638);

	var _Rating2 = _interopRequireDefault(_Rating);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Rating2.default;

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _times2 = __webpack_require__(316);

	var _times3 = _interopRequireDefault(_times2);

	var _invoke2 = __webpack_require__(177);

	var _invoke3 = _interopRequireDefault(_invoke2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _RatingIcon = __webpack_require__(639);

	var _RatingIcon2 = _interopRequireDefault(_RatingIcon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A rating indicates user interest in content.
	 */
	var Rating = function (_Component) {
	  (0, _inherits3.default)(Rating, _Component);

	  function Rating() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Rating);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Rating.__proto__ || Object.getPrototypeOf(Rating)).call.apply(_ref, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Rating, [{
	    key: 'render',
	    value: function render() {
	      var _this2 = this;

	      var _props = this.props,
	          className = _props.className,
	          disabled = _props.disabled,
	          icon = _props.icon,
	          maxRating = _props.maxRating,
	          size = _props.size;
	      var _state = this.state,
	          rating = _state.rating,
	          selectedIndex = _state.selectedIndex,
	          isSelecting = _state.isSelecting;


	      var classes = (0, _classnames2.default)('ui', icon, size, (0, _lib.useKeyOnly)(disabled, 'disabled'), (0, _lib.useKeyOnly)(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);
	      var rest = (0, _lib.getUnhandledProps)(Rating, this.props);
	      var ElementType = (0, _lib.getElementType)(Rating, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, role: 'radiogroup', onMouseLeave: this.handleMouseLeave }),
	        (0, _times3.default)(maxRating, function (i) {
	          return _react2.default.createElement(_RatingIcon2.default, {
	            active: rating >= i + 1,
	            'aria-checked': rating === i + 1,
	            'aria-posinset': i + 1,
	            'aria-setsize': maxRating,
	            index: i,
	            key: i,
	            onClick: _this2.handleIconClick,
	            onMouseEnter: _this2.handleIconMouseEnter,
	            selected: selectedIndex >= i && isSelecting
	          });
	        })
	      );
	    }
	  }]);
	  return Rating;
	}(_lib.AutoControlledComponent);

	Rating.autoControlledProps = ['rating'];
	Rating.defaultProps = {
	  clearable: 'auto',
	  maxRating: 1
	};
	Rating._meta = {
	  name: 'Rating',
	  type: _lib.META.TYPES.MODULE
	};
	Rating.Icon = _RatingIcon2.default;
	Rating.handledProps = ['as', 'className', 'clearable', 'defaultRating', 'disabled', 'icon', 'maxRating', 'onRate', 'rating', 'size'];

	var _initialiseProps = function _initialiseProps() {
	  var _this3 = this;

	  this.handleIconClick = function (e, _ref2) {
	    var index = _ref2.index;
	    var _props2 = _this3.props,
	        clearable = _props2.clearable,
	        disabled = _props2.disabled,
	        maxRating = _props2.maxRating,
	        onRate = _props2.onRate;
	    var rating = _this3.state.rating;

	    if (disabled) return;

	    // default newRating is the clicked icon
	    // allow toggling a binary rating
	    // allow clearing ratings
	    var newRating = index + 1;
	    if (clearable === 'auto' && maxRating === 1) {
	      newRating = +!rating;
	    } else if (clearable === true && newRating === rating) {
	      newRating = 0;
	    }

	    // set rating
	    _this3.trySetState({ rating: newRating }, { isSelecting: false });
	    if (onRate) onRate(e, (0, _extends3.default)({}, _this3.props, { rating: newRating }));
	  };

	  this.handleIconMouseEnter = function (e, _ref3) {
	    var index = _ref3.index;

	    if (_this3.props.disabled) return;

	    _this3.setState({ selectedIndex: index, isSelecting: true });
	  };

	  this.handleMouseLeave = function () {
	    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }

	    _invoke3.default.apply(undefined, [_this3.props, 'onMouseLeave'].concat(args));

	    if (_this3.props.disabled) return;

	    _this3.setState({ selectedIndex: -1, isSelecting: false });
	  };
	};

	exports.default = Rating;
	process.env.NODE_ENV !== "production" ? Rating.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /**
	   * You can clear the rating by clicking on the current start rating.
	   * By default a rating will be only clearable if there is 1 icon.
	   * Setting to `true`/`false` will allow or disallow a user to clear their rating.
	   */
	  clearable: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['auto'])]),

	  /** The initial rating value. */
	  defaultRating: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** You can disable or enable interactive rating.  Makes a read-only rating. */
	  disabled: _propTypes2.default.bool,

	  /** A rating can use a set of star or heart icons. */
	  icon: _propTypes2.default.oneOf(['star', 'heart']),

	  /** The total number of icons. */
	  maxRating: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /**
	   * Called after user selects a new rating.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props and proposed rating.
	   */
	  onRate: _propTypes2.default.func,

	  /** The current number of active icons. */
	  rating: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),

	  /** A progress bar can vary in size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium', 'big'))
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An internal icon sub-component for Rating component
	 */
	var RatingIcon = function (_Component) {
	  (0, _inherits3.default)(RatingIcon, _Component);

	  function RatingIcon() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, RatingIcon);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = RatingIcon.__proto__ || Object.getPrototypeOf(RatingIcon)).call.apply(_ref, [this].concat(args))), _this), _this.defaultProps = {
	      as: 'i'
	    }, _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _this.handleKeyUp = function (e) {
	      var _this$props = _this.props,
	          onClick = _this$props.onClick,
	          onKeyUp = _this$props.onKeyUp;


	      if (onKeyUp) onKeyUp(e, _this.props);

	      if (onClick) {
	        switch (_lib.keyboardKey.getCode(e)) {
	          case _lib.keyboardKey.Enter:
	          case _lib.keyboardKey.Spacebar:
	            e.preventDefault();
	            onClick(e, _this.props);
	            break;
	          default:
	            return;
	        }
	      }
	    }, _this.handleMouseEnter = function (e) {
	      var onMouseEnter = _this.props.onMouseEnter;


	      if (onMouseEnter) onMouseEnter(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(RatingIcon, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          className = _props.className,
	          selected = _props.selected;

	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), (0, _lib.useKeyOnly)(selected, 'selected'), 'icon', className);
	      var rest = (0, _lib.getUnhandledProps)(RatingIcon, this.props);
	      var ElementType = (0, _lib.getElementType)(RatingIcon, this.props);

	      return _react2.default.createElement(ElementType, (0, _extends3.default)({}, rest, {
	        className: classes,
	        onClick: this.handleClick,
	        onKeyUp: this.handleKeyUp,
	        onMouseEnter: this.handleMouseEnter,
	        tabIndex: 0,
	        role: 'radio'
	      }));
	    }
	  }]);
	  return RatingIcon;
	}(_react.Component);

	RatingIcon._meta = {
	  name: 'RatingIcon',
	  parent: 'Rating',
	  type: _lib.META.TYPES.MODULE
	};
	RatingIcon.handledProps = ['active', 'as', 'className', 'index', 'onClick', 'onKeyUp', 'onMouseEnter', 'selected'];
	exports.default = RatingIcon;
	process.env.NODE_ENV !== "production" ? RatingIcon.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Indicates activity of an icon. */
	  active: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** An index of icon inside Rating. */
	  index: _propTypes2.default.number,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /**
	   * Called on keyup.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onKeyUp: _propTypes2.default.func,

	  /**
	   * Called on mouseenter.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onMouseEnter: _propTypes2.default.func,

	  /** Indicates selection of an icon. */
	  selected: _propTypes2.default.bool
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Search = __webpack_require__(641);

	var _Search2 = _interopRequireDefault(_Search);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Search2.default;

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _slicedToArray2 = __webpack_require__(544);

	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

	var _objectWithoutProperties2 = __webpack_require__(642);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _get3 = __webpack_require__(501);

	var _get4 = _interopRequireDefault(_get3);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isEmpty2 = __webpack_require__(281);

	var _isEmpty3 = _interopRequireDefault(_isEmpty2);

	var _partialRight2 = __webpack_require__(643);

	var _partialRight3 = _interopRequireDefault(_partialRight2);

	var _inRange2 = __webpack_require__(644);

	var _inRange3 = _interopRequireDefault(_inRange2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _get5 = __webpack_require__(275);

	var _get6 = _interopRequireDefault(_get5);

	var _reduce2 = __webpack_require__(512);

	var _reduce3 = _interopRequireDefault(_reduce2);

	var _isEqual2 = __webpack_require__(318);

	var _isEqual3 = _interopRequireDefault(_isEqual2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Input = __webpack_require__(542);

	var _Input2 = _interopRequireDefault(_Input);

	var _SearchCategory = __webpack_require__(646);

	var _SearchCategory2 = _interopRequireDefault(_SearchCategory);

	var _SearchResult = __webpack_require__(647);

	var _SearchResult2 = _interopRequireDefault(_SearchResult);

	var _SearchResults = __webpack_require__(648);

	var _SearchResults2 = _interopRequireDefault(_SearchResults);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var debug = (0, _lib.makeDebugger)('search');

	/**
	 * A search module allows a user to query for results from a selection of data
	 */

	var Search = function (_Component) {
	  (0, _inherits3.default)(Search, _Component);

	  function Search() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Search);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Search.__proto__ || Object.getPrototypeOf(Search)).call.apply(_ref, [this].concat(args))), _this), _this.handleResultSelect = function (e, result) {
	      debug('handleResultSelect()');
	      debug(result);
	      var onResultSelect = _this.props.onResultSelect;

	      if (onResultSelect) onResultSelect(e, result);
	    }, _this.closeOnEscape = function (e) {
	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Escape) return;
	      e.preventDefault();
	      _this.close();
	    }, _this.moveSelectionOnKeyDown = function (e) {
	      debug('moveSelectionOnKeyDown()');
	      debug(_lib.keyboardKey.getName(e));
	      switch (_lib.keyboardKey.getCode(e)) {
	        case _lib.keyboardKey.ArrowDown:
	          e.preventDefault();
	          _this.moveSelectionBy(1);
	          break;
	        case _lib.keyboardKey.ArrowUp:
	          e.preventDefault();
	          _this.moveSelectionBy(-1);
	          break;
	        default:
	          break;
	      }
	    }, _this.selectItemOnEnter = function (e) {
	      debug('selectItemOnEnter()');
	      debug(_lib.keyboardKey.getName(e));
	      if (_lib.keyboardKey.getCode(e) !== _lib.keyboardKey.Enter) return;
	      e.preventDefault();

	      var result = _this.getSelectedResult();

	      // prevent selecting null if there was no selected item value
	      if (!result) return;

	      // notify the onResultSelect prop that the user is trying to change value
	      _this.setValue(result.title);
	      _this.handleResultSelect(e, result);
	      _this.close();
	    }, _this.closeOnDocumentClick = function (e) {
	      debug('closeOnDocumentClick()');
	      debug(e);
	      _this.close();
	    }, _this.handleMouseDown = function (e) {
	      debug('handleMouseDown()');
	      var onMouseDown = _this.props.onMouseDown;

	      if (onMouseDown) onMouseDown(e, _this.props);
	      _this.isMouseDown = true;
	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;
	      document.addEventListener('mouseup', _this.handleDocumentMouseUp);
	    }, _this.handleDocumentMouseUp = function () {
	      debug('handleDocumentMouseUp()');
	      _this.isMouseDown = false;
	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;
	      document.removeEventListener('mouseup', _this.handleDocumentMouseUp);
	    }, _this.handleInputClick = function (e) {
	      debug('handleInputClick()', e);

	      // prevent closeOnDocumentClick()
	      e.nativeEvent.stopImmediatePropagation();

	      _this.tryOpen();
	    }, _this.handleItemClick = function (e, _ref2) {
	      var id = _ref2.id;

	      debug('handleItemClick()');
	      debug(id);
	      var result = _this.getSelectedResult(id);

	      // prevent closeOnDocumentClick()
	      e.nativeEvent.stopImmediatePropagation();

	      // notify the onResultSelect prop that the user is trying to change value
	      _this.setValue(result.title);
	      _this.handleResultSelect(e, result);
	      _this.close();
	    }, _this.handleFocus = function (e) {
	      debug('handleFocus()');
	      var onFocus = _this.props.onFocus;

	      if (onFocus) onFocus(e, _this.props);
	      _this.setState({ focus: true });
	    }, _this.handleBlur = function (e) {
	      debug('handleBlur()');
	      var onBlur = _this.props.onBlur;

	      if (onBlur) onBlur(e, _this.props);
	      _this.setState({ focus: false });
	    }, _this.handleSearchChange = function (e) {
	      debug('handleSearchChange()');
	      debug(e.target.value);
	      // prevent propagating to this.props.onChange()
	      e.stopPropagation();
	      var _this$props = _this.props,
	          onSearchChange = _this$props.onSearchChange,
	          minCharacters = _this$props.minCharacters;
	      var open = _this.state.open;

	      var newQuery = e.target.value;

	      if (onSearchChange) onSearchChange(e, newQuery);

	      // open search dropdown on search query
	      if (newQuery.length < minCharacters) {
	        _this.close();
	      } else if (!open) {
	        _this.tryOpen(newQuery);
	      }

	      _this.setValue(newQuery);
	    }, _this.getFlattenedResults = function () {
	      var _this$props2 = _this.props,
	          category = _this$props2.category,
	          results = _this$props2.results;


	      return !category ? results : (0, _reduce3.default)(results, function (memo, categoryData) {
	        return memo.concat(categoryData.results);
	      }, []);
	    }, _this.getSelectedResult = function () {
	      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.selectedIndex;

	      var results = _this.getFlattenedResults();
	      return (0, _get6.default)(results, index);
	    }, _this.setValue = function (value) {
	      debug('setValue()');
	      debug('value', value);

	      var selectFirstResult = _this.props.selectFirstResult;


	      _this.trySetState({ value: value }, { selectedIndex: selectFirstResult ? 0 : -1 });
	    }, _this.moveSelectionBy = function (offset) {
	      debug('moveSelectionBy()');
	      debug('offset: ' + offset);
	      var selectedIndex = _this.state.selectedIndex;


	      var results = _this.getFlattenedResults();
	      var lastIndex = results.length - 1;

	      // next is after last, wrap to beginning
	      // next is before first, wrap to end
	      var nextIndex = selectedIndex + offset;
	      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

	      _this.setState({ selectedIndex: nextIndex });
	      _this.scrollSelectedItemIntoView();
	    }, _this.scrollSelectedItemIntoView = function () {
	      debug('scrollSelectedItemIntoView()');
	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;
	      var menu = document.querySelector('.ui.search.active.visible .results.visible');
	      var item = menu.querySelector('.result.active');
	      if (!item) return;
	      debug('menu (results): ' + menu);
	      debug('item (result): ' + item);
	      var isOutOfUpperView = item.offsetTop < menu.scrollTop;
	      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

	      if (isOutOfUpperView) {
	        menu.scrollTop = item.offsetTop;
	      } else if (isOutOfLowerView) {
	        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
	      }
	    }, _this.tryOpen = function () {
	      var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;

	      debug('open()');

	      var minCharacters = _this.props.minCharacters;

	      if (currentValue.length < minCharacters) return;

	      _this.open();
	    }, _this.open = function () {
	      debug('open()');
	      _this.trySetState({ open: true });
	    }, _this.close = function () {
	      debug('close()');
	      _this.trySetState({ open: false });
	    }, _this.renderSearchInput = function (rest) {
	      var _this$props3 = _this.props,
	          icon = _this$props3.icon,
	          input = _this$props3.input;
	      var value = _this.state.value;


	      return _Input2.default.create(input, { defaultProps: (0, _extends3.default)({}, rest, {
	          icon: icon,
	          input: { className: 'prompt', tabIndex: '0', autoComplete: 'off' },
	          onBlur: _this.handleBlur,
	          onChange: _this.handleSearchChange,
	          onClick: _this.handleInputClick,
	          onFocus: _this.handleFocus,
	          value: value
	        }) });
	    }, _this.renderNoResults = function () {
	      var _this$props4 = _this.props,
	          noResultsDescription = _this$props4.noResultsDescription,
	          noResultsMessage = _this$props4.noResultsMessage;


	      return _react2.default.createElement(
	        'div',
	        { className: 'message empty' },
	        _react2.default.createElement(
	          'div',
	          { className: 'header' },
	          noResultsMessage
	        ),
	        noResultsDescription && _react2.default.createElement(
	          'div',
	          { className: 'description' },
	          noResultsDescription
	        )
	      );
	    }, _this.renderResult = function (_ref3, index, _array) {
	      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	      var childKey = _ref3.childKey,
	          result = (0, _objectWithoutProperties3.default)(_ref3, ['childKey']);
	      var resultRenderer = _this.props.resultRenderer;
	      var selectedIndex = _this.state.selectedIndex;

	      var offsetIndex = index + offset;

	      return _react2.default.createElement(_SearchResult2.default, (0, _extends3.default)({
	        key: childKey || result.title,
	        active: selectedIndex === offsetIndex,
	        onClick: _this.handleItemClick,
	        renderer: resultRenderer
	      }, result, {
	        id: offsetIndex // Used to lookup the result on item click
	      }));
	    }, _this.renderResults = function () {
	      var results = _this.props.results;


	      return (0, _map3.default)(results, _this.renderResult);
	    }, _this.renderCategories = function () {
	      var _this$props5 = _this.props,
	          categoryRenderer = _this$props5.categoryRenderer,
	          categories = _this$props5.results;
	      var selectedIndex = _this.state.selectedIndex;


	      var count = 0;

	      return (0, _map3.default)(categories, function (_ref4, name, index) {
	        var childKey = _ref4.childKey,
	            category = (0, _objectWithoutProperties3.default)(_ref4, ['childKey']);

	        var categoryProps = (0, _extends3.default)({
	          key: childKey || category.name,
	          active: (0, _inRange3.default)(selectedIndex, count, count + category.results.length),
	          renderer: categoryRenderer
	        }, category);
	        var renderFn = (0, _partialRight3.default)(_this.renderResult, count);

	        count = count + category.results.length;

	        return _react2.default.createElement(
	          _SearchCategory2.default,
	          categoryProps,
	          category.results.map(renderFn)
	        );
	      });
	    }, _this.renderMenuContent = function () {
	      var _this$props6 = _this.props,
	          category = _this$props6.category,
	          showNoResults = _this$props6.showNoResults,
	          results = _this$props6.results;


	      if ((0, _isEmpty3.default)(results)) {
	        return showNoResults ? _this.renderNoResults() : null;
	      }

	      return category ? _this.renderCategories() : _this.renderResults();
	    }, _this.renderResultsMenu = function () {
	      var open = _this.state.open;

	      var resultsClasses = open ? 'visible' : '';
	      var menuContent = _this.renderMenuContent();

	      if (!menuContent) return;

	      return _react2.default.createElement(
	        _SearchResults2.default,
	        { className: resultsClasses },
	        menuContent
	      );
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Search, [{
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      if ((0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillMount', this)) (0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillMount', this).call(this);
	      debug('componentWillMount()');
	      var _state = this.state,
	          open = _state.open,
	          value = _state.value;


	      this.setValue(value);
	      if (open) this.open();
	    }
	  }, {
	    key: 'shouldComponentUpdate',
	    value: function shouldComponentUpdate(nextProps, nextState) {
	      return !(0, _isEqual3.default)(nextProps, this.props) || !(0, _isEqual3.default)(nextState, this.state);
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      (0, _get4.default)(Search.prototype.__proto__ || Object.getPrototypeOf(Search.prototype), 'componentWillReceiveProps', this).call(this, nextProps);
	      debug('componentWillReceiveProps()');
	      // TODO objectDiff still runs in prod, stop it
	      debug('changed props:', (0, _lib.objectDiff)(nextProps, this.props));

	      if (!(0, _isEqual3.default)(nextProps.value, this.props.value)) {
	        debug('value changed, setting', nextProps.value);
	        this.setValue(nextProps.value);
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps, prevState) {
	      // eslint-disable-line complexity
	      debug('componentDidUpdate()');
	      // TODO objectDiff still runs in prod, stop it
	      debug('to state:', (0, _lib.objectDiff)(prevState, this.state));

	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;

	      // focused / blurred
	      if (!prevState.focus && this.state.focus) {
	        debug('search focused');
	        if (!this.isMouseDown) {
	          debug('mouse is not down, opening');
	          this.tryOpen();
	        }
	        if (this.state.open) {
	          document.addEventListener('keydown', this.moveSelectionOnKeyDown);
	          document.addEventListener('keydown', this.selectItemOnEnter);
	        }
	      } else if (prevState.focus && !this.state.focus) {
	        debug('search blurred');
	        if (!this.isMouseDown) {
	          debug('mouse is not down, closing');
	          this.close();
	        }
	        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
	        document.removeEventListener('keydown', this.selectItemOnEnter);
	      }

	      // opened / closed
	      if (!prevState.open && this.state.open) {
	        debug('search opened');
	        this.open();
	        document.addEventListener('keydown', this.closeOnEscape);
	        document.addEventListener('keydown', this.moveSelectionOnKeyDown);
	        document.addEventListener('keydown', this.selectItemOnEnter);
	        document.addEventListener('click', this.closeOnDocumentClick);
	      } else if (prevState.open && !this.state.open) {
	        debug('search closed');
	        this.close();
	        document.removeEventListener('keydown', this.closeOnEscape);
	        document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
	        document.removeEventListener('keydown', this.selectItemOnEnter);
	        document.removeEventListener('click', this.closeOnDocumentClick);
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      debug('componentWillUnmount()');

	      // Do not access document when server side rendering
	      if (!_lib.isBrowser) return;

	      document.removeEventListener('keydown', this.moveSelectionOnKeyDown);
	      document.removeEventListener('keydown', this.selectItemOnEnter);
	      document.removeEventListener('keydown', this.closeOnEscape);
	      document.removeEventListener('click', this.closeOnDocumentClick);
	    }

	    // ----------------------------------------
	    // Document Event Handlers
	    // ----------------------------------------

	    // ----------------------------------------
	    // Component Event Handlers
	    // ----------------------------------------

	    // ----------------------------------------
	    // Getters
	    // ----------------------------------------

	    // ----------------------------------------
	    // Setters
	    // ----------------------------------------

	    // ----------------------------------------
	    // Behavior
	    // ----------------------------------------

	    // Open if the current value is greater than the minCharacters prop


	    // ----------------------------------------
	    // Render
	    // ----------------------------------------

	    /**
	     * Offset is needed for determining the active item for results within a
	     * category. Since the index is reset to 0 for each new category, an offset
	     * must be passed in.
	     */

	  }, {
	    key: 'render',
	    value: function render() {
	      debug('render()');
	      debug('props', this.props);
	      debug('state', this.state);
	      var _state2 = this.state,
	          searchClasses = _state2.searchClasses,
	          focus = _state2.focus,
	          open = _state2.open;
	      var _props = this.props,
	          aligned = _props.aligned,
	          category = _props.category,
	          className = _props.className,
	          fluid = _props.fluid,
	          loading = _props.loading,
	          size = _props.size;

	      // Classes

	      var classes = (0, _classnames2.default)('ui', open && 'active visible', size, searchClasses, (0, _lib.useKeyOnly)(category, 'category'), (0, _lib.useKeyOnly)(focus, 'focus'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(loading, 'loading'), (0, _lib.useValueAndKey)(aligned, 'aligned'), 'search', className);
	      var unhandled = (0, _lib.getUnhandledProps)(Search, this.props);
	      var ElementType = (0, _lib.getElementType)(Search, this.props);

	      var _partitionHTMLInputPr = (0, _lib.partitionHTMLInputProps)(unhandled, _lib.htmlInputAttrs),
	          _partitionHTMLInputPr2 = (0, _slicedToArray3.default)(_partitionHTMLInputPr, 2),
	          htmlInputProps = _partitionHTMLInputPr2[0],
	          rest = _partitionHTMLInputPr2[1];

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, {
	          className: classes,
	          onBlur: this.handleBlur,
	          onFocus: this.handleFocus,
	          onMouseDown: this.handleMouseDown
	        }),
	        this.renderSearchInput(htmlInputProps),
	        this.renderResultsMenu()
	      );
	    }
	  }]);
	  return Search;
	}(_lib.AutoControlledComponent);

	Search.defaultProps = {
	  icon: 'search',
	  input: 'text',
	  minCharacters: 1,
	  noResultsMessage: 'No results found.',
	  showNoResults: true
	};
	Search.autoControlledProps = ['open', 'value'];
	Search._meta = {
	  name: 'Search',
	  type: _lib.META.TYPES.MODULE
	};
	Search.Category = _SearchCategory2.default;
	Search.Result = _SearchResult2.default;
	Search.Results = _SearchResults2.default;
	Search.handledProps = ['aligned', 'as', 'category', 'categoryRenderer', 'className', 'defaultOpen', 'defaultValue', 'fluid', 'icon', 'input', 'loading', 'minCharacters', 'noResultsDescription', 'noResultsMessage', 'onBlur', 'onFocus', 'onMouseDown', 'onResultSelect', 'onSearchChange', 'open', 'resultRenderer', 'results', 'selectFirstResult', 'showNoResults', 'size', 'value'];
	exports.default = Search;
	process.env.NODE_ENV !== "production" ? Search.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  // ------------------------------------
	  // Behavior
	  // ------------------------------------

	  /** Initial value of open. */
	  defaultOpen: _propTypes2.default.bool,

	  /** Initial value. */
	  defaultValue: _propTypes2.default.string,

	  /** Shorthand for Icon. */
	  icon: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.object]),

	  /** Minimum characters to query for results */
	  minCharacters: _propTypes2.default.number,

	  /** Additional text for "No Results" message with less emphasis. */
	  noResultsDescription: _propTypes2.default.node,

	  /** Message to display when there are no results. */
	  noResultsMessage: _propTypes2.default.node,

	  /** Controls whether or not the results menu is displayed. */
	  open: _propTypes2.default.bool,

	  /**
	   * One of:
	   * - array of Search.Result props e.g. `{ title: '', description: '' }` or
	   * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`
	   */
	  results: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.shape(_SearchResult2.default.propTypes)), _propTypes2.default.object]),

	  /** Whether the search should automatically select the first result after searching. */
	  selectFirstResult: _propTypes2.default.bool,

	  /** Whether a "no results" message should be shown if no results are found. */
	  showNoResults: _propTypes2.default.bool,

	  /** Current value of the search input. Creates a controlled component. */
	  value: _propTypes2.default.string,

	  // ------------------------------------
	  // Rendering
	  // ------------------------------------

	  /**
	   * Renders the SearchCategory contents.
	   *
	   * @param {object} props - The SearchCategory props object.
	   * @returns {*} - Renderable SearchCategory contents.
	   */
	  categoryRenderer: _propTypes2.default.func,

	  /**
	   * Renders the SearchResult contents.
	   *
	   * @param {object} props - The SearchResult props object.
	   * @returns {*} - Renderable SearchResult contents.
	   */
	  resultRenderer: _propTypes2.default.func,

	  // ------------------------------------
	  // Callbacks
	  // ------------------------------------

	  /**
	   * Called on blur.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onBlur: _propTypes2.default.func,

	  /**
	   * Called on focus.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onFocus: _propTypes2.default.func,

	  /**
	   * Called on mousedown.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onMouseDown: _propTypes2.default.func,

	  /**
	   * Called when a result is selected.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onResultSelect: _propTypes2.default.func,

	  /**
	   * Called on search input change.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {string} value - Current value of search input.
	   */
	  onSearchChange: _propTypes2.default.func,

	  // ------------------------------------
	  // Style
	  // ------------------------------------

	  /** A search can have its results aligned to its left or right container edge. */
	  aligned: _propTypes2.default.string,

	  /** A search can display results from remote content ordered by categories. */
	  category: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A search can have its results take up the width of its container. */
	  fluid: _propTypes2.default.bool,

	  /** A search input can take up the width of its container. */
	  input: _lib.customPropTypes.itemShorthand,

	  /** A search can show a loading indicator. */
	  loading: _propTypes2.default.bool,

	  /** A search can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium'))
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 642 */
/***/ (function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj, keys) {
	  var target = {};

	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }

	  return target;
	};

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

	var baseRest = __webpack_require__(184),
	    createWrap = __webpack_require__(346),
	    getHolder = __webpack_require__(372),
	    replaceHolders = __webpack_require__(374);

	/** Used to compose bitmasks for function metadata. */
	var WRAP_PARTIAL_RIGHT_FLAG = 64;

	/**
	 * This method is like `_.partial` except that partially applied arguments
	 * are appended to the arguments it receives.
	 *
	 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
	 * builds, may be used as a placeholder for partially applied arguments.
	 *
	 * **Note:** This method doesn't set the "length" property of partially
	 * applied functions.
	 *
	 * @static
	 * @memberOf _
	 * @since 1.0.0
	 * @category Function
	 * @param {Function} func The function to partially apply arguments to.
	 * @param {...*} [partials] The arguments to be partially applied.
	 * @returns {Function} Returns the new partially applied function.
	 * @example
	 *
	 * function greet(greeting, name) {
	 *   return greeting + ' ' + name;
	 * }
	 *
	 * var greetFred = _.partialRight(greet, 'fred');
	 * greetFred('hi');
	 * // => 'hi fred'
	 *
	 * // Partially applied with placeholders.
	 * var sayHelloTo = _.partialRight(greet, 'hello', _);
	 * sayHelloTo('fred');
	 * // => 'hello fred'
	 */
	var partialRight = baseRest(function(func, partials) {
	  var holders = replaceHolders(partials, getHolder(partialRight));
	  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
	});

	// Assign default placeholders.
	partialRight.placeholder = {};

	module.exports = partialRight;


/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

	var baseInRange = __webpack_require__(645),
	    toFinite = __webpack_require__(221),
	    toNumber = __webpack_require__(222);

	/**
	 * Checks if `n` is between `start` and up to, but not including, `end`. If
	 * `end` is not specified, it's set to `start` with `start` then set to `0`.
	 * If `start` is greater than `end` the params are swapped to support
	 * negative ranges.
	 *
	 * @static
	 * @memberOf _
	 * @since 3.3.0
	 * @category Number
	 * @param {number} number The number to check.
	 * @param {number} [start=0] The start of the range.
	 * @param {number} end The end of the range.
	 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	 * @see _.range, _.rangeRight
	 * @example
	 *
	 * _.inRange(3, 2, 4);
	 * // => true
	 *
	 * _.inRange(4, 8);
	 * // => true
	 *
	 * _.inRange(4, 2);
	 * // => false
	 *
	 * _.inRange(2, 2);
	 * // => false
	 *
	 * _.inRange(1.2, 2);
	 * // => true
	 *
	 * _.inRange(5.2, 4);
	 * // => false
	 *
	 * _.inRange(-3, -2, -6);
	 * // => true
	 */
	function inRange(number, start, end) {
	  start = toFinite(start);
	  if (end === undefined) {
	    end = start;
	    start = 0;
	  } else {
	    end = toFinite(end);
	  }
	  number = toNumber(number);
	  return baseInRange(number, start, end);
	}

	module.exports = inRange;


/***/ }),
/* 645 */
/***/ (function(module, exports) {

	/* Built-in method references for those with the same name as other `lodash` methods. */
	var nativeMax = Math.max,
	    nativeMin = Math.min;

	/**
	 * The base implementation of `_.inRange` which doesn't coerce arguments.
	 *
	 * @private
	 * @param {number} number The number to check.
	 * @param {number} start The start of the range.
	 * @param {number} end The end of the range.
	 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
	 */
	function baseInRange(number, start, end) {
	  return number >= nativeMin(start, end) && number < nativeMax(start, end);
	}

	module.exports = baseInRange;


/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function SearchCategory(props) {
	  var active = props.active,
	      children = props.children,
	      className = props.className,
	      renderer = props.renderer;

	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'category', className);
	  var rest = (0, _lib.getUnhandledProps)(SearchCategory, props);
	  var ElementType = (0, _lib.getElementType)(SearchCategory, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _react2.default.createElement(
	      'div',
	      { className: 'name' },
	      renderer(props)
	    ),
	    children
	  );
	}

	SearchCategory.handledProps = ['active', 'as', 'children', 'className', 'name', 'renderer', 'results'];
	SearchCategory._meta = {
	  name: 'SearchCategory',
	  parent: 'Search',
	  type: _lib.META.TYPES.MODULE
	};

	SearchCategory.defaultProps = {
	  renderer: function renderer(_ref) {
	    var name = _ref.name;
	    return name;
	  }
	};

	process.env.NODE_ENV !== "production" ? SearchCategory.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The item currently selected by keyboard shortcut. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Display name. */
	  name: _propTypes2.default.string,

	  /**
	   * Renders the category contents.
	   *
	   * @param {object} props - The SearchCategory props object.
	   * @returns {*} - Renderable category contents.
	   */
	  renderer: _propTypes2.default.func,

	  /** Array of Search.Result props. */
	  results: _propTypes2.default.array
	} : void 0;

	exports.default = SearchCategory;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// Note: You technically only need the 'content' wrapper when there's an
	// image. However, optionally wrapping it makes this function a lot more
	// complicated and harder to read. Since always wrapping it doesn't affect
	// the style in any way let's just do that.
	//
	// Note: To avoid requiring a wrapping div, we return an array here so to
	// prevent rendering issues each node needs a unique key.
	var defaultRenderer = function defaultRenderer(_ref) {
	  var image = _ref.image,
	      price = _ref.price,
	      title = _ref.title,
	      description = _ref.description;
	  return [image && _react2.default.createElement(
	    'div',
	    { key: 'image', className: 'image' },
	    (0, _lib.createHTMLImage)(image)
	  ), _react2.default.createElement(
	    'div',
	    { key: 'content', className: 'content' },
	    price && _react2.default.createElement(
	      'div',
	      { className: 'price' },
	      price
	    ),
	    title && _react2.default.createElement(
	      'div',
	      { className: 'title' },
	      title
	    ),
	    description && _react2.default.createElement(
	      'div',
	      { className: 'description' },
	      description
	    )
	  )];
	};

	defaultRenderer.handledProps = [];

	var SearchResult = function (_Component) {
	  (0, _inherits3.default)(SearchResult, _Component);

	  function SearchResult() {
	    var _ref2;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, SearchResult);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref2 = SearchResult.__proto__ || Object.getPrototypeOf(SearchResult)).call.apply(_ref2, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(SearchResult, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          active = _props.active,
	          className = _props.className,
	          renderer = _props.renderer;


	      var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), 'result', className);
	      var rest = (0, _lib.getUnhandledProps)(SearchResult, this.props);
	      var ElementType = (0, _lib.getElementType)(SearchResult, this.props);

	      // Note: You technically only need the 'content' wrapper when there's an
	      // image. However, optionally wrapping it makes this function a lot more
	      // complicated and harder to read. Since always wrapping it doesn't affect
	      // the style in any way let's just do that.
	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, onClick: this.handleClick }),
	        renderer(this.props)
	      );
	    }
	  }]);
	  return SearchResult;
	}(_react.Component);

	SearchResult.defaultProps = {
	  renderer: defaultRenderer
	};
	SearchResult._meta = {
	  name: 'SearchResult',
	  parent: 'Search',
	  type: _lib.META.TYPES.MODULE
	};
	SearchResult.handledProps = ['active', 'as', 'className', 'description', 'id', 'image', 'onClick', 'price', 'renderer', 'title'];
	exports.default = SearchResult;
	process.env.NODE_ENV !== "production" ? SearchResult.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** The item currently selected by keyboard shortcut. */
	  active: _propTypes2.default.bool,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Additional text with less emphasis. */
	  description: _propTypes2.default.string,

	  /** A unique identifier. */
	  id: _propTypes2.default.number,

	  /** Add an image to the item. */
	  image: _propTypes2.default.string,

	  /**
	   * Called on click.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /** Customized text for price. */
	  price: _propTypes2.default.string,

	  /**
	   * Renders the result contents.
	   *
	   * @param {object} props - The SearchResult props object.
	   * @returns {*} - Renderable result contents.
	   */
	  renderer: _propTypes2.default.func,

	  /** Display title. */
	  title: _propTypes2.default.string
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function SearchResults(props) {
	  var children = props.children,
	      className = props.className;

	  var classes = (0, _classnames2.default)('results transition', className);
	  var rest = (0, _lib.getUnhandledProps)(SearchResults, props);
	  var ElementType = (0, _lib.getElementType)(SearchResults, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	SearchResults.handledProps = ['as', 'children', 'className'];
	SearchResults._meta = {
	  name: 'SearchResults',
	  parent: 'Search',
	  type: _lib.META.TYPES.MODULE
	};

	process.env.NODE_ENV !== "production" ? SearchResults.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = SearchResults;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Sidebar = __webpack_require__(650);

	var _Sidebar2 = _interopRequireDefault(_Sidebar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Sidebar2.default;

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _SidebarPushable = __webpack_require__(651);

	var _SidebarPushable2 = _interopRequireDefault(_SidebarPushable);

	var _SidebarPusher = __webpack_require__(652);

	var _SidebarPusher2 = _interopRequireDefault(_SidebarPusher);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A sidebar hides additional content beside a page.
	 */
	var Sidebar = function (_Component) {
	  (0, _inherits3.default)(Sidebar, _Component);

	  function Sidebar() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Sidebar);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Sidebar.__proto__ || Object.getPrototypeOf(Sidebar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.startAnimating = function () {
	      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;

	      clearTimeout(_this.stopAnimatingTimer);

	      _this.setState({ animating: true });

	      _this.stopAnimatingTimer = setTimeout(function () {
	        return _this.setState({ animating: false });
	      }, duration);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Sidebar, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.visible !== this.props.visible) {
	        this.startAnimating();
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          animation = _props.animation,
	          className = _props.className,
	          children = _props.children,
	          direction = _props.direction,
	          visible = _props.visible,
	          width = _props.width;
	      var animating = this.state.animating;


	      var classes = (0, _classnames2.default)('ui', animation, direction, width, (0, _lib.useKeyOnly)(animating, 'animating'), (0, _lib.useKeyOnly)(visible, 'visible'), 'sidebar', className);

	      var rest = (0, _lib.getUnhandledProps)(Sidebar, this.props);
	      var ElementType = (0, _lib.getElementType)(Sidebar, this.props);

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes }),
	        children
	      );
	    }
	  }]);
	  return Sidebar;
	}(_lib.AutoControlledComponent);

	Sidebar.defaultProps = {
	  direction: 'left'
	};
	Sidebar.autoControlledProps = ['visible'];
	Sidebar._meta = {
	  name: 'Sidebar',
	  type: _lib.META.TYPES.MODULE
	};
	Sidebar.Pushable = _SidebarPushable2.default;
	Sidebar.Pusher = _SidebarPusher2.default;
	Sidebar.handledProps = ['animation', 'as', 'children', 'className', 'defaultVisible', 'direction', 'visible', 'width'];
	process.env.NODE_ENV !== "production" ? Sidebar.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Animation style. */
	  animation: _propTypes2.default.oneOf(['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along']),

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Initial value of visible. */
	  defaultVisible: _propTypes2.default.bool,

	  /** Direction the sidebar should appear on. */
	  direction: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left']),

	  /** Controls whether or not the sidebar is visible on the page. */
	  visible: _propTypes2.default.bool,

	  /** Sidebar width. */
	  width: _propTypes2.default.oneOf(['very thin', 'thin', 'wide', 'very wide'])
	} : void 0;
	exports.default = Sidebar;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A pushable sub-component for Sidebar.
	 */
	function SidebarPushable(props) {
	  var className = props.className,
	      children = props.children;

	  var classes = (0, _classnames2.default)('pushable', className);
	  var rest = (0, _lib.getUnhandledProps)(SidebarPushable, props);
	  var ElementType = (0, _lib.getElementType)(SidebarPushable, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	SidebarPushable.handledProps = ['as', 'children', 'className'];
	SidebarPushable._meta = {
	  name: 'SidebarPushable',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Sidebar'
	};

	process.env.NODE_ENV !== "production" ? SidebarPushable.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = SidebarPushable;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A pushable sub-component for Sidebar.
	 */
	function SidebarPusher(props) {
	  var className = props.className,
	      dimmed = props.dimmed,
	      children = props.children;


	  var classes = (0, _classnames2.default)('pusher', (0, _lib.useKeyOnly)(dimmed, 'dimmed'), className);
	  var rest = (0, _lib.getUnhandledProps)(SidebarPusher, props);
	  var ElementType = (0, _lib.getElementType)(SidebarPusher, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	SidebarPusher.handledProps = ['as', 'children', 'className', 'dimmed'];
	SidebarPusher._meta = {
	  name: 'SidebarPusher',
	  type: _lib.META.TYPES.MODULE,
	  parent: 'Sidebar'
	};

	process.env.NODE_ENV !== "production" ? SidebarPusher.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Controls whether or not the dim is displayed. */
	  dimmed: _propTypes2.default.bool
	} : void 0;

	exports.default = SidebarPusher;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Advertisement = __webpack_require__(654);

	var _Advertisement2 = _interopRequireDefault(_Advertisement);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Advertisement2.default;

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An ad displays third-party promotional content.
	 */
	function Advertisement(props) {
	  var centered = props.centered,
	      children = props.children,
	      className = props.className,
	      test = props.test,
	      unit = props.unit;


	  var classes = (0, _classnames2.default)('ui', unit, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(test, 'test'), 'ad', className);
	  var rest = (0, _lib.getUnhandledProps)(Advertisement, props);
	  var ElementType = (0, _lib.getElementType)(Advertisement, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes, 'data-text': test }),
	    children
	  );
	}

	Advertisement.handledProps = ['as', 'centered', 'children', 'className', 'test', 'unit'];
	Advertisement._meta = {
	  name: 'Advertisement',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? Advertisement.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Center the advertisement. */
	  centered: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Text to be displayed on the advertisement. */
	  test: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.number, _propTypes2.default.string]),

	  /** Varies the size of the advertisement. */
	  unit: _propTypes2.default.oneOf(['medium rectangle', 'large rectangle', 'vertical rectangle', 'small rectangle', 'mobile banner', 'banner', 'vertical banner', 'top banner', 'half banner', 'button', 'square button', 'small button', 'skyscraper', 'wide skyscraper', 'leaderboard', 'large leaderboard', 'mobile leaderboard', 'billboard', 'panorama', 'netboard', 'half page', 'square', 'small square']).isRequired

	} : void 0;

	exports.default = Advertisement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classCallCheck2 = __webpack_require__(73);

	var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

	var _createClass2 = __webpack_require__(74);

	var _createClass3 = _interopRequireDefault(_createClass2);

	var _possibleConstructorReturn2 = __webpack_require__(78);

	var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

	var _inherits2 = __webpack_require__(112);

	var _inherits3 = _interopRequireDefault(_inherits2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Image = __webpack_require__(523);

	var _Image2 = _interopRequireDefault(_Image);

	var _CardContent = __webpack_require__(656);

	var _CardContent2 = _interopRequireDefault(_CardContent);

	var _CardDescription = __webpack_require__(657);

	var _CardDescription2 = _interopRequireDefault(_CardDescription);

	var _CardGroup = __webpack_require__(660);

	var _CardGroup2 = _interopRequireDefault(_CardGroup);

	var _CardHeader = __webpack_require__(658);

	var _CardHeader2 = _interopRequireDefault(_CardHeader);

	var _CardMeta = __webpack_require__(659);

	var _CardMeta2 = _interopRequireDefault(_CardMeta);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A card displays site content in a manner similar to a playing card.
	 */
	var Card = function (_Component) {
	  (0, _inherits3.default)(Card, _Component);

	  function Card() {
	    var _ref;

	    var _temp, _this, _ret;

	    (0, _classCallCheck3.default)(this, Card);

	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Card.__proto__ || Object.getPrototypeOf(Card)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {
	      var onClick = _this.props.onClick;


	      if (onClick) onClick(e, _this.props);
	    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
	  }

	  (0, _createClass3.default)(Card, [{
	    key: 'render',
	    value: function render() {
	      var _props = this.props,
	          centered = _props.centered,
	          children = _props.children,
	          className = _props.className,
	          color = _props.color,
	          description = _props.description,
	          extra = _props.extra,
	          fluid = _props.fluid,
	          header = _props.header,
	          href = _props.href,
	          image = _props.image,
	          link = _props.link,
	          meta = _props.meta,
	          onClick = _props.onClick,
	          raised = _props.raised;


	      var classes = (0, _classnames2.default)('ui', color, (0, _lib.useKeyOnly)(centered, 'centered'), (0, _lib.useKeyOnly)(fluid, 'fluid'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(raised, 'raised'), 'card', className);
	      var rest = (0, _lib.getUnhandledProps)(Card, this.props);
	      var ElementType = (0, _lib.getElementType)(Card, this.props, function () {
	        if (onClick) return 'a';
	      });

	      if (!(0, _isNil3.default)(children)) {
	        return _react2.default.createElement(
	          ElementType,
	          (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),
	          children
	        );
	      }

	      return _react2.default.createElement(
	        ElementType,
	        (0, _extends3.default)({}, rest, { className: classes, href: href, onClick: this.handleClick }),
	        _Image2.default.create(image),
	        (description || header || meta) && _react2.default.createElement(_CardContent2.default, { description: description, header: header, meta: meta }),
	        extra && _react2.default.createElement(
	          _CardContent2.default,
	          { extra: true },
	          extra
	        )
	      );
	    }
	  }]);
	  return Card;
	}(_react.Component);

	Card._meta = {
	  name: 'Card',
	  type: _lib.META.TYPES.VIEW
	};
	Card.Content = _CardContent2.default;
	Card.Description = _CardDescription2.default;
	Card.Group = _CardGroup2.default;
	Card.Header = _CardHeader2.default;
	Card.Meta = _CardMeta2.default;
	Card.handledProps = ['as', 'centered', 'children', 'className', 'color', 'description', 'extra', 'fluid', 'header', 'href', 'image', 'link', 'meta', 'onClick', 'raised'];
	exports.default = Card;
	process.env.NODE_ENV !== "production" ? Card.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** A Card can center itself inside its container. */
	  centered: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A Card can be formatted to display different colors. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** Shorthand for CardDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for primary content of CardContent. */
	  extra: _lib.customPropTypes.contentShorthand,

	  /** A Card can be formatted to take up the width of its container. */
	  fluid: _propTypes2.default.bool,

	  /** Shorthand for CardHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
	  href: _propTypes2.default.string,

	  /** A card can contain an Image component. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** A card can be formatted to link to other content. */
	  link: _propTypes2.default.bool,

	  /** Shorthand for CardMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /**
	   * Called on click. When passed, the component renders as an `a`
	   * tag by default instead of a `div`.
	   *
	   * @param {SyntheticEvent} event - React's original SyntheticEvent.
	   * @param {object} data - All props.
	   */
	  onClick: _propTypes2.default.func,

	  /** A Card can be formatted to raise above the page. */
	  raised: _propTypes2.default.bool
	} : void 0;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _CardDescription = __webpack_require__(657);

	var _CardDescription2 = _interopRequireDefault(_CardDescription);

	var _CardHeader = __webpack_require__(658);

	var _CardHeader2 = _interopRequireDefault(_CardHeader);

	var _CardMeta = __webpack_require__(659);

	var _CardMeta2 = _interopRequireDefault(_CardMeta);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A card can contain blocks of content or extra content meant to be formatted separately from the main content.
	 */
	function CardContent(props) {
	  var children = props.children,
	      className = props.className,
	      description = props.description,
	      extra = props.extra,
	      header = props.header,
	      meta = props.meta;


	  var classes = (0, _classnames2.default)(className, (0, _lib.useKeyOnly)(extra, 'extra'), 'content');
	  var rest = (0, _lib.getUnhandledProps)(CardContent, props);
	  var ElementType = (0, _lib.getElementType)(CardContent, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createShorthand)(_CardHeader2.default, function (val) {
	      return { content: val };
	    }, header),
	    (0, _lib.createShorthand)(_CardMeta2.default, function (val) {
	      return { content: val };
	    }, meta),
	    (0, _lib.createShorthand)(_CardDescription2.default, function (val) {
	      return { content: val };
	    }, description)
	  );
	}

	CardContent.handledProps = ['as', 'children', 'className', 'description', 'extra', 'header', 'meta'];
	CardContent._meta = {
	  name: 'CardContent',
	  parent: 'Card',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CardContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for CardDescription. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** A card can contain extra content meant to be formatted separately from the main content. */
	  extra: _propTypes2.default.bool,

	  /** Shorthand for CardHeader. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for CardMeta. */
	  meta: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = CardContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A card can contain a description with one or more paragraphs.
	 */
	function CardDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)(className, 'description');
	  var rest = (0, _lib.getUnhandledProps)(CardDescription, props);
	  var ElementType = (0, _lib.getElementType)(CardDescription, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	CardDescription.handledProps = ['as', 'children', 'className', 'content'];
	CardDescription._meta = {
	  name: 'CardDescription',
	  parent: 'Card',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CardDescription.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = CardDescription;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A card can contain a header.
	 */
	function CardHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)(className, 'header');
	  var rest = (0, _lib.getUnhandledProps)(CardHeader, props);
	  var ElementType = (0, _lib.getElementType)(CardHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	CardHeader.handledProps = ['as', 'children', 'className', 'content'];
	CardHeader._meta = {
	  name: 'CardHeader',
	  parent: 'Card',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CardHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = CardHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A card can contain content metadata.
	 */
	function CardMeta(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)(className, 'meta');
	  var rest = (0, _lib.getUnhandledProps)(CardMeta, props);
	  var ElementType = (0, _lib.getElementType)(CardMeta, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	CardMeta.handledProps = ['as', 'children', 'className', 'content'];
	CardMeta._meta = {
	  name: 'CardMeta',
	  parent: 'Card',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CardMeta.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = CardMeta;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Card = __webpack_require__(655);

	var _Card2 = _interopRequireDefault(_Card);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A group of cards.
	 */
	function CardGroup(props) {
	  var children = props.children,
	      className = props.className,
	      doubling = props.doubling,
	      items = props.items,
	      itemsPerRow = props.itemsPerRow,
	      stackable = props.stackable;


	  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(doubling, 'doubling'), (0, _lib.useKeyOnly)(stackable, 'stackable'), (0, _lib.useWidthProp)(itemsPerRow), className, 'cards');
	  var rest = (0, _lib.getUnhandledProps)(CardGroup, props);
	  var ElementType = (0, _lib.getElementType)(CardGroup, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  var content = (0, _map3.default)(items, function (item) {
	    var key = item.key || [item.header, item.description].join('-');
	    return _react2.default.createElement(_Card2.default, (0, _extends3.default)({ key: key }, item));
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    content
	  );
	}

	CardGroup.handledProps = ['as', 'children', 'className', 'doubling', 'items', 'itemsPerRow', 'stackable'];
	CardGroup._meta = {
	  name: 'CardGroup',
	  parent: 'Card',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CardGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A group of cards can double its column width for mobile. */
	  doubling: _propTypes2.default.bool,

	  /** Shorthand array of props for Card. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A group of cards can set how many cards should exist in a row. */
	  itemsPerRow: _propTypes2.default.oneOf(_lib.SUI.WIDTHS),

	  /** A group of cards can automatically stack rows to a single columns on mobile devices. */
	  stackable: _propTypes2.default.bool
	} : void 0;

	exports.default = CardGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Comment = __webpack_require__(662);

	var _Comment2 = _interopRequireDefault(_Comment);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Comment2.default;

/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _CommentAction = __webpack_require__(663);

	var _CommentAction2 = _interopRequireDefault(_CommentAction);

	var _CommentActions = __webpack_require__(664);

	var _CommentActions2 = _interopRequireDefault(_CommentActions);

	var _CommentAuthor = __webpack_require__(665);

	var _CommentAuthor2 = _interopRequireDefault(_CommentAuthor);

	var _CommentAvatar = __webpack_require__(666);

	var _CommentAvatar2 = _interopRequireDefault(_CommentAvatar);

	var _CommentContent = __webpack_require__(667);

	var _CommentContent2 = _interopRequireDefault(_CommentContent);

	var _CommentGroup = __webpack_require__(668);

	var _CommentGroup2 = _interopRequireDefault(_CommentGroup);

	var _CommentMetadata = __webpack_require__(669);

	var _CommentMetadata2 = _interopRequireDefault(_CommentMetadata);

	var _CommentText = __webpack_require__(670);

	var _CommentText2 = _interopRequireDefault(_CommentText);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment displays user feedback to site content.
	 */
	function Comment(props) {
	  var className = props.className,
	      children = props.children,
	      collapsed = props.collapsed;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(collapsed, 'collapsed'), 'comment', className);
	  var rest = (0, _lib.getUnhandledProps)(Comment, props);
	  var ElementType = (0, _lib.getElementType)(Comment, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	Comment.handledProps = ['as', 'children', 'className', 'collapsed'];
	Comment._meta = {
	  name: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? Comment.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Comment can be collapsed, or hidden from view. */
	  collapsed: _propTypes2.default.bool
	} : void 0;

	Comment.Author = _CommentAuthor2.default;
	Comment.Action = _CommentAction2.default;
	Comment.Actions = _CommentActions2.default;
	Comment.Avatar = _CommentAvatar2.default;
	Comment.Content = _CommentContent2.default;
	Comment.Group = _CommentGroup2.default;
	Comment.Metadata = _CommentMetadata2.default;
	Comment.Text = _CommentText2.default;

	exports.default = Comment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain an action.
	 */
	function CommentAction(props) {
	  var active = props.active,
	      className = props.className,
	      children = props.children;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(active, 'active'), className);
	  var rest = (0, _lib.getUnhandledProps)(CommentAction, props);
	  var ElementType = (0, _lib.getElementType)(CommentAction, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentAction.handledProps = ['active', 'as', 'children', 'className'];
	CommentAction._meta = {
	  name: 'CommentAction',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	CommentAction.defaultProps = {
	  as: 'a'
	};

	process.env.NODE_ENV !== "production" ? CommentAction.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Style as the currently active action. */
	  active: _propTypes2.default.bool,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = CommentAction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain an list of actions a user may perform related to this comment.
	 */
	function CommentActions(props) {
	  var className = props.className,
	      children = props.children;

	  var classes = (0, _classnames2.default)('actions', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentActions, props);
	  var ElementType = (0, _lib.getElementType)(CommentActions, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentActions.handledProps = ['as', 'children', 'className'];
	CommentActions._meta = {
	  name: 'CommentActions',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentActions.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = CommentActions;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain an author.
	 */
	function CommentAuthor(props) {
	  var className = props.className,
	      children = props.children;

	  var classes = (0, _classnames2.default)('author', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentAuthor, props);
	  var ElementType = (0, _lib.getElementType)(CommentAuthor, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentAuthor.handledProps = ['as', 'children', 'className'];
	CommentAuthor._meta = {
	  name: 'CommentAuthor',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentAuthor.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = CommentAuthor;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain an image or avatar.
	 */
	function CommentAvatar(props) {
	  var className = props.className,
	      src = props.src;

	  var classes = (0, _classnames2.default)('avatar', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentAvatar, props);
	  var ElementType = (0, _lib.getElementType)(CommentAvatar, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createHTMLImage)(src)
	  );
	}

	CommentAvatar.handledProps = ['as', 'className', 'src'];
	CommentAvatar._meta = {
	  name: 'CommentAvatar',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentAvatar.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Specifies the URL of the image. */
	  src: _propTypes2.default.string
	} : void 0;

	exports.default = CommentAvatar;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain content.
	 */
	function CommentContent(props) {
	  var className = props.className,
	      children = props.children;

	  var classes = (0, _classnames2.default)(className, 'content');
	  var rest = (0, _lib.getUnhandledProps)(CommentContent, props);
	  var ElementType = (0, _lib.getElementType)(CommentContent, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentContent.handledProps = ['as', 'children', 'className'];
	CommentContent._meta = {
	  name: 'CommentContent',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = CommentContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Comments can be grouped.
	 */
	function CommentGroup(props) {
	  var className = props.className,
	      children = props.children,
	      collapsed = props.collapsed,
	      minimal = props.minimal,
	      size = props.size,
	      threaded = props.threaded;


	  var classes = (0, _classnames2.default)('ui', size, (0, _lib.useKeyOnly)(collapsed, 'collapsed'), (0, _lib.useKeyOnly)(minimal, 'minimal'), (0, _lib.useKeyOnly)(threaded, 'threaded'), 'comments', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentGroup, props);
	  var ElementType = (0, _lib.getElementType)(CommentGroup, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentGroup.handledProps = ['as', 'children', 'className', 'collapsed', 'minimal', 'size', 'threaded'];
	CommentGroup._meta = {
	  name: 'CommentGroup',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Comments can be collapsed, or hidden from view. */
	  collapsed: _propTypes2.default.bool,

	  /** Comments can hide extra information unless a user shows intent to interact with a comment. */
	  minimal: _propTypes2.default.bool,

	  /** Comments can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'medium')),

	  /** A comment list can be threaded to showing the relationship between conversations. */
	  threaded: _propTypes2.default.bool
	} : void 0;

	exports.default = CommentGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.
	 */
	function CommentMetadata(props) {
	  var className = props.className,
	      children = props.children;

	  var classes = (0, _classnames2.default)('metadata', className);
	  var rest = (0, _lib.getUnhandledProps)(CommentMetadata, props);
	  var ElementType = (0, _lib.getElementType)(CommentMetadata, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentMetadata.handledProps = ['as', 'children', 'className'];
	CommentMetadata._meta = {
	  name: 'CommentMetadata',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentMetadata.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = CommentMetadata;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A comment can contain text.
	 */
	function CommentText(props) {
	  var className = props.className,
	      children = props.children;

	  var classes = (0, _classnames2.default)(className, 'text');
	  var rest = (0, _lib.getUnhandledProps)(CommentText, props);
	  var ElementType = (0, _lib.getElementType)(CommentText, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );
	}

	CommentText.handledProps = ['as', 'children', 'className'];
	CommentText._meta = {
	  name: 'CommentText',
	  parent: 'Comment',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? CommentText.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string
	} : void 0;

	exports.default = CommentText;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Feed = __webpack_require__(672);

	var _Feed2 = _interopRequireDefault(_Feed);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Feed2.default;

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _objectWithoutProperties2 = __webpack_require__(642);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _FeedContent = __webpack_require__(673);

	var _FeedContent2 = _interopRequireDefault(_FeedContent);

	var _FeedDate = __webpack_require__(674);

	var _FeedDate2 = _interopRequireDefault(_FeedDate);

	var _FeedEvent = __webpack_require__(680);

	var _FeedEvent2 = _interopRequireDefault(_FeedEvent);

	var _FeedExtra = __webpack_require__(675);

	var _FeedExtra2 = _interopRequireDefault(_FeedExtra);

	var _FeedLabel = __webpack_require__(681);

	var _FeedLabel2 = _interopRequireDefault(_FeedLabel);

	var _FeedLike = __webpack_require__(677);

	var _FeedLike2 = _interopRequireDefault(_FeedLike);

	var _FeedMeta = __webpack_require__(676);

	var _FeedMeta2 = _interopRequireDefault(_FeedMeta);

	var _FeedSummary = __webpack_require__(678);

	var _FeedSummary2 = _interopRequireDefault(_FeedSummary);

	var _FeedUser = __webpack_require__(679);

	var _FeedUser2 = _interopRequireDefault(_FeedUser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed presents user activity chronologically.
	 */
	function Feed(props) {
	  var children = props.children,
	      className = props.className,
	      events = props.events,
	      size = props.size;


	  var classes = (0, _classnames2.default)('ui', size, 'feed', className);
	  var rest = (0, _lib.getUnhandledProps)(Feed, props);
	  var ElementType = (0, _lib.getElementType)(Feed, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  var eventElements = (0, _map3.default)(events, function (eventProps) {
	    var childKey = eventProps.childKey,
	        date = eventProps.date,
	        meta = eventProps.meta,
	        summary = eventProps.summary,
	        eventData = (0, _objectWithoutProperties3.default)(eventProps, ['childKey', 'date', 'meta', 'summary']);

	    var finalKey = childKey || [date, meta, summary].join('-');

	    return _react2.default.createElement(_FeedEvent2.default, (0, _extends3.default)({
	      date: date,
	      key: finalKey,
	      meta: meta,
	      summary: summary
	    }, eventData));
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    eventElements
	  );
	}

	Feed.handledProps = ['as', 'children', 'className', 'events', 'size'];
	Feed._meta = {
	  name: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? Feed.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand array of props for FeedEvent. */
	  events: _lib.customPropTypes.collectionShorthand,

	  /** A feed can have different sizes. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))
	} : void 0;

	Feed.Content = _FeedContent2.default;
	Feed.Date = _FeedDate2.default;
	Feed.Event = _FeedEvent2.default;
	Feed.Extra = _FeedExtra2.default;
	Feed.Label = _FeedLabel2.default;
	Feed.Like = _FeedLike2.default;
	Feed.Meta = _FeedMeta2.default;
	Feed.Summary = _FeedSummary2.default;
	Feed.User = _FeedUser2.default;

	exports.default = Feed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _FeedDate = __webpack_require__(674);

	var _FeedDate2 = _interopRequireDefault(_FeedDate);

	var _FeedExtra = __webpack_require__(675);

	var _FeedExtra2 = _interopRequireDefault(_FeedExtra);

	var _FeedMeta = __webpack_require__(676);

	var _FeedMeta2 = _interopRequireDefault(_FeedMeta);

	var _FeedSummary = __webpack_require__(678);

	var _FeedSummary2 = _interopRequireDefault(_FeedSummary);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function FeedContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      extraImages = props.extraImages,
	      extraText = props.extraText,
	      date = props.date,
	      meta = props.meta,
	      summary = props.summary;


	  var classes = (0, _classnames2.default)('content', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedContent, props);
	  var ElementType = (0, _lib.getElementType)(FeedContent, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createShorthand)(_FeedDate2.default, function (val) {
	      return { content: val };
	    }, date),
	    (0, _lib.createShorthand)(_FeedSummary2.default, function (val) {
	      return { content: val };
	    }, summary),
	    content,
	    (0, _lib.createShorthand)(_FeedExtra2.default, function (val) {
	      return { text: true, content: val };
	    }, extraText),
	    (0, _lib.createShorthand)(_FeedExtra2.default, function (val) {
	      return { images: val };
	    }, extraImages),
	    (0, _lib.createShorthand)(_FeedMeta2.default, function (val) {
	      return { content: val };
	    }, meta)
	  );
	}

	FeedContent.handledProps = ['as', 'children', 'className', 'content', 'date', 'extraImages', 'extraText', 'meta', 'summary'];
	FeedContent._meta = {
	  name: 'FeedContent',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An event can contain a date. */
	  date: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedExtra with images. */
	  extraImages: _FeedExtra2.default.propTypes.images,

	  /** Shorthand for FeedExtra with text. */
	  extraText: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedSummary. */
	  summary: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = FeedContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An event or an event summary can contain a date.
	 */
	function FeedDate(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('date', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedDate, props);
	  var ElementType = (0, _lib.getElementType)(FeedDate, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	FeedDate.handledProps = ['as', 'children', 'className', 'content'];
	FeedDate._meta = {
	  name: 'FeedDate',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedDate.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = FeedDate;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed can contain an extra content.
	 */
	function FeedExtra(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      images = props.images,
	      text = props.text;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(images, 'images'), (0, _lib.useKeyOnly)(content || text, 'text'), 'extra', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedExtra, props);
	  var ElementType = (0, _lib.getElementType)(FeedExtra, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  // TODO need a "collection factory" to handle creating multiple image elements and their keys
	  var imageElements = (0, _map3.default)(images, function (image, index) {
	    var key = [index, image].join('-');
	    return (0, _lib.createHTMLImage)(image, { key: key });
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    content,
	    imageElements
	  );
	}

	FeedExtra.handledProps = ['as', 'children', 'className', 'content', 'images', 'text'];
	FeedExtra._meta = {
	  name: 'FeedExtra',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedExtra.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An event can contain additional information like a set of images. */
	  images: _lib.customPropTypes.every([_lib.customPropTypes.disallow(['text']), _propTypes2.default.oneOfType([_propTypes2.default.bool, _lib.customPropTypes.collectionShorthand])]),

	  /** An event can contain additional text information. */
	  text: _propTypes2.default.bool
	} : void 0;

	exports.default = FeedExtra;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _FeedLike = __webpack_require__(677);

	var _FeedLike2 = _interopRequireDefault(_FeedLike);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed can contain a meta.
	 */
	function FeedMeta(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      like = props.like;


	  var classes = (0, _classnames2.default)('meta', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedMeta, props);
	  var ElementType = (0, _lib.getElementType)(FeedMeta, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createShorthand)(_FeedLike2.default, function (val) {
	      return { content: val };
	    }, like),
	    content
	  );
	}

	FeedMeta.handledProps = ['as', 'children', 'className', 'content', 'like'];
	FeedMeta._meta = {
	  name: 'FeedMeta',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedMeta.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for FeedLike. */
	  like: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = FeedMeta;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 677 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed can contain a like element.
	 */
	function FeedLike(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon;


	  var classes = (0, _classnames2.default)('like', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedLike, props);
	  var ElementType = (0, _lib.getElementType)(FeedLike, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _Icon2.default.create(icon),
	    content
	  );
	}

	FeedLike.handledProps = ['as', 'children', 'className', 'content', 'icon'];
	FeedLike._meta = {
	  name: 'FeedLike',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	FeedLike.defaultProps = {
	  as: 'a'
	};

	process.env.NODE_ENV !== "production" ? FeedLike.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for icon. Mutually exclusive with children. */
	  icon: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = FeedLike;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 678 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _FeedDate = __webpack_require__(674);

	var _FeedDate2 = _interopRequireDefault(_FeedDate);

	var _FeedUser = __webpack_require__(679);

	var _FeedUser2 = _interopRequireDefault(_FeedUser);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed can contain a summary.
	 */
	function FeedSummary(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      date = props.date,
	      user = props.user;


	  var classes = (0, _classnames2.default)('summary', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedSummary, props);
	  var ElementType = (0, _lib.getElementType)(FeedSummary, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createShorthand)(_FeedUser2.default, function (val) {
	      return { content: val };
	    }, user),
	    content,
	    (0, _lib.createShorthand)(_FeedDate2.default, function (val) {
	      return { content: val };
	    }, date)
	  );
	}

	FeedSummary.handledProps = ['as', 'children', 'className', 'content', 'date', 'user'];
	FeedSummary._meta = {
	  name: 'FeedSummary',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedSummary.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for FeedDate. */
	  date: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedUser. */
	  user: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = FeedSummary;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed can contain a user element.
	 */
	function FeedUser(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('user', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedUser, props);
	  var ElementType = (0, _lib.getElementType)(FeedUser, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	FeedUser.handledProps = ['as', 'children', 'className', 'content'];
	FeedUser._meta = {
	  name: 'FeedUser',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedUser.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	FeedUser.defaultProps = {
	  as: 'a'
	};

	exports.default = FeedUser;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _FeedContent = __webpack_require__(673);

	var _FeedContent2 = _interopRequireDefault(_FeedContent);

	var _FeedLabel = __webpack_require__(681);

	var _FeedLabel2 = _interopRequireDefault(_FeedLabel);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A feed contains an event.
	 */
	function FeedEvent(props) {
	  var content = props.content,
	      children = props.children,
	      className = props.className,
	      date = props.date,
	      extraImages = props.extraImages,
	      extraText = props.extraText,
	      image = props.image,
	      icon = props.icon,
	      meta = props.meta,
	      summary = props.summary;


	  var classes = (0, _classnames2.default)('event', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedEvent, props);
	  var ElementType = (0, _lib.getElementType)(FeedEvent, props);

	  var hasContentProp = content || date || extraImages || extraText || meta || summary;
	  var contentProps = { content: content, date: date, extraImages: extraImages, extraText: extraText, meta: meta, summary: summary };

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _lib.createShorthand)(_FeedLabel2.default, function (val) {
	      return { icon: val };
	    }, icon),
	    (0, _lib.createShorthand)(_FeedLabel2.default, function (val) {
	      return { image: val };
	    }, image),
	    hasContentProp && _react2.default.createElement(_FeedContent2.default, contentProps),
	    children
	  );
	}

	FeedEvent.handledProps = ['as', 'children', 'className', 'content', 'date', 'extraImages', 'extraText', 'icon', 'image', 'meta', 'summary'];
	FeedEvent._meta = {
	  name: 'FeedEvent',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedEvent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for FeedContent. */
	  content: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedDate. */
	  date: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedExtra with images. */
	  extraImages: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedExtra with content. */
	  extraText: _lib.customPropTypes.itemShorthand,

	  /** An event can contain icon label. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** An event can contain image label. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedMeta. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for FeedSummary. */
	  summary: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = FeedEvent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Icon = __webpack_require__(487);

	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An event can contain an image or icon label.
	 */
	function FeedLabel(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      icon = props.icon,
	      image = props.image;


	  var classes = (0, _classnames2.default)('label', className);
	  var rest = (0, _lib.getUnhandledProps)(FeedLabel, props);
	  var ElementType = (0, _lib.getElementType)(FeedLabel, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    content,
	    _Icon2.default.create(icon),
	    (0, _lib.createHTMLImage)(image)
	  );
	}

	FeedLabel.handledProps = ['as', 'children', 'className', 'content', 'icon', 'image'];
	FeedLabel._meta = {
	  name: 'FeedLabel',
	  parent: 'Feed',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? FeedLabel.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** An event can contain icon label. */
	  icon: _lib.customPropTypes.itemShorthand,

	  /** An event can contain image label. */
	  image: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = FeedLabel;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Item = __webpack_require__(683);

	var _Item2 = _interopRequireDefault(_Item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Item2.default;

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _ItemContent = __webpack_require__(684);

	var _ItemContent2 = _interopRequireDefault(_ItemContent);

	var _ItemDescription = __webpack_require__(686);

	var _ItemDescription2 = _interopRequireDefault(_ItemDescription);

	var _ItemExtra = __webpack_require__(687);

	var _ItemExtra2 = _interopRequireDefault(_ItemExtra);

	var _ItemGroup = __webpack_require__(689);

	var _ItemGroup2 = _interopRequireDefault(_ItemGroup);

	var _ItemHeader = __webpack_require__(685);

	var _ItemHeader2 = _interopRequireDefault(_ItemHeader);

	var _ItemImage = __webpack_require__(690);

	var _ItemImage2 = _interopRequireDefault(_ItemImage);

	var _ItemMeta = __webpack_require__(688);

	var _ItemMeta2 = _interopRequireDefault(_ItemMeta);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item view presents large collections of site content for display.
	 */
	function Item(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      extra = props.extra,
	      header = props.header,
	      image = props.image,
	      meta = props.meta;


	  var classes = (0, _classnames2.default)('item', className);
	  var rest = (0, _lib.getUnhandledProps)(Item, props);
	  var ElementType = (0, _lib.getElementType)(Item, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _ItemImage2.default.create(image),
	    _react2.default.createElement(_ItemContent2.default, {
	      content: content,
	      description: description,
	      extra: extra,
	      header: header,
	      meta: meta
	    })
	  );
	}

	Item.handledProps = ['as', 'children', 'className', 'content', 'description', 'extra', 'header', 'image', 'meta'];
	Item._meta = {
	  name: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	Item.Content = _ItemContent2.default;
	Item.Description = _ItemDescription2.default;
	Item.Extra = _ItemExtra2.default;
	Item.Group = _ItemGroup2.default;
	Item.Header = _ItemHeader2.default;
	Item.Image = _ItemImage2.default;
	Item.Meta = _ItemMeta2.default;

	process.env.NODE_ENV !== "production" ? Item.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for ItemContent component. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for ItemDescription component. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemExtra component. */
	  extra: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemHeader component. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemImage component. */
	  image: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemMeta component. */
	  meta: _lib.customPropTypes.itemShorthand
	} : void 0;

	exports.default = Item;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 684 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _ItemHeader = __webpack_require__(685);

	var _ItemHeader2 = _interopRequireDefault(_ItemHeader);

	var _ItemDescription = __webpack_require__(686);

	var _ItemDescription2 = _interopRequireDefault(_ItemDescription);

	var _ItemExtra = __webpack_require__(687);

	var _ItemExtra2 = _interopRequireDefault(_ItemExtra);

	var _ItemMeta = __webpack_require__(688);

	var _ItemMeta2 = _interopRequireDefault(_ItemMeta);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item can contain content.
	 */
	function ItemContent(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content,
	      description = props.description,
	      extra = props.extra,
	      header = props.header,
	      meta = props.meta,
	      verticalAlign = props.verticalAlign;


	  var classes = (0, _classnames2.default)((0, _lib.useVerticalAlignProp)(verticalAlign), 'content', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemContent, props);
	  var ElementType = (0, _lib.getElementType)(ItemContent, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _ItemHeader2.default.create(header),
	    _ItemMeta2.default.create(meta),
	    _ItemDescription2.default.create(description),
	    _ItemExtra2.default.create(extra),
	    content
	  );
	}

	ItemContent.handledProps = ['as', 'children', 'className', 'content', 'description', 'extra', 'header', 'meta', 'verticalAlign'];
	ItemContent._meta = {
	  name: 'ItemContent',
	  parent: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? ItemContent.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand,

	  /** Shorthand for ItemDescription component. */
	  description: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemExtra component. */
	  extra: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemHeader component. */
	  header: _lib.customPropTypes.itemShorthand,

	  /** Shorthand for ItemMeta component. */
	  meta: _lib.customPropTypes.itemShorthand,

	  /** Content can specify its vertical alignment. */
	  verticalAlign: _propTypes2.default.oneOf(_lib.SUI.VERTICAL_ALIGNMENTS)
	} : void 0;

	exports.default = ItemContent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 685 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item can contain a header.
	 */
	function ItemHeader(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('header', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemHeader, props);
	  var ElementType = (0, _lib.getElementType)(ItemHeader, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ItemHeader.handledProps = ['as', 'children', 'className', 'content'];
	ItemHeader._meta = {
	  name: 'ItemHeader',
	  parent: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? ItemHeader.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ItemHeader.create = (0, _lib.createShorthandFactory)(ItemHeader, function (content) {
	  return { content: content };
	});

	exports.default = ItemHeader;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 686 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item can contain a description with a single or multiple paragraphs.
	 */
	function ItemDescription(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('description', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemDescription, props);
	  var ElementType = (0, _lib.getElementType)(ItemDescription, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ItemDescription.handledProps = ['as', 'children', 'className', 'content'];
	ItemDescription._meta = {
	  name: 'ItemDescription',
	  parent: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? ItemDescription.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ItemDescription.create = (0, _lib.createShorthandFactory)(ItemDescription, function (content) {
	  return { content: content };
	});

	exports.default = ItemDescription;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 687 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item can contain extra content meant to be formatted separately from the main content.
	 */
	function ItemExtra(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('extra', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemExtra, props);
	  var ElementType = (0, _lib.getElementType)(ItemExtra, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ItemExtra.handledProps = ['as', 'children', 'className', 'content'];
	ItemExtra._meta = {
	  name: 'ItemExtra',
	  parent: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? ItemExtra.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ItemExtra.create = (0, _lib.createShorthandFactory)(ItemExtra, function (content) {
	  return { content: content };
	});

	exports.default = ItemExtra;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 688 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item can contain content metadata.
	 */
	function ItemMeta(props) {
	  var children = props.children,
	      className = props.className,
	      content = props.content;

	  var classes = (0, _classnames2.default)('meta', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemMeta, props);
	  var ElementType = (0, _lib.getElementType)(ItemMeta, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? content : children
	  );
	}

	ItemMeta.handledProps = ['as', 'children', 'className', 'content'];
	ItemMeta._meta = {
	  name: 'ItemMeta',
	  parent: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? ItemMeta.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  content: _lib.customPropTypes.contentShorthand
	} : void 0;

	ItemMeta.create = (0, _lib.createShorthandFactory)(ItemMeta, function (content) {
	  return { content: content };
	});

	exports.default = ItemMeta;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 689 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _objectWithoutProperties2 = __webpack_require__(642);

	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Item = __webpack_require__(683);

	var _Item2 = _interopRequireDefault(_Item);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A group of items.
	 */
	function ItemGroup(props) {
	  var children = props.children,
	      className = props.className,
	      divided = props.divided,
	      items = props.items,
	      link = props.link,
	      relaxed = props.relaxed,
	      unstackable = props.unstackable;


	  var classes = (0, _classnames2.default)('ui', (0, _lib.useKeyOnly)(divided, 'divided'), (0, _lib.useKeyOnly)(link, 'link'), (0, _lib.useKeyOnly)(unstackable, 'unstackable'), (0, _lib.useKeyOrValueAndKey)(relaxed, 'relaxed'), 'items', className);
	  var rest = (0, _lib.getUnhandledProps)(ItemGroup, props);
	  var ElementType = (0, _lib.getElementType)(ItemGroup, props);

	  if (!(0, _isNil3.default)(children)) {
	    return _react2.default.createElement(
	      ElementType,
	      (0, _extends3.default)({}, rest, { className: classes }),
	      children
	    );
	  }

	  var itemsJSX = (0, _map3.default)(items, function (item) {
	    var childKey = item.childKey,
	        itemProps = (0, _objectWithoutProperties3.default)(item, ['childKey']);

	    var finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');

	    return _react2.default.createElement(_Item2.default, (0, _extends3.default)({}, itemProps, { key: finalKey }));
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    itemsJSX
	  );
	}

	ItemGroup.handledProps = ['as', 'children', 'className', 'divided', 'items', 'link', 'relaxed', 'unstackable'];
	ItemGroup._meta = {
	  name: 'ItemGroup',
	  type: _lib.META.TYPES.VIEW,
	  parent: 'Item'
	};

	process.env.NODE_ENV !== "production" ? ItemGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Items can be divided to better distinguish between grouped content. */
	  divided: _propTypes2.default.bool,

	  /** Shorthand array of props for Item. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** An item can be formatted so that the entire contents link to another page. */
	  link: _propTypes2.default.bool,

	  /** A group of items can relax its padding to provide more negative space. */
	  relaxed: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.oneOf(['very'])]),

	  /** Prevent items from stacking on mobile. */
	  unstackable: _propTypes2.default.bool
	} : void 0;

	exports.default = ItemGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 690 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Image = __webpack_require__(523);

	var _Image2 = _interopRequireDefault(_Image);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An item can contain an image.
	 */
	function ItemImage(props) {
	  var size = props.size;

	  var rest = (0, _lib.getUnhandledProps)(ItemImage, props);

	  return _react2.default.createElement(_Image2.default, (0, _extends3.default)({}, rest, { size: size, ui: !!size, wrapped: true }));
	}

	ItemImage.handledProps = ['size'];
	ItemImage._meta = {
	  name: 'ItemImage',
	  parent: 'Item',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? ItemImage.propTypes = {
	  /** An image may appear at different sizes. */
	  size: _Image2.default.propTypes.size
	} : void 0;

	ItemImage.create = (0, _lib.createShorthandFactory)(ItemImage, function (src) {
	  return { src: src };
	});

	exports.default = ItemImage;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 691 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = undefined;

	var _Statistic = __webpack_require__(692);

	var _Statistic2 = _interopRequireDefault(_Statistic);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Statistic2.default;

/***/ }),
/* 692 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _StatisticGroup = __webpack_require__(693);

	var _StatisticGroup2 = _interopRequireDefault(_StatisticGroup);

	var _StatisticLabel = __webpack_require__(694);

	var _StatisticLabel2 = _interopRequireDefault(_StatisticLabel);

	var _StatisticValue = __webpack_require__(695);

	var _StatisticValue2 = _interopRequireDefault(_StatisticValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A statistic emphasizes the current value of an attribute.
	 */
	function Statistic(props) {
	  var children = props.children,
	      className = props.className,
	      color = props.color,
	      floated = props.floated,
	      horizontal = props.horizontal,
	      inverted = props.inverted,
	      label = props.label,
	      size = props.size,
	      text = props.text,
	      value = props.value;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useValueAndKey)(floated, 'floated'), (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), 'statistic', className);
	  var rest = (0, _lib.getUnhandledProps)(Statistic, props);
	  var ElementType = (0, _lib.getElementType)(Statistic, props);

	  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    _react2.default.createElement(_StatisticValue2.default, { text: text, value: value }),
	    _react2.default.createElement(_StatisticLabel2.default, { label: label })
	  );
	}

	Statistic.handledProps = ['as', 'children', 'className', 'color', 'floated', 'horizontal', 'inverted', 'label', 'size', 'text', 'value'];
	Statistic._meta = {
	  name: 'Statistic',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? Statistic.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A statistic can be formatted to be different colors. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A statistic can sit to the left or right of other content. */
	  floated: _propTypes2.default.oneOf(_lib.SUI.FLOATS),

	  /** A statistic can present its measurement horizontally. */
	  horizontal: _propTypes2.default.bool,

	  /** A statistic can be formatted to fit on a dark background. */
	  inverted: _propTypes2.default.bool,

	  /** Label content of the Statistic. */
	  label: _lib.customPropTypes.contentShorthand,

	  /** A statistic can vary in size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium')),

	  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */
	  text: _propTypes2.default.bool,

	  /** Value content of the Statistic. */
	  value: _lib.customPropTypes.contentShorthand
	} : void 0;

	Statistic.Group = _StatisticGroup2.default;
	Statistic.Label = _StatisticLabel2.default;
	Statistic.Value = _StatisticValue2.default;

	exports.default = Statistic;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 693 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _without2 = __webpack_require__(467);

	var _without3 = _interopRequireDefault(_without2);

	var _map2 = __webpack_require__(450);

	var _map3 = _interopRequireDefault(_map2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	var _Statistic = __webpack_require__(692);

	var _Statistic2 = _interopRequireDefault(_Statistic);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A group of statistics.
	 */
	function StatisticGroup(props) {
	  var children = props.children,
	      className = props.className,
	      color = props.color,
	      horizontal = props.horizontal,
	      inverted = props.inverted,
	      items = props.items,
	      size = props.size,
	      widths = props.widths;


	  var classes = (0, _classnames2.default)('ui', color, size, (0, _lib.useKeyOnly)(horizontal, 'horizontal'), (0, _lib.useKeyOnly)(inverted, 'inverted'), (0, _lib.useWidthProp)(widths), 'statistics', className);
	  var rest = (0, _lib.getUnhandledProps)(StatisticGroup, props);
	  var ElementType = (0, _lib.getElementType)(StatisticGroup, props);

	  if (!(0, _isNil3.default)(children)) return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    children
	  );

	  var itemsJSX = (0, _map3.default)(items, function (item) {
	    return _react2.default.createElement(_Statistic2.default, (0, _extends3.default)({ key: item.childKey || [item.label, item.title].join('-') }, item));
	  });

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    itemsJSX
	  );
	}

	StatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'horizontal', 'inverted', 'items', 'size', 'widths'];
	StatisticGroup._meta = {
	  name: 'StatisticGroup',
	  type: _lib.META.TYPES.VIEW,
	  parent: 'Statistic'
	};

	process.env.NODE_ENV !== "production" ? StatisticGroup.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** A statistic group can be formatted to be different colors. */
	  color: _propTypes2.default.oneOf(_lib.SUI.COLORS),

	  /** A statistic group can present its measurement horizontally. */
	  horizontal: _propTypes2.default.bool,

	  /** A statistic group can be formatted to fit on a dark background. */
	  inverted: _propTypes2.default.bool,

	  /** Array of props for Statistic. */
	  items: _lib.customPropTypes.collectionShorthand,

	  /** A statistic group can vary in size. */
	  size: _propTypes2.default.oneOf((0, _without3.default)(_lib.SUI.SIZES, 'big', 'massive', 'medium')),

	  /** A statistic group can have its items divided evenly. */
	  widths: _propTypes2.default.oneOf(_lib.SUI.WIDTHS)
	} : void 0;

	exports.default = StatisticGroup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 694 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A statistic can contain a label to help provide context for the presented value.
	 */
	function StatisticLabel(props) {
	  var children = props.children,
	      className = props.className,
	      label = props.label;

	  var classes = (0, _classnames2.default)('label', className);
	  var rest = (0, _lib.getUnhandledProps)(StatisticLabel, props);
	  var ElementType = (0, _lib.getElementType)(StatisticLabel, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? label : children
	  );
	}

	StatisticLabel.handledProps = ['as', 'children', 'className', 'label'];
	StatisticLabel._meta = {
	  name: 'StatisticLabel',
	  parent: 'Statistic',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? StatisticLabel.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Shorthand for primary content. */
	  label: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = StatisticLabel;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 695 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends2 = __webpack_require__(34);

	var _extends3 = _interopRequireDefault(_extends2);

	var _isNil2 = __webpack_require__(306);

	var _isNil3 = _interopRequireDefault(_isNil2);

	var _classnames = __webpack_require__(307);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _propTypes = __webpack_require__(192);

	var _propTypes2 = _interopRequireDefault(_propTypes);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _lib = __webpack_require__(197);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A statistic can contain a numeric, icon, image, or text value.
	 */
	function StatisticValue(props) {
	  var children = props.children,
	      className = props.className,
	      text = props.text,
	      value = props.value;


	  var classes = (0, _classnames2.default)((0, _lib.useKeyOnly)(text, 'text'), 'value', className);
	  var rest = (0, _lib.getUnhandledProps)(StatisticValue, props);
	  var ElementType = (0, _lib.getElementType)(StatisticValue, props);

	  return _react2.default.createElement(
	    ElementType,
	    (0, _extends3.default)({}, rest, { className: classes }),
	    (0, _isNil3.default)(children) ? value : children
	  );
	}

	StatisticValue.handledProps = ['as', 'children', 'className', 'text', 'value'];
	StatisticValue._meta = {
	  name: 'StatisticValue',
	  parent: 'Statistic',
	  type: _lib.META.TYPES.VIEW
	};

	process.env.NODE_ENV !== "production" ? StatisticValue.propTypes = {
	  /** An element type to render as (string or function). */
	  as: _lib.customPropTypes.as,

	  /** Primary content. */
	  children: _propTypes2.default.node,

	  /** Additional classes. */
	  className: _propTypes2.default.string,

	  /** Format the value with smaller font size to fit nicely beside number values. */
	  text: _propTypes2.default.bool,

	  /** Primary content of the StatisticValue. Mutually exclusive with the children prop. */
	  value: _lib.customPropTypes.contentShorthand
	} : void 0;

	exports.default = StatisticValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ }),
/* 696 */
/***/ (function(module, exports) {

	// got from https://gist.github.com/bgrins/6194623
	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.isDataURL = isDataURL;

	function isDataURL(s) {
	  return !!s.match(isDataURL.regex);
	}

	isDataURL.regex = /^\s*data:([a-z]+\/[a-z]+(;[a-z\-]+\=[a-z\-]+)?)?(;base64)?,[a-z0-9\!\$\&\'\,\(\)\*\+\,\;\=\-\.\_\~\:\@\/\?\%\s]*\s*$/i;

/***/ }),
/* 697 */
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3)))

/***/ })
/******/ ]);